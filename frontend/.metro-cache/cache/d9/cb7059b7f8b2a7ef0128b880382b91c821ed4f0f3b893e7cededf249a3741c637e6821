{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectDestructuringEmpty","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"JWgwp1AYM3rN4k6Vft1eP0TCU4I=","exportNames":["*"],"imports":1}},{"name":"@radix-ui/react-dialog","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":22,"index":462},"end":{"line":13,"column":55,"index":495}}],"key":"zLCWZgGAEHlvXQz+fam4eRSFbsw=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":12,"index":509},"end":{"line":14,"column":28,"index":525}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n\n  var _objectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectDestructuringEmpty = require(_dependencyMap[1], \"@babel/runtime/helpers/objectDestructuringEmpty\");\n  const _excluded = [\"onPointerDownOutside\", \"style\", \"onOpenAutoFocus\"],\n    _excluded2 = [\"preventCycle\", \"children\"],\n    _excluded3 = [\"onDrag\", \"onOpenChange\", \"open\"],\n    _excluded4 = [\"container\"];\n  function __insertCSS(code) {\n    if (!code || typeof document == 'undefined') return;\n    let head = document.head || document.getElementsByTagName('head')[0];\n    let style = document.createElement('style');\n    style.type = 'text/css';\n    head.appendChild(style);\n    style.styleSheet ? style.styleSheet.cssText = code : style.appendChild(document.createTextNode(code));\n  }\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var DialogPrimitive = require(_dependencyMap[2], \"@radix-ui/react-dialog\");\n  var React = require(_dependencyMap[3], \"react\");\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = Object.create(null);\n    if (e) {\n      Object.keys(e).forEach(function (k) {\n        if (k !== 'default') {\n          var d = Object.getOwnPropertyDescriptor(e, k);\n          Object.defineProperty(n, k, d.get ? d : {\n            enumerable: true,\n            get: function () {\n              return e[k];\n            }\n          });\n        }\n      });\n    }\n    n.default = e;\n    return n;\n  }\n  var DialogPrimitive__namespace = /*#__PURE__*/_interopNamespace(DialogPrimitive);\n  var React__namespace = /*#__PURE__*/_interopNamespace(React);\n  const DrawerContext = React__namespace.default.createContext({\n    drawerRef: {\n      current: null\n    },\n    overlayRef: {\n      current: null\n    },\n    onPress: () => {},\n    onRelease: () => {},\n    onDrag: () => {},\n    onNestedDrag: () => {},\n    onNestedOpenChange: () => {},\n    onNestedRelease: () => {},\n    openProp: undefined,\n    dismissible: false,\n    isOpen: false,\n    isDragging: false,\n    keyboardIsOpen: {\n      current: false\n    },\n    snapPointsOffset: null,\n    snapPoints: null,\n    handleOnly: false,\n    modal: false,\n    shouldFade: false,\n    activeSnapPoint: null,\n    onOpenChange: () => {},\n    setActiveSnapPoint: () => {},\n    closeDrawer: () => {},\n    direction: 'bottom',\n    shouldAnimate: {\n      current: true\n    },\n    shouldScaleBackground: false,\n    setBackgroundColorOnScale: true,\n    noBodyStyles: false,\n    container: null,\n    autoFocus: false\n  });\n  const useDrawerContext = () => {\n    const context = React__namespace.default.useContext(DrawerContext);\n    if (!context) {\n      throw new Error('useDrawerContext must be used within a Drawer.Root');\n    }\n    return context;\n  };\n  __insertCSS(\"[data-vaul-drawer]{touch-action:none;will-change:transform;transition:transform .5s cubic-bezier(.32, .72, 0, 1);animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=open]{animation-name:slideFromBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=bottom][data-state=closed]{animation-name:slideToBottom}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=open]{animation-name:slideFromTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=top][data-state=closed]{animation-name:slideToTop}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=open]{animation-name:slideFromLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=left][data-state=closed]{animation-name:slideToLeft}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=open]{animation-name:slideFromRight}[data-vaul-drawer][data-vaul-snap-points=false][data-vaul-drawer-direction=right][data-state=closed]{animation-name:slideToRight}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--initial-transform,100%),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}[data-vaul-drawer][data-vaul-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--initial-transform,100%),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=top]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=bottom]{transform:translate3d(0,var(--snap-point-height,0),0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=left]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-drawer][data-vaul-delayed-snap-points=true][data-vaul-drawer-direction=right]{transform:translate3d(var(--snap-point-height,0),0,0)}[data-vaul-overlay][data-vaul-snap-points=false]{animation-duration:.5s;animation-timing-function:cubic-bezier(0.32,0.72,0,1)}[data-vaul-overlay][data-vaul-snap-points=false][data-state=open]{animation-name:fadeIn}[data-vaul-overlay][data-state=closed]{animation-name:fadeOut}[data-vaul-animate=false]{animation:none!important}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:0;transition:opacity .5s cubic-bezier(.32, .72, 0, 1)}[data-vaul-overlay][data-vaul-snap-points=true]{opacity:1}[data-vaul-drawer]:not([data-vaul-custom-container=true])::after{content:'';position:absolute;background:inherit;background-color:inherit}[data-vaul-drawer][data-vaul-drawer-direction=top]::after{top:initial;bottom:100%;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=bottom]::after{top:100%;bottom:initial;left:0;right:0;height:200%}[data-vaul-drawer][data-vaul-drawer-direction=left]::after{left:initial;right:100%;top:0;bottom:0;width:200%}[data-vaul-drawer][data-vaul-drawer-direction=right]::after{left:100%;right:initial;top:0;bottom:0;width:200%}[data-vaul-overlay][data-vaul-snap-points=true]:not([data-vaul-snap-points-overlay=true]):not(\\n[data-state=closed]\\n){opacity:0}[data-vaul-overlay][data-vaul-snap-points-overlay=true]{opacity:1}[data-vaul-handle]{display:block;position:relative;opacity:.7;background:#e2e2e4;margin-left:auto;margin-right:auto;height:5px;width:32px;border-radius:1rem;touch-action:pan-y}[data-vaul-handle]:active,[data-vaul-handle]:hover{opacity:1}[data-vaul-handle-hitarea]{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%);width:max(100%,2.75rem);height:max(100%,2.75rem);touch-action:inherit}@media (hover:hover) and (pointer:fine){[data-vaul-drawer]{user-select:none}}@media (pointer:fine){[data-vaul-handle-hitarea]:{width:100%;height:100%}}@keyframes fadeIn{from{opacity:0}to{opacity:1}}@keyframes fadeOut{to{opacity:0}}@keyframes slideFromBottom{from{transform:translate3d(0,var(--initial-transform,100%),0)}to{transform:translate3d(0,0,0)}}@keyframes slideToBottom{to{transform:translate3d(0,var(--initial-transform,100%),0)}}@keyframes slideFromTop{from{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}to{transform:translate3d(0,0,0)}}@keyframes slideToTop{to{transform:translate3d(0,calc(var(--initial-transform,100%) * -1),0)}}@keyframes slideFromLeft{from{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToLeft{to{transform:translate3d(calc(var(--initial-transform,100%) * -1),0,0)}}@keyframes slideFromRight{from{transform:translate3d(var(--initial-transform,100%),0,0)}to{transform:translate3d(0,0,0)}}@keyframes slideToRight{to{transform:translate3d(var(--initial-transform,100%),0,0)}}\");\n  function isMobileFirefox() {\n    const userAgent = navigator.userAgent;\n    return typeof window !== 'undefined' && (/Firefox/.test(userAgent) && /Mobile/.test(userAgent) ||\n    // Android Firefox\n    /FxiOS/.test(userAgent) // iOS Firefox\n    );\n  }\n  function isMac() {\n    return testPlatform(/^Mac/);\n  }\n  function isIPhone() {\n    return testPlatform(/^iPhone/);\n  }\n  function isSafari() {\n    return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n  }\n  function isIPad() {\n    return testPlatform(/^iPad/) ||\n    // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.\n    isMac() && navigator.maxTouchPoints > 1;\n  }\n  function isIOS() {\n    return isIPhone() || isIPad();\n  }\n  function testPlatform(re) {\n    return typeof window !== 'undefined' && window.navigator != null ? re.test(window.navigator.platform) : undefined;\n  }\n\n  // This code comes from https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/overlays/src/usePreventScroll.ts\n  const KEYBOARD_BUFFER = 24;\n  const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n  function chain$1(...callbacks) {\n    return (...args) => {\n      for (let callback of callbacks) {\n        if (typeof callback === 'function') {\n          callback(...args);\n        }\n      }\n    };\n  }\n  // @ts-ignore\n  const visualViewport = typeof document !== 'undefined' && window.visualViewport;\n  function isScrollable(node) {\n    let style = window.getComputedStyle(node);\n    return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);\n  }\n  function getScrollParent(node) {\n    if (isScrollable(node)) {\n      node = node.parentElement;\n    }\n    while (node && !isScrollable(node)) {\n      node = node.parentElement;\n    }\n    return node || document.scrollingElement || document.documentElement;\n  }\n  // HTML input types that do not cause the software keyboard to appear.\n  const nonTextInputTypes = new Set(['checkbox', 'radio', 'range', 'color', 'file', 'image', 'button', 'submit', 'reset']);\n  // The number of active usePreventScroll calls. Used to determine whether to revert back to the original page style/scroll position\n  let preventScrollCount = 0;\n  let restore;\n  /**\n   * Prevents scrolling on the document body on mount, and\n   * restores it on unmount. Also ensures that content does not\n   * shift due to the scrollbars disappearing.\n   */\n  function usePreventScroll(options = {}) {\n    let {\n      isDisabled\n    } = options;\n    useIsomorphicLayoutEffect(() => {\n      if (isDisabled) {\n        return;\n      }\n      preventScrollCount++;\n      if (preventScrollCount === 1) {\n        if (isIOS()) {\n          restore = preventScrollMobileSafari();\n        }\n      }\n      return () => {\n        preventScrollCount--;\n        if (preventScrollCount === 0) {\n          restore == null ? void 0 : restore();\n        }\n      };\n    }, [isDisabled]);\n  }\n  // Mobile Safari is a whole different beast. Even with overflow: hidden,\n  // it still scrolls the page in many situations:\n  //\n  // 1. When the bottom toolbar and address bar are collapsed, page scrolling is always allowed.\n  // 2. When the keyboard is visible, the viewport does not resize. Instead, the keyboard covers part of\n  //    it, so it becomes scrollable.\n  // 3. When tapping on an input, the page always scrolls so that the input is centered in the visual viewport.\n  //    This may cause even fixed position elements to scroll off the screen.\n  // 4. When using the next/previous buttons in the keyboard to navigate between inputs, the whole page always\n  //    scrolls, even if the input is inside a nested scrollable element that could be scrolled instead.\n  //\n  // In order to work around these cases, and prevent scrolling without jankiness, we do a few things:\n  //\n  // 1. Prevent default on `touchmove` events that are not in a scrollable element. This prevents touch scrolling\n  //    on the window.\n  // 2. Prevent default on `touchmove` events inside a scrollable element when the scroll position is at the\n  //    top or bottom. This avoids the whole page scrolling instead, but does prevent overscrolling.\n  // 3. Prevent default on `touchend` events on input elements and handle focusing the element ourselves.\n  // 4. When focusing an input, apply a transform to trick Safari into thinking the input is at the top\n  //    of the page, which prevents it from scrolling the page. After the input is focused, scroll the element\n  //    into view ourselves, without scrolling the whole page.\n  // 5. Offset the body by the scroll position using a negative margin and scroll to the top. This should appear the\n  //    same visually, but makes the actual scroll position always zero. This is required to make all of the\n  //    above work or Safari will still try to scroll the page when focusing an input.\n  // 6. As a last resort, handle window scroll events, and scroll back to the top. This can happen when attempting\n  //    to navigate to an input with the next/previous buttons that's outside a modal.\n  function preventScrollMobileSafari() {\n    let scrollable;\n    let lastY = 0;\n    let onTouchStart = e => {\n      // Store the nearest scrollable parent element from the element that the user touched.\n      scrollable = getScrollParent(e.target);\n      if (scrollable === document.documentElement && scrollable === document.body) {\n        return;\n      }\n      lastY = e.changedTouches[0].pageY;\n    };\n    let onTouchMove = e => {\n      // Prevent scrolling the window.\n      if (!scrollable || scrollable === document.documentElement || scrollable === document.body) {\n        e.preventDefault();\n        return;\n      }\n      // Prevent scrolling up when at the top and scrolling down when at the bottom\n      // of a nested scrollable area, otherwise mobile Safari will start scrolling\n      // the window instead. Unfortunately, this disables bounce scrolling when at\n      // the top but it's the best we can do.\n      let y = e.changedTouches[0].pageY;\n      let scrollTop = scrollable.scrollTop;\n      let bottom = scrollable.scrollHeight - scrollable.clientHeight;\n      if (bottom === 0) {\n        return;\n      }\n      if (scrollTop <= 0 && y > lastY || scrollTop >= bottom && y < lastY) {\n        e.preventDefault();\n      }\n      lastY = y;\n    };\n    let onTouchEnd = e => {\n      let target = e.target;\n      // Apply this change if we're not already focused on the target element\n      if (isInput(target) && target !== document.activeElement) {\n        e.preventDefault();\n        // Apply a transform to trick Safari into thinking the input is at the top of the page\n        // so it doesn't try to scroll it into view. When tapping on an input, this needs to\n        // be done before the \"focus\" event, so we have to focus the element ourselves.\n        target.style.transform = 'translateY(-2000px)';\n        target.focus();\n        requestAnimationFrame(() => {\n          target.style.transform = '';\n        });\n      }\n    };\n    let onFocus = e => {\n      let target = e.target;\n      if (isInput(target)) {\n        // Transform also needs to be applied in the focus event in cases where focus moves\n        // other than tapping on an input directly, e.g. the next/previous buttons in the\n        // software keyboard. In these cases, it seems applying the transform in the focus event\n        // is good enough, whereas when tapping an input, it must be done before the focus event. 🤷‍♂️\n        target.style.transform = 'translateY(-2000px)';\n        requestAnimationFrame(() => {\n          target.style.transform = '';\n          // This will have prevented the browser from scrolling the focused element into view,\n          // so we need to do this ourselves in a way that doesn't cause the whole page to scroll.\n          if (visualViewport) {\n            if (visualViewport.height < window.innerHeight) {\n              // If the keyboard is already visible, do this after one additional frame\n              // to wait for the transform to be removed.\n              requestAnimationFrame(() => {\n                scrollIntoView(target);\n              });\n            } else {\n              // Otherwise, wait for the visual viewport to resize before scrolling so we can\n              // measure the correct position to scroll to.\n              visualViewport.addEventListener('resize', () => scrollIntoView(target), {\n                once: true\n              });\n            }\n          }\n        });\n      }\n    };\n    let onWindowScroll = () => {\n      // Last resort. If the window scrolled, scroll it back to the top.\n      // It should always be at the top because the body will have a negative margin (see below).\n      window.scrollTo(0, 0);\n    };\n    // Record the original scroll position so we can restore it.\n    // Then apply a negative margin to the body to offset it by the scroll position. This will\n    // enable us to scroll the window to the top, which is required for the rest of this to work.\n    let scrollX = window.pageXOffset;\n    let scrollY = window.pageYOffset;\n    let restoreStyles = chain$1(setStyle(document.documentElement, 'paddingRight', `${window.innerWidth - document.documentElement.clientWidth}px`));\n    // Scroll to the top. The negative margin on the body will make this appear the same.\n    window.scrollTo(0, 0);\n    let removeEvents = chain$1(addEvent(document, 'touchstart', onTouchStart, {\n      passive: false,\n      capture: true\n    }), addEvent(document, 'touchmove', onTouchMove, {\n      passive: false,\n      capture: true\n    }), addEvent(document, 'touchend', onTouchEnd, {\n      passive: false,\n      capture: true\n    }), addEvent(document, 'focus', onFocus, true), addEvent(window, 'scroll', onWindowScroll));\n    return () => {\n      // Restore styles and scroll the page back to where it was.\n      restoreStyles();\n      removeEvents();\n      window.scrollTo(scrollX, scrollY);\n    };\n  }\n  // Sets a CSS property on an element, and returns a function to revert it to the previous value.\n  function setStyle(element, style, value) {\n    // https://github.com/microsoft/TypeScript/issues/17827#issuecomment-391663310\n    // @ts-ignore\n    let cur = element.style[style];\n    // @ts-ignore\n    element.style[style] = value;\n    return () => {\n      // @ts-ignore\n      element.style[style] = cur;\n    };\n  }\n  // Adds an event listener to an element, and returns a function to remove it.\n  function addEvent(target, event, handler, options) {\n    // @ts-ignore\n    target.addEventListener(event, handler, options);\n    return () => {\n      // @ts-ignore\n      target.removeEventListener(event, handler, options);\n    };\n  }\n  function scrollIntoView(target) {\n    let root = document.scrollingElement || document.documentElement;\n    while (target && target !== root) {\n      // Find the parent scrollable element and adjust the scroll position if the target is not already in view.\n      let scrollable = getScrollParent(target);\n      if (scrollable !== document.documentElement && scrollable !== document.body && scrollable !== target) {\n        let scrollableTop = scrollable.getBoundingClientRect().top;\n        let targetTop = target.getBoundingClientRect().top;\n        let targetBottom = target.getBoundingClientRect().bottom;\n        // Buffer is needed for some edge cases\n        const keyboardHeight = scrollable.getBoundingClientRect().bottom + KEYBOARD_BUFFER;\n        if (targetBottom > keyboardHeight) {\n          scrollable.scrollTop += targetTop - scrollableTop;\n        }\n      }\n      // @ts-ignore\n      target = scrollable.parentElement;\n    }\n  }\n  function isInput(target) {\n    return target instanceof HTMLInputElement && !nonTextInputTypes.has(target.type) || target instanceof HTMLTextAreaElement || target instanceof HTMLElement && target.isContentEditable;\n  }\n\n  // This code comes from https://github.com/radix-ui/primitives/tree/main/packages/react/compose-refs\n  /**\n   * Set a given ref to a given value\n   * This utility takes care of different types of refs: callback refs and RefObject(s)\n   */\n  function setRef(ref, value) {\n    if (typeof ref === 'function') {\n      ref(value);\n    } else if (ref !== null && ref !== undefined) {\n      ref.current = value;\n    }\n  }\n  /**\n   * A utility to compose multiple refs together\n   * Accepts callback refs and RefObject(s)\n   */\n  function composeRefs(...refs) {\n    return node => refs.forEach(ref => setRef(ref, node));\n  }\n  /**\n   * A custom hook that composes multiple refs\n   * Accepts callback refs and RefObject(s)\n   */\n  function useComposedRefs(...refs) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    return React__namespace.useCallback(composeRefs(...refs), refs);\n  }\n  const cache = new WeakMap();\n  function set(el, styles, ignoreCache = false) {\n    if (!el || !(el instanceof HTMLElement)) return;\n    let originalStyles = {};\n    Object.entries(styles).forEach(([key, value]) => {\n      if (key.startsWith('--')) {\n        el.style.setProperty(key, value);\n        return;\n      }\n      originalStyles[key] = el.style[key];\n      el.style[key] = value;\n    });\n    if (ignoreCache) return;\n    cache.set(el, originalStyles);\n  }\n  function reset(el, prop) {\n    if (!el || !(el instanceof HTMLElement)) return;\n    let originalStyles = cache.get(el);\n    if (!originalStyles) {\n      return;\n    }\n    {\n      el.style[prop] = originalStyles[prop];\n    }\n  }\n  const isVertical = direction => {\n    switch (direction) {\n      case 'top':\n      case 'bottom':\n        return true;\n      case 'left':\n      case 'right':\n        return false;\n      default:\n        return direction;\n    }\n  };\n  function getTranslate(element, direction) {\n    if (!element) {\n      return null;\n    }\n    const style = window.getComputedStyle(element);\n    const transform =\n    // @ts-ignore\n    style.transform || style.webkitTransform || style.mozTransform;\n    let mat = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (mat) {\n      // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d\n      return parseFloat(mat[1].split(', ')[isVertical(direction) ? 13 : 12]);\n    }\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\n    mat = transform.match(/^matrix\\((.+)\\)$/);\n    return mat ? parseFloat(mat[1].split(', ')[isVertical(direction) ? 5 : 4]) : null;\n  }\n  function dampenValue(v) {\n    return 8 * (Math.log(v + 1) - 2);\n  }\n  function assignStyle(element, style) {\n    if (!element) return () => {};\n    const prevStyle = element.style.cssText;\n    Object.assign(element.style, style);\n    return () => {\n      element.style.cssText = prevStyle;\n    };\n  }\n  /**\n   * Receives functions as arguments and returns a new function that calls all.\n   */\n  function chain(...fns) {\n    return (...args) => {\n      for (const fn of fns) {\n        if (typeof fn === 'function') {\n          // @ts-ignore\n          fn(...args);\n        }\n      }\n    };\n  }\n  const TRANSITIONS = {\n    DURATION: 0.5,\n    EASE: [0.32, 0.72, 0, 1]\n  };\n  const VELOCITY_THRESHOLD = 0.4;\n  const CLOSE_THRESHOLD = 0.25;\n  const SCROLL_LOCK_TIMEOUT = 100;\n  const BORDER_RADIUS = 8;\n  const NESTED_DISPLACEMENT = 16;\n  const WINDOW_TOP_OFFSET = 26;\n  const DRAG_CLASS = 'vaul-dragging';\n\n  // This code comes from https://github.com/radix-ui/primitives/blob/main/packages/react/use-controllable-state/src/useControllableState.tsx\n  function useCallbackRef(callback) {\n    const callbackRef = React__namespace.default.useRef(callback);\n    React__namespace.default.useEffect(() => {\n      callbackRef.current = callback;\n    });\n    // https://github.com/facebook/react/issues/19240\n    return React__namespace.default.useMemo(() => (...args) => callbackRef.current == null ? void 0 : callbackRef.current.call(callbackRef, ...args), []);\n  }\n  function useUncontrolledState({\n    defaultProp,\n    onChange\n  }) {\n    const uncontrolledState = React__namespace.default.useState(defaultProp);\n    const [value] = uncontrolledState;\n    const prevValueRef = React__namespace.default.useRef(value);\n    const handleChange = useCallbackRef(onChange);\n    React__namespace.default.useEffect(() => {\n      if (prevValueRef.current !== value) {\n        handleChange(value);\n        prevValueRef.current = value;\n      }\n    }, [value, prevValueRef, handleChange]);\n    return uncontrolledState;\n  }\n  function useControllableState({\n    prop,\n    defaultProp,\n    onChange = () => {}\n  }) {\n    const [uncontrolledProp, setUncontrolledProp] = useUncontrolledState({\n      defaultProp,\n      onChange\n    });\n    const isControlled = prop !== undefined;\n    const value = isControlled ? prop : uncontrolledProp;\n    const handleChange = useCallbackRef(onChange);\n    const setValue = React__namespace.default.useCallback(nextValue => {\n      if (isControlled) {\n        const setter = nextValue;\n        const value = typeof nextValue === 'function' ? setter(prop) : nextValue;\n        if (value !== prop) handleChange(value);\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    }, [isControlled, prop, setUncontrolledProp, handleChange]);\n    return [value, setValue];\n  }\n  function useSnapPoints({\n    activeSnapPointProp,\n    setActiveSnapPointProp,\n    snapPoints,\n    drawerRef,\n    overlayRef,\n    fadeFromIndex,\n    onSnapPointChange,\n    direction = 'bottom',\n    container,\n    snapToSequentialPoint\n  }) {\n    const [activeSnapPoint, setActiveSnapPoint] = useControllableState({\n      prop: activeSnapPointProp,\n      defaultProp: snapPoints == null ? void 0 : snapPoints[0],\n      onChange: setActiveSnapPointProp\n    });\n    const [windowDimensions, setWindowDimensions] = React__namespace.default.useState(typeof window !== 'undefined' ? {\n      innerWidth: window.innerWidth,\n      innerHeight: window.innerHeight\n    } : undefined);\n    React__namespace.default.useEffect(() => {\n      function onResize() {\n        setWindowDimensions({\n          innerWidth: window.innerWidth,\n          innerHeight: window.innerHeight\n        });\n      }\n      window.addEventListener('resize', onResize);\n      return () => window.removeEventListener('resize', onResize);\n    }, []);\n    const isLastSnapPoint = React__namespace.default.useMemo(() => activeSnapPoint === (snapPoints == null ? void 0 : snapPoints[snapPoints.length - 1]) || null, [snapPoints, activeSnapPoint]);\n    const activeSnapPointIndex = React__namespace.default.useMemo(() => {\n      var _snapPoints_findIndex;\n      return (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex(snapPoint => snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : null;\n    }, [snapPoints, activeSnapPoint]);\n    const shouldFade = snapPoints && snapPoints.length > 0 && (fadeFromIndex || fadeFromIndex === 0) && !Number.isNaN(fadeFromIndex) && snapPoints[fadeFromIndex] === activeSnapPoint || !snapPoints;\n    const snapPointsOffset = React__namespace.default.useMemo(() => {\n      const containerSize = container ? {\n        width: container.getBoundingClientRect().width,\n        height: container.getBoundingClientRect().height\n      } : typeof window !== 'undefined' ? {\n        width: window.innerWidth,\n        height: window.innerHeight\n      } : {\n        width: 0,\n        height: 0\n      };\n      var _snapPoints_map;\n      return (_snapPoints_map = snapPoints == null ? void 0 : snapPoints.map(snapPoint => {\n        const isPx = typeof snapPoint === 'string';\n        let snapPointAsNumber = 0;\n        if (isPx) {\n          snapPointAsNumber = parseInt(snapPoint, 10);\n        }\n        if (isVertical(direction)) {\n          const height = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.height : 0;\n          if (windowDimensions) {\n            return direction === 'bottom' ? containerSize.height - height : -containerSize.height + height;\n          }\n          return height;\n        }\n        const width = isPx ? snapPointAsNumber : windowDimensions ? snapPoint * containerSize.width : 0;\n        if (windowDimensions) {\n          return direction === 'right' ? containerSize.width - width : -containerSize.width + width;\n        }\n        return width;\n      })) != null ? _snapPoints_map : [];\n    }, [snapPoints, windowDimensions, container]);\n    const activeSnapPointOffset = React__namespace.default.useMemo(() => activeSnapPointIndex !== null ? snapPointsOffset == null ? void 0 : snapPointsOffset[activeSnapPointIndex] : null, [snapPointsOffset, activeSnapPointIndex]);\n    const snapToPoint = React__namespace.default.useCallback(dimension => {\n      var _snapPointsOffset_findIndex;\n      const newSnapPointIndex = (_snapPointsOffset_findIndex = snapPointsOffset == null ? void 0 : snapPointsOffset.findIndex(snapPointDim => snapPointDim === dimension)) != null ? _snapPointsOffset_findIndex : null;\n      onSnapPointChange(newSnapPointIndex);\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        transform: isVertical(direction) ? `translate3d(0, ${dimension}px, 0)` : `translate3d(${dimension}px, 0, 0)`\n      });\n      if (snapPointsOffset && newSnapPointIndex !== snapPointsOffset.length - 1 && fadeFromIndex !== undefined && newSnapPointIndex !== fadeFromIndex && newSnapPointIndex < fadeFromIndex) {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          opacity: '0'\n        });\n      } else {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          opacity: '1'\n        });\n      }\n      setActiveSnapPoint(snapPoints == null ? void 0 : snapPoints[Math.max(newSnapPointIndex, 0)]);\n    }, [drawerRef.current, snapPoints, snapPointsOffset, fadeFromIndex, overlayRef, setActiveSnapPoint]);\n    React__namespace.default.useEffect(() => {\n      if (activeSnapPoint || activeSnapPointProp) {\n        var _snapPoints_findIndex;\n        const newIndex = (_snapPoints_findIndex = snapPoints == null ? void 0 : snapPoints.findIndex(snapPoint => snapPoint === activeSnapPointProp || snapPoint === activeSnapPoint)) != null ? _snapPoints_findIndex : -1;\n        if (snapPointsOffset && newIndex !== -1 && typeof snapPointsOffset[newIndex] === 'number') {\n          snapToPoint(snapPointsOffset[newIndex]);\n        }\n      }\n    }, [activeSnapPoint, activeSnapPointProp, snapPoints, snapPointsOffset, snapToPoint]);\n    function onRelease({\n      draggedDistance,\n      closeDrawer,\n      velocity,\n      dismissible\n    }) {\n      if (fadeFromIndex === undefined) return;\n      const currentPosition = direction === 'bottom' || direction === 'right' ? (activeSnapPointOffset != null ? activeSnapPointOffset : 0) - draggedDistance : (activeSnapPointOffset != null ? activeSnapPointOffset : 0) + draggedDistance;\n      const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n      const isFirst = activeSnapPointIndex === 0;\n      const hasDraggedUp = draggedDistance > 0;\n      if (isOverlaySnapPoint) {\n        set(overlayRef.current, {\n          transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n        });\n      }\n      if (!snapToSequentialPoint && velocity > 2 && !hasDraggedUp) {\n        if (dismissible) closeDrawer();else snapToPoint(snapPointsOffset[0]); // snap to initial point\n        return;\n      }\n      if (!snapToSequentialPoint && velocity > 2 && hasDraggedUp && snapPointsOffset && snapPoints) {\n        snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n        return;\n      }\n      // Find the closest snap point to the current position\n      const closestSnapPoint = snapPointsOffset == null ? void 0 : snapPointsOffset.reduce((prev, curr) => {\n        if (typeof prev !== 'number' || typeof curr !== 'number') return prev;\n        return Math.abs(curr - currentPosition) < Math.abs(prev - currentPosition) ? curr : prev;\n      });\n      const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n      if (velocity > VELOCITY_THRESHOLD && Math.abs(draggedDistance) < dim * 0.4) {\n        const dragDirection = hasDraggedUp ? 1 : -1; // 1 = up, -1 = down\n        // Don't do anything if we swipe upwards while being on the last snap point\n        if (dragDirection > 0 && isLastSnapPoint && snapPoints) {\n          snapToPoint(snapPointsOffset[snapPoints.length - 1]);\n          return;\n        }\n        if (isFirst && dragDirection < 0 && dismissible) {\n          closeDrawer();\n        }\n        if (activeSnapPointIndex === null) return;\n        snapToPoint(snapPointsOffset[activeSnapPointIndex + dragDirection]);\n        return;\n      }\n      snapToPoint(closestSnapPoint);\n    }\n    function onDrag({\n      draggedDistance\n    }) {\n      if (activeSnapPointOffset === null) return;\n      const newValue = direction === 'bottom' || direction === 'right' ? activeSnapPointOffset - draggedDistance : activeSnapPointOffset + draggedDistance;\n      // Don't do anything if we exceed the last(biggest) snap point\n      if ((direction === 'bottom' || direction === 'right') && newValue < snapPointsOffset[snapPointsOffset.length - 1]) {\n        return;\n      }\n      if ((direction === 'top' || direction === 'left') && newValue > snapPointsOffset[snapPointsOffset.length - 1]) {\n        return;\n      }\n      set(drawerRef.current, {\n        transform: isVertical(direction) ? `translate3d(0, ${newValue}px, 0)` : `translate3d(${newValue}px, 0, 0)`\n      });\n    }\n    function getPercentageDragged(absDraggedDistance, isDraggingDown) {\n      if (!snapPoints || typeof activeSnapPointIndex !== 'number' || !snapPointsOffset || fadeFromIndex === undefined) return null;\n      // If this is true we are dragging to a snap point that is supposed to have an overlay\n      const isOverlaySnapPoint = activeSnapPointIndex === fadeFromIndex - 1;\n      const isOverlaySnapPointOrHigher = activeSnapPointIndex >= fadeFromIndex;\n      if (isOverlaySnapPointOrHigher && isDraggingDown) {\n        return 0;\n      }\n      // Don't animate, but still use this one if we are dragging away from the overlaySnapPoint\n      if (isOverlaySnapPoint && !isDraggingDown) return 1;\n      if (!shouldFade && !isOverlaySnapPoint) return null;\n      // Either fadeFrom index or the one before\n      const targetSnapPointIndex = isOverlaySnapPoint ? activeSnapPointIndex + 1 : activeSnapPointIndex - 1;\n      // Get the distance from overlaySnapPoint to the one before or vice-versa to calculate the opacity percentage accordingly\n      const snapPointDistance = isOverlaySnapPoint ? snapPointsOffset[targetSnapPointIndex] - snapPointsOffset[targetSnapPointIndex - 1] : snapPointsOffset[targetSnapPointIndex + 1] - snapPointsOffset[targetSnapPointIndex];\n      const percentageDragged = absDraggedDistance / Math.abs(snapPointDistance);\n      if (isOverlaySnapPoint) {\n        return 1 - percentageDragged;\n      } else {\n        return percentageDragged;\n      }\n    }\n    return {\n      isLastSnapPoint,\n      activeSnapPoint,\n      shouldFade,\n      getPercentageDragged,\n      setActiveSnapPoint,\n      activeSnapPointIndex,\n      onRelease,\n      onDrag,\n      snapPointsOffset\n    };\n  }\n  const noop = () => () => {};\n  function useScaleBackground() {\n    const {\n      direction,\n      isOpen,\n      shouldScaleBackground,\n      setBackgroundColorOnScale,\n      noBodyStyles\n    } = useDrawerContext();\n    const timeoutIdRef = React__namespace.default.useRef(null);\n    const initialBackgroundColor = React.useMemo(() => document.body.style.backgroundColor, []);\n    function getScale() {\n      return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n    }\n    React__namespace.default.useEffect(() => {\n      if (isOpen && shouldScaleBackground) {\n        if (timeoutIdRef.current) clearTimeout(timeoutIdRef.current);\n        const wrapper = document.querySelector('[data-vaul-drawer-wrapper]') || document.querySelector('[vaul-drawer-wrapper]');\n        if (!wrapper) return;\n        chain(setBackgroundColorOnScale && !noBodyStyles ? assignStyle(document.body, {\n          background: 'black'\n        }) : noop, assignStyle(wrapper, {\n          transformOrigin: isVertical(direction) ? 'top' : 'left',\n          transitionProperty: 'transform, border-radius',\n          transitionDuration: `${TRANSITIONS.DURATION}s`,\n          transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n        }));\n        const wrapperStylesCleanup = assignStyle(wrapper, Object.assign({\n          borderRadius: `${BORDER_RADIUS}px`,\n          overflow: 'hidden'\n        }, isVertical(direction) ? {\n          transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`\n        } : {\n          transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`\n        }));\n        return () => {\n          wrapperStylesCleanup();\n          timeoutIdRef.current = window.setTimeout(() => {\n            if (initialBackgroundColor) {\n              document.body.style.background = initialBackgroundColor;\n            } else {\n              document.body.style.removeProperty('background');\n            }\n          }, TRANSITIONS.DURATION * 1000);\n        };\n      }\n    }, [isOpen, shouldScaleBackground, initialBackgroundColor]);\n  }\n  let previousBodyPosition = null;\n  /**\n   * This hook is necessary to prevent buggy behavior on iOS devices (need to test on Android).\n   * I won't get into too much detail about what bugs it solves, but so far I've found that setting the body to `position: fixed` is the most reliable way to prevent those bugs.\n   * Issues that this hook solves:\n   * https://github.com/emilkowalski/vaul/issues/435\n   * https://github.com/emilkowalski/vaul/issues/433\n   * And more that I discovered, but were just not reported.\n   */\n  function usePositionFixed({\n    isOpen,\n    modal,\n    nested,\n    hasBeenOpened,\n    preventScrollRestoration,\n    noBodyStyles\n  }) {\n    const [activeUrl, setActiveUrl] = React__namespace.default.useState(() => typeof window !== 'undefined' ? window.location.href : '');\n    const scrollPos = React__namespace.default.useRef(0);\n    const setPositionFixed = React__namespace.default.useCallback(() => {\n      // All browsers on iOS will return true here.\n      if (!isSafari()) return;\n      // If previousBodyPosition is already set, don't set it again.\n      if (previousBodyPosition === null && isOpen && !noBodyStyles) {\n        previousBodyPosition = {\n          position: document.body.style.position,\n          top: document.body.style.top,\n          left: document.body.style.left,\n          height: document.body.style.height,\n          right: 'unset'\n        };\n        // Update the dom inside an animation frame\n        const {\n          scrollX,\n          innerHeight\n        } = window;\n        document.body.style.setProperty('position', 'fixed', 'important');\n        Object.assign(document.body.style, {\n          top: `${-scrollPos.current}px`,\n          left: `${-scrollX}px`,\n          right: '0px',\n          height: 'auto'\n        });\n        window.setTimeout(() => window.requestAnimationFrame(() => {\n          // Attempt to check if the bottom bar appeared due to the position change\n          const bottomBarHeight = innerHeight - window.innerHeight;\n          if (bottomBarHeight && scrollPos.current >= innerHeight) {\n            // Move the content further up so that the bottom bar doesn't hide it\n            document.body.style.top = `${-(scrollPos.current + bottomBarHeight)}px`;\n          }\n        }), 300);\n      }\n    }, [isOpen]);\n    const restorePositionSetting = React__namespace.default.useCallback(() => {\n      // All browsers on iOS will return true here.\n      if (!isSafari()) return;\n      if (previousBodyPosition !== null && !noBodyStyles) {\n        // Convert the position from \"px\" to Int\n        const y = -parseInt(document.body.style.top, 10);\n        const x = -parseInt(document.body.style.left, 10);\n        // Restore styles\n        Object.assign(document.body.style, previousBodyPosition);\n        window.requestAnimationFrame(() => {\n          if (preventScrollRestoration && activeUrl !== window.location.href) {\n            setActiveUrl(window.location.href);\n            return;\n          }\n          window.scrollTo(x, y);\n        });\n        previousBodyPosition = null;\n      }\n    }, [activeUrl]);\n    React__namespace.default.useEffect(() => {\n      function onScroll() {\n        scrollPos.current = window.scrollY;\n      }\n      onScroll();\n      window.addEventListener('scroll', onScroll);\n      return () => {\n        window.removeEventListener('scroll', onScroll);\n      };\n    }, []);\n    React__namespace.default.useEffect(() => {\n      if (!modal) return;\n      return () => {\n        if (typeof document === 'undefined') return;\n        // Another drawer is opened, safe to ignore the execution\n        const hasDrawerOpened = !!document.querySelector('[data-vaul-drawer]');\n        if (hasDrawerOpened) return;\n        restorePositionSetting();\n      };\n    }, [modal, restorePositionSetting]);\n    React__namespace.default.useEffect(() => {\n      if (nested || !hasBeenOpened) return;\n      // This is needed to force Safari toolbar to show **before** the drawer starts animating to prevent a gnarly shift from happening\n      if (isOpen) {\n        // avoid for standalone mode (PWA)\n        const isStandalone = window.matchMedia('(display-mode: standalone)').matches;\n        !isStandalone && setPositionFixed();\n        if (!modal) {\n          window.setTimeout(() => {\n            restorePositionSetting();\n          }, 500);\n        }\n      } else {\n        restorePositionSetting();\n      }\n    }, [isOpen, hasBeenOpened, activeUrl, modal, nested, setPositionFixed, restorePositionSetting]);\n    return {\n      restorePositionSetting\n    };\n  }\n  function Root({\n    open: openProp,\n    onOpenChange,\n    children,\n    onDrag: onDragProp,\n    onRelease: onReleaseProp,\n    snapPoints,\n    shouldScaleBackground = false,\n    setBackgroundColorOnScale = true,\n    closeThreshold = CLOSE_THRESHOLD,\n    scrollLockTimeout = SCROLL_LOCK_TIMEOUT,\n    dismissible = true,\n    handleOnly = false,\n    fadeFromIndex = snapPoints && snapPoints.length - 1,\n    activeSnapPoint: activeSnapPointProp,\n    setActiveSnapPoint: setActiveSnapPointProp,\n    fixed,\n    modal = true,\n    onClose,\n    nested,\n    noBodyStyles = false,\n    direction = 'bottom',\n    defaultOpen = false,\n    disablePreventScroll = true,\n    snapToSequentialPoint = false,\n    preventScrollRestoration = false,\n    repositionInputs = true,\n    onAnimationEnd,\n    container,\n    autoFocus = false\n  }) {\n    var _drawerRef_current, _drawerRef_current1;\n    const [isOpen = false, setIsOpen] = useControllableState({\n      defaultProp: defaultOpen,\n      prop: openProp,\n      onChange: o => {\n        onOpenChange == null ? void 0 : onOpenChange(o);\n        if (!o && !nested) {\n          restorePositionSetting();\n        }\n        setTimeout(() => {\n          onAnimationEnd == null ? void 0 : onAnimationEnd(o);\n        }, TRANSITIONS.DURATION * 1000);\n        if (o && !modal) {\n          if (typeof window !== 'undefined') {\n            window.requestAnimationFrame(() => {\n              document.body.style.pointerEvents = 'auto';\n            });\n          }\n        }\n        if (!o) {\n          // This will be removed when the exit animation ends (`500ms`)\n          document.body.style.pointerEvents = 'auto';\n        }\n      }\n    });\n    const [hasBeenOpened, setHasBeenOpened] = React__namespace.default.useState(false);\n    const [isDragging, setIsDragging] = React__namespace.default.useState(false);\n    const [justReleased, setJustReleased] = React__namespace.default.useState(false);\n    const overlayRef = React__namespace.default.useRef(null);\n    const openTime = React__namespace.default.useRef(null);\n    const dragStartTime = React__namespace.default.useRef(null);\n    const dragEndTime = React__namespace.default.useRef(null);\n    const lastTimeDragPrevented = React__namespace.default.useRef(null);\n    const isAllowedToDrag = React__namespace.default.useRef(false);\n    const nestedOpenChangeTimer = React__namespace.default.useRef(null);\n    const pointerStart = React__namespace.default.useRef(0);\n    const keyboardIsOpen = React__namespace.default.useRef(false);\n    const shouldAnimate = React__namespace.default.useRef(!defaultOpen);\n    const previousDiffFromInitial = React__namespace.default.useRef(0);\n    const drawerRef = React__namespace.default.useRef(null);\n    const drawerHeightRef = React__namespace.default.useRef(((_drawerRef_current = drawerRef.current) == null ? void 0 : _drawerRef_current.getBoundingClientRect().height) || 0);\n    const drawerWidthRef = React__namespace.default.useRef(((_drawerRef_current1 = drawerRef.current) == null ? void 0 : _drawerRef_current1.getBoundingClientRect().width) || 0);\n    const initialDrawerHeight = React__namespace.default.useRef(0);\n    const onSnapPointChange = React__namespace.default.useCallback(activeSnapPointIndex => {\n      // Change openTime ref when we reach the last snap point to prevent dragging for 500ms incase it's scrollable.\n      if (snapPoints && activeSnapPointIndex === snapPointsOffset.length - 1) openTime.current = new Date();\n    }, []);\n    const {\n      activeSnapPoint,\n      activeSnapPointIndex,\n      setActiveSnapPoint,\n      onRelease: onReleaseSnapPoints,\n      snapPointsOffset,\n      onDrag: onDragSnapPoints,\n      shouldFade,\n      getPercentageDragged: getSnapPointsPercentageDragged\n    } = useSnapPoints({\n      snapPoints,\n      activeSnapPointProp,\n      setActiveSnapPointProp,\n      drawerRef,\n      fadeFromIndex,\n      overlayRef,\n      onSnapPointChange,\n      direction,\n      container,\n      snapToSequentialPoint\n    });\n    usePreventScroll({\n      isDisabled: !isOpen || isDragging || !modal || justReleased || !hasBeenOpened || !repositionInputs || !disablePreventScroll\n    });\n    const {\n      restorePositionSetting\n    } = usePositionFixed({\n      isOpen,\n      modal,\n      nested: nested != null ? nested : false,\n      hasBeenOpened,\n      preventScrollRestoration,\n      noBodyStyles\n    });\n    function getScale() {\n      return (window.innerWidth - WINDOW_TOP_OFFSET) / window.innerWidth;\n    }\n    function onPress(event) {\n      var _drawerRef_current, _drawerRef_current1;\n      if (!dismissible && !snapPoints) return;\n      if (drawerRef.current && !drawerRef.current.contains(event.target)) return;\n      drawerHeightRef.current = ((_drawerRef_current = drawerRef.current) == null ? void 0 : _drawerRef_current.getBoundingClientRect().height) || 0;\n      drawerWidthRef.current = ((_drawerRef_current1 = drawerRef.current) == null ? void 0 : _drawerRef_current1.getBoundingClientRect().width) || 0;\n      setIsDragging(true);\n      dragStartTime.current = new Date();\n      // iOS doesn't trigger mouseUp after scrolling so we need to listen to touched in order to disallow dragging\n      if (isIOS()) {\n        window.addEventListener('touchend', () => isAllowedToDrag.current = false, {\n          once: true\n        });\n      }\n      // Ensure we maintain correct pointer capture even when going outside of the drawer\n      event.target.setPointerCapture(event.pointerId);\n      pointerStart.current = isVertical(direction) ? event.pageY : event.pageX;\n    }\n    function shouldDrag(el, isDraggingInDirection) {\n      var _window_getSelection;\n      let element = el;\n      const highlightedText = (_window_getSelection = window.getSelection()) == null ? void 0 : _window_getSelection.toString();\n      const swipeAmount = drawerRef.current ? getTranslate(drawerRef.current, direction) : null;\n      const date = new Date();\n      // Fixes https://github.com/emilkowalski/vaul/issues/483\n      if (element.tagName === 'SELECT') {\n        return false;\n      }\n      if (element.hasAttribute('data-vaul-no-drag') || element.closest('[data-vaul-no-drag]')) {\n        return false;\n      }\n      if (direction === 'right' || direction === 'left') {\n        return true;\n      }\n      // Allow scrolling when animating\n      if (openTime.current && date.getTime() - openTime.current.getTime() < 500) {\n        return false;\n      }\n      if (swipeAmount !== null) {\n        if (direction === 'bottom' ? swipeAmount > 0 : swipeAmount < 0) {\n          return true;\n        }\n      }\n      // Don't drag if there's highlighted text\n      if (highlightedText && highlightedText.length > 0) {\n        return false;\n      }\n      // Disallow dragging if drawer was scrolled within `scrollLockTimeout`\n      if (lastTimeDragPrevented.current && date.getTime() - lastTimeDragPrevented.current.getTime() < scrollLockTimeout && swipeAmount === 0) {\n        lastTimeDragPrevented.current = date;\n        return false;\n      }\n      if (isDraggingInDirection) {\n        lastTimeDragPrevented.current = date;\n        // We are dragging down so we should allow scrolling\n        return false;\n      }\n      // Keep climbing up the DOM tree as long as there's a parent\n      while (element) {\n        // Check if the element is scrollable\n        if (element.scrollHeight > element.clientHeight) {\n          if (element.scrollTop !== 0) {\n            lastTimeDragPrevented.current = new Date();\n            // The element is scrollable and not scrolled to the top, so don't drag\n            return false;\n          }\n          if (element.getAttribute('role') === 'dialog') {\n            return true;\n          }\n        }\n        // Move up to the parent element\n        element = element.parentNode;\n      }\n      // No scrollable parents not scrolled to the top found, so drag\n      return true;\n    }\n    function onDrag(event) {\n      if (!drawerRef.current) {\n        return;\n      }\n      // We need to know how much of the drawer has been dragged in percentages so that we can transform background accordingly\n      if (isDragging) {\n        const directionMultiplier = direction === 'bottom' || direction === 'right' ? 1 : -1;\n        const draggedDistance = (pointerStart.current - (isVertical(direction) ? event.pageY : event.pageX)) * directionMultiplier;\n        const isDraggingInDirection = draggedDistance > 0;\n        // Pre condition for disallowing dragging in the close direction.\n        const noCloseSnapPointsPreCondition = snapPoints && !dismissible && !isDraggingInDirection;\n        // Disallow dragging down to close when first snap point is the active one and dismissible prop is set to false.\n        if (noCloseSnapPointsPreCondition && activeSnapPointIndex === 0) return;\n        // We need to capture last time when drag with scroll was triggered and have a timeout between\n        const absDraggedDistance = Math.abs(draggedDistance);\n        const wrapper = document.querySelector('[data-vaul-drawer-wrapper]');\n        const drawerDimension = direction === 'bottom' || direction === 'top' ? drawerHeightRef.current : drawerWidthRef.current;\n        // Calculate the percentage dragged, where 1 is the closed position\n        let percentageDragged = absDraggedDistance / drawerDimension;\n        const snapPointPercentageDragged = getSnapPointsPercentageDragged(absDraggedDistance, isDraggingInDirection);\n        if (snapPointPercentageDragged !== null) {\n          percentageDragged = snapPointPercentageDragged;\n        }\n        // Disallow close dragging beyond the smallest snap point.\n        if (noCloseSnapPointsPreCondition && percentageDragged >= 1) {\n          return;\n        }\n        if (!isAllowedToDrag.current && !shouldDrag(event.target, isDraggingInDirection)) return;\n        drawerRef.current.classList.add(DRAG_CLASS);\n        // If shouldDrag gave true once after pressing down on the drawer, we set isAllowedToDrag to true and it will remain true until we let go, there's no reason to disable dragging mid way, ever, and that's the solution to it\n        isAllowedToDrag.current = true;\n        set(drawerRef.current, {\n          transition: 'none'\n        });\n        set(overlayRef.current, {\n          transition: 'none'\n        });\n        if (snapPoints) {\n          onDragSnapPoints({\n            draggedDistance\n          });\n        }\n        // Run this only if snapPoints are not defined or if we are at the last snap point (highest one)\n        if (isDraggingInDirection && !snapPoints) {\n          const dampenedDraggedDistance = dampenValue(draggedDistance);\n          const translateValue = Math.min(dampenedDraggedDistance * -1, 0) * directionMultiplier;\n          set(drawerRef.current, {\n            transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n          });\n          return;\n        }\n        const opacityValue = 1 - percentageDragged;\n        if (shouldFade || fadeFromIndex && activeSnapPointIndex === fadeFromIndex - 1) {\n          onDragProp == null ? void 0 : onDragProp(event, percentageDragged);\n          set(overlayRef.current, {\n            opacity: `${opacityValue}`,\n            transition: 'none'\n          }, true);\n        }\n        if (wrapper && overlayRef.current && shouldScaleBackground) {\n          // Calculate percentageDragged as a fraction (0 to 1)\n          const scaleValue = Math.min(getScale() + percentageDragged * (1 - getScale()), 1);\n          const borderRadiusValue = 8 - percentageDragged * 8;\n          const translateValue = Math.max(0, 14 - percentageDragged * 14);\n          set(wrapper, {\n            borderRadius: `${borderRadiusValue}px`,\n            transform: isVertical(direction) ? `scale(${scaleValue}) translate3d(0, ${translateValue}px, 0)` : `scale(${scaleValue}) translate3d(${translateValue}px, 0, 0)`,\n            transition: 'none'\n          }, true);\n        }\n        if (!snapPoints) {\n          const translateValue = absDraggedDistance * directionMultiplier;\n          set(drawerRef.current, {\n            transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n          });\n        }\n      }\n    }\n    React__namespace.default.useEffect(() => {\n      window.requestAnimationFrame(() => {\n        shouldAnimate.current = true;\n      });\n    }, []);\n    React__namespace.default.useEffect(() => {\n      var _window_visualViewport;\n      function onVisualViewportChange() {\n        if (!drawerRef.current || !repositionInputs) return;\n        const focusedElement = document.activeElement;\n        if (isInput(focusedElement) || keyboardIsOpen.current) {\n          var _window_visualViewport;\n          const visualViewportHeight = ((_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.height) || 0;\n          const totalHeight = window.innerHeight;\n          // This is the height of the keyboard\n          let diffFromInitial = totalHeight - visualViewportHeight;\n          const drawerHeight = drawerRef.current.getBoundingClientRect().height || 0;\n          // Adjust drawer height only if it's tall enough\n          const isTallEnough = drawerHeight > totalHeight * 0.8;\n          if (!initialDrawerHeight.current) {\n            initialDrawerHeight.current = drawerHeight;\n          }\n          const offsetFromTop = drawerRef.current.getBoundingClientRect().top;\n          // visualViewport height may change due to somq e subtle changes to the keyboard. Checking if the height changed by 60 or more will make sure that they keyboard really changed its open state.\n          if (Math.abs(previousDiffFromInitial.current - diffFromInitial) > 60) {\n            keyboardIsOpen.current = !keyboardIsOpen.current;\n          }\n          if (snapPoints && snapPoints.length > 0 && snapPointsOffset && activeSnapPointIndex) {\n            const activeSnapPointHeight = snapPointsOffset[activeSnapPointIndex] || 0;\n            diffFromInitial += activeSnapPointHeight;\n          }\n          previousDiffFromInitial.current = diffFromInitial;\n          // We don't have to change the height if the input is in view, when we are here we are in the opened keyboard state so we can correctly check if the input is in view\n          if (drawerHeight > visualViewportHeight || keyboardIsOpen.current) {\n            const height = drawerRef.current.getBoundingClientRect().height;\n            let newDrawerHeight = height;\n            if (height > visualViewportHeight) {\n              newDrawerHeight = visualViewportHeight - (isTallEnough ? offsetFromTop : WINDOW_TOP_OFFSET);\n            }\n            // When fixed, don't move the drawer upwards if there's space, but rather only change it's height so it's fully scrollable when the keyboard is open\n            if (fixed) {\n              drawerRef.current.style.height = `${height - Math.max(diffFromInitial, 0)}px`;\n            } else {\n              drawerRef.current.style.height = `${Math.max(newDrawerHeight, visualViewportHeight - offsetFromTop)}px`;\n            }\n          } else if (!isMobileFirefox()) {\n            drawerRef.current.style.height = `${initialDrawerHeight.current}px`;\n          }\n          if (snapPoints && snapPoints.length > 0 && !keyboardIsOpen.current) {\n            drawerRef.current.style.bottom = `0px`;\n          } else {\n            // Negative bottom value would never make sense\n            drawerRef.current.style.bottom = `${Math.max(diffFromInitial, 0)}px`;\n          }\n        }\n      }\n      (_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.addEventListener('resize', onVisualViewportChange);\n      return () => {\n        var _window_visualViewport;\n        return (_window_visualViewport = window.visualViewport) == null ? void 0 : _window_visualViewport.removeEventListener('resize', onVisualViewportChange);\n      };\n    }, [activeSnapPointIndex, snapPoints, snapPointsOffset]);\n    function closeDrawer(fromWithin) {\n      cancelDrag();\n      onClose == null ? void 0 : onClose();\n      if (!fromWithin) {\n        setIsOpen(false);\n      }\n      setTimeout(() => {\n        if (snapPoints) {\n          setActiveSnapPoint(snapPoints[0]);\n        }\n      }, TRANSITIONS.DURATION * 1000); // seconds to ms\n    }\n    function resetDrawer() {\n      if (!drawerRef.current) return;\n      const wrapper = document.querySelector('[data-vaul-drawer-wrapper]');\n      const currentSwipeAmount = getTranslate(drawerRef.current, direction);\n      set(drawerRef.current, {\n        transform: 'translate3d(0, 0, 0)',\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n      });\n      set(overlayRef.current, {\n        transition: `opacity ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        opacity: '1'\n      });\n      // Don't reset background if swiped upwards\n      if (shouldScaleBackground && currentSwipeAmount && currentSwipeAmount > 0 && isOpen) {\n        set(wrapper, Object.assign({\n          borderRadius: `${BORDER_RADIUS}px`,\n          overflow: 'hidden'\n        }, isVertical(direction) ? {\n          transform: `scale(${getScale()}) translate3d(0, calc(env(safe-area-inset-top) + 14px), 0)`,\n          transformOrigin: 'top'\n        } : {\n          transform: `scale(${getScale()}) translate3d(calc(env(safe-area-inset-top) + 14px), 0, 0)`,\n          transformOrigin: 'left'\n        }, {\n          transitionProperty: 'transform, border-radius',\n          transitionDuration: `${TRANSITIONS.DURATION}s`,\n          transitionTimingFunction: `cubic-bezier(${TRANSITIONS.EASE.join(',')})`\n        }), true);\n      }\n    }\n    function cancelDrag() {\n      if (!isDragging || !drawerRef.current) return;\n      drawerRef.current.classList.remove(DRAG_CLASS);\n      isAllowedToDrag.current = false;\n      setIsDragging(false);\n      dragEndTime.current = new Date();\n    }\n    function onRelease(event) {\n      if (!isDragging || !drawerRef.current) return;\n      drawerRef.current.classList.remove(DRAG_CLASS);\n      isAllowedToDrag.current = false;\n      setIsDragging(false);\n      dragEndTime.current = new Date();\n      const swipeAmount = getTranslate(drawerRef.current, direction);\n      if (!event || !shouldDrag(event.target, false) || !swipeAmount || Number.isNaN(swipeAmount)) return;\n      if (dragStartTime.current === null) return;\n      const timeTaken = dragEndTime.current.getTime() - dragStartTime.current.getTime();\n      const distMoved = pointerStart.current - (isVertical(direction) ? event.pageY : event.pageX);\n      const velocity = Math.abs(distMoved) / timeTaken;\n      if (velocity > 0.05) {\n        // `justReleased` is needed to prevent the drawer from focusing on an input when the drag ends, as it's not the intent most of the time.\n        setJustReleased(true);\n        setTimeout(() => {\n          setJustReleased(false);\n        }, 200);\n      }\n      if (snapPoints) {\n        const directionMultiplier = direction === 'bottom' || direction === 'right' ? 1 : -1;\n        onReleaseSnapPoints({\n          draggedDistance: distMoved * directionMultiplier,\n          closeDrawer,\n          velocity,\n          dismissible\n        });\n        onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n        return;\n      }\n      // Moved upwards, don't do anything\n      if (direction === 'bottom' || direction === 'right' ? distMoved > 0 : distMoved < 0) {\n        resetDrawer();\n        onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n        return;\n      }\n      if (velocity > VELOCITY_THRESHOLD) {\n        closeDrawer();\n        onReleaseProp == null ? void 0 : onReleaseProp(event, false);\n        return;\n      }\n      var _drawerRef_current_getBoundingClientRect_height;\n      const visibleDrawerHeight = Math.min((_drawerRef_current_getBoundingClientRect_height = drawerRef.current.getBoundingClientRect().height) != null ? _drawerRef_current_getBoundingClientRect_height : 0, window.innerHeight);\n      var _drawerRef_current_getBoundingClientRect_width;\n      const visibleDrawerWidth = Math.min((_drawerRef_current_getBoundingClientRect_width = drawerRef.current.getBoundingClientRect().width) != null ? _drawerRef_current_getBoundingClientRect_width : 0, window.innerWidth);\n      const isHorizontalSwipe = direction === 'left' || direction === 'right';\n      if (Math.abs(swipeAmount) >= (isHorizontalSwipe ? visibleDrawerWidth : visibleDrawerHeight) * closeThreshold) {\n        closeDrawer();\n        onReleaseProp == null ? void 0 : onReleaseProp(event, false);\n        return;\n      }\n      onReleaseProp == null ? void 0 : onReleaseProp(event, true);\n      resetDrawer();\n    }\n    React__namespace.default.useEffect(() => {\n      // Trigger enter animation without using CSS animation\n      if (isOpen) {\n        set(document.documentElement, {\n          scrollBehavior: 'auto'\n        });\n        openTime.current = new Date();\n      }\n      return () => {\n        reset(document.documentElement, 'scrollBehavior');\n      };\n    }, [isOpen]);\n    function onNestedOpenChange(o) {\n      const scale = o ? (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth : 1;\n      const initialTranslate = o ? -NESTED_DISPLACEMENT : 0;\n      if (nestedOpenChangeTimer.current) {\n        window.clearTimeout(nestedOpenChangeTimer.current);\n      }\n      set(drawerRef.current, {\n        transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n        transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${initialTranslate}px, 0)` : `scale(${scale}) translate3d(${initialTranslate}px, 0, 0)`\n      });\n      if (!o && drawerRef.current) {\n        nestedOpenChangeTimer.current = setTimeout(() => {\n          const translateValue = getTranslate(drawerRef.current, direction);\n          set(drawerRef.current, {\n            transition: 'none',\n            transform: isVertical(direction) ? `translate3d(0, ${translateValue}px, 0)` : `translate3d(${translateValue}px, 0, 0)`\n          });\n        }, 500);\n      }\n    }\n    function onNestedDrag(_event, percentageDragged) {\n      if (percentageDragged < 0) return;\n      const initialScale = (window.innerWidth - NESTED_DISPLACEMENT) / window.innerWidth;\n      const newScale = initialScale + percentageDragged * (1 - initialScale);\n      const newTranslate = -NESTED_DISPLACEMENT + percentageDragged * NESTED_DISPLACEMENT;\n      set(drawerRef.current, {\n        transform: isVertical(direction) ? `scale(${newScale}) translate3d(0, ${newTranslate}px, 0)` : `scale(${newScale}) translate3d(${newTranslate}px, 0, 0)`,\n        transition: 'none'\n      });\n    }\n    function onNestedRelease(_event, o) {\n      const dim = isVertical(direction) ? window.innerHeight : window.innerWidth;\n      const scale = o ? (dim - NESTED_DISPLACEMENT) / dim : 1;\n      const translate = o ? -NESTED_DISPLACEMENT : 0;\n      if (o) {\n        set(drawerRef.current, {\n          transition: `transform ${TRANSITIONS.DURATION}s cubic-bezier(${TRANSITIONS.EASE.join(',')})`,\n          transform: isVertical(direction) ? `scale(${scale}) translate3d(0, ${translate}px, 0)` : `scale(${scale}) translate3d(${translate}px, 0, 0)`\n        });\n      }\n    }\n    React__namespace.default.useEffect(() => {\n      if (!modal) {\n        // Need to do this manually unfortunately\n        window.requestAnimationFrame(() => {\n          document.body.style.pointerEvents = 'auto';\n        });\n      }\n    }, [modal]);\n    return /*#__PURE__*/React__namespace.default.createElement(DialogPrimitive__namespace.Root, {\n      defaultOpen: defaultOpen,\n      onOpenChange: open => {\n        if (!dismissible && !open) return;\n        if (open) {\n          setHasBeenOpened(true);\n        } else {\n          closeDrawer(true);\n        }\n        setIsOpen(open);\n      },\n      open: isOpen\n    }, /*#__PURE__*/React__namespace.default.createElement(DrawerContext.Provider, {\n      value: {\n        activeSnapPoint,\n        snapPoints,\n        setActiveSnapPoint,\n        drawerRef,\n        overlayRef,\n        onOpenChange,\n        onPress,\n        onRelease,\n        onDrag,\n        dismissible,\n        shouldAnimate,\n        handleOnly,\n        isOpen,\n        isDragging,\n        shouldFade,\n        closeDrawer,\n        onNestedDrag,\n        onNestedOpenChange,\n        onNestedRelease,\n        keyboardIsOpen,\n        modal,\n        snapPointsOffset,\n        activeSnapPointIndex,\n        direction,\n        shouldScaleBackground,\n        setBackgroundColorOnScale,\n        noBodyStyles,\n        container,\n        autoFocus\n      }\n    }, children));\n  }\n  const Overlay = /*#__PURE__*/React__namespace.default.forwardRef(function (_ref, ref) {\n    let rest = Object.assign({}, (_objectDestructuringEmpty(_ref), _ref));\n    const {\n      overlayRef,\n      snapPoints,\n      onRelease,\n      shouldFade,\n      isOpen,\n      modal,\n      shouldAnimate\n    } = useDrawerContext();\n    const composedRef = useComposedRefs(ref, overlayRef);\n    const hasSnapPoints = snapPoints && snapPoints.length > 0;\n    // Overlay is the component that is locking scroll, removing it will unlock the scroll without having to dig into Radix's Dialog library\n    if (!modal) {\n      return null;\n    }\n    const onMouseUp = React__namespace.default.useCallback(event => onRelease(event), [onRelease]);\n    return /*#__PURE__*/React__namespace.default.createElement(DialogPrimitive__namespace.Overlay, Object.assign({\n      onMouseUp: onMouseUp,\n      ref: composedRef,\n      \"data-vaul-overlay\": \"\",\n      \"data-vaul-snap-points\": isOpen && hasSnapPoints ? 'true' : 'false',\n      \"data-vaul-snap-points-overlay\": isOpen && shouldFade ? 'true' : 'false',\n      \"data-vaul-animate\": (shouldAnimate == null ? void 0 : shouldAnimate.current) ? 'true' : 'false'\n    }, rest));\n  });\n  Overlay.displayName = 'Drawer.Overlay';\n  const Content = /*#__PURE__*/React__namespace.default.forwardRef(function (_ref2, ref) {\n    let {\n        onPointerDownOutside,\n        style,\n        onOpenAutoFocus\n      } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, _excluded);\n    const {\n      drawerRef,\n      onPress,\n      onRelease,\n      onDrag,\n      keyboardIsOpen,\n      snapPointsOffset,\n      activeSnapPointIndex,\n      modal,\n      isOpen,\n      direction,\n      snapPoints,\n      container,\n      handleOnly,\n      shouldAnimate,\n      autoFocus\n    } = useDrawerContext();\n    // Needed to use transition instead of animations\n    const [delayedSnapPoints, setDelayedSnapPoints] = React__namespace.default.useState(false);\n    const composedRef = useComposedRefs(ref, drawerRef);\n    const pointerStartRef = React__namespace.default.useRef(null);\n    const lastKnownPointerEventRef = React__namespace.default.useRef(null);\n    const wasBeyondThePointRef = React__namespace.default.useRef(false);\n    const hasSnapPoints = snapPoints && snapPoints.length > 0;\n    useScaleBackground();\n    const isDeltaInDirection = (delta, direction, threshold = 0) => {\n      if (wasBeyondThePointRef.current) return true;\n      const deltaY = Math.abs(delta.y);\n      const deltaX = Math.abs(delta.x);\n      const isDeltaX = deltaX > deltaY;\n      const dFactor = ['bottom', 'right'].includes(direction) ? 1 : -1;\n      if (direction === 'left' || direction === 'right') {\n        const isReverseDirection = delta.x * dFactor < 0;\n        if (!isReverseDirection && deltaX >= 0 && deltaX <= threshold) {\n          return isDeltaX;\n        }\n      } else {\n        const isReverseDirection = delta.y * dFactor < 0;\n        if (!isReverseDirection && deltaY >= 0 && deltaY <= threshold) {\n          return !isDeltaX;\n        }\n      }\n      wasBeyondThePointRef.current = true;\n      return true;\n    };\n    React__namespace.default.useEffect(() => {\n      if (hasSnapPoints) {\n        window.requestAnimationFrame(() => {\n          setDelayedSnapPoints(true);\n        });\n      }\n    }, []);\n    function handleOnPointerUp(event) {\n      pointerStartRef.current = null;\n      wasBeyondThePointRef.current = false;\n      onRelease(event);\n    }\n    return /*#__PURE__*/React__namespace.default.createElement(DialogPrimitive__namespace.Content, Object.assign({\n      \"data-vaul-drawer-direction\": direction,\n      \"data-vaul-drawer\": \"\",\n      \"data-vaul-delayed-snap-points\": delayedSnapPoints ? 'true' : 'false',\n      \"data-vaul-snap-points\": isOpen && hasSnapPoints ? 'true' : 'false',\n      \"data-vaul-custom-container\": container ? 'true' : 'false',\n      \"data-vaul-animate\": (shouldAnimate == null ? void 0 : shouldAnimate.current) ? 'true' : 'false'\n    }, rest, {\n      ref: composedRef,\n      style: snapPointsOffset && snapPointsOffset.length > 0 ? Object.assign({\n        '--snap-point-height': `${snapPointsOffset[activeSnapPointIndex != null ? activeSnapPointIndex : 0]}px`\n      }, style) : style,\n      onPointerDown: event => {\n        if (handleOnly) return;\n        rest.onPointerDown == null ? void 0 : rest.onPointerDown.call(rest, event);\n        pointerStartRef.current = {\n          x: event.pageX,\n          y: event.pageY\n        };\n        onPress(event);\n      },\n      onOpenAutoFocus: e => {\n        onOpenAutoFocus == null ? void 0 : onOpenAutoFocus(e);\n        if (!autoFocus) {\n          e.preventDefault();\n        }\n      },\n      onPointerDownOutside: e => {\n        onPointerDownOutside == null ? void 0 : onPointerDownOutside(e);\n        if (!modal || e.defaultPrevented) {\n          e.preventDefault();\n          return;\n        }\n        if (keyboardIsOpen.current) {\n          keyboardIsOpen.current = false;\n        }\n      },\n      onFocusOutside: e => {\n        if (!modal) {\n          e.preventDefault();\n          return;\n        }\n      },\n      onPointerMove: event => {\n        lastKnownPointerEventRef.current = event;\n        if (handleOnly) return;\n        rest.onPointerMove == null ? void 0 : rest.onPointerMove.call(rest, event);\n        if (!pointerStartRef.current) return;\n        const yPosition = event.pageY - pointerStartRef.current.y;\n        const xPosition = event.pageX - pointerStartRef.current.x;\n        const swipeStartThreshold = event.pointerType === 'touch' ? 10 : 2;\n        const delta = {\n          x: xPosition,\n          y: yPosition\n        };\n        const isAllowedToSwipe = isDeltaInDirection(delta, direction, swipeStartThreshold);\n        if (isAllowedToSwipe) onDrag(event);else if (Math.abs(xPosition) > swipeStartThreshold || Math.abs(yPosition) > swipeStartThreshold) {\n          pointerStartRef.current = null;\n        }\n      },\n      onPointerUp: event => {\n        rest.onPointerUp == null ? void 0 : rest.onPointerUp.call(rest, event);\n        pointerStartRef.current = null;\n        wasBeyondThePointRef.current = false;\n        onRelease(event);\n      },\n      onPointerOut: event => {\n        rest.onPointerOut == null ? void 0 : rest.onPointerOut.call(rest, event);\n        handleOnPointerUp(lastKnownPointerEventRef.current);\n      },\n      onContextMenu: event => {\n        rest.onContextMenu == null ? void 0 : rest.onContextMenu.call(rest, event);\n        if (lastKnownPointerEventRef.current) {\n          handleOnPointerUp(lastKnownPointerEventRef.current);\n        }\n      }\n    }));\n  });\n  Content.displayName = 'Drawer.Content';\n  const LONG_HANDLE_PRESS_TIMEOUT = 250;\n  const DOUBLE_TAP_TIMEOUT = 120;\n  const Handle = /*#__PURE__*/React__namespace.default.forwardRef(function (_ref3, ref) {\n    let {\n        preventCycle = false,\n        children\n      } = _ref3,\n      rest = _objectWithoutPropertiesLoose(_ref3, _excluded2);\n    const {\n      closeDrawer,\n      isDragging,\n      snapPoints,\n      activeSnapPoint,\n      setActiveSnapPoint,\n      dismissible,\n      handleOnly,\n      isOpen,\n      onPress,\n      onDrag\n    } = useDrawerContext();\n    const closeTimeoutIdRef = React__namespace.default.useRef(null);\n    const shouldCancelInteractionRef = React__namespace.default.useRef(false);\n    function handleStartCycle() {\n      // Stop if this is the second click of a double click\n      if (shouldCancelInteractionRef.current) {\n        handleCancelInteraction();\n        return;\n      }\n      window.setTimeout(() => {\n        handleCycleSnapPoints();\n      }, DOUBLE_TAP_TIMEOUT);\n    }\n    function handleCycleSnapPoints() {\n      // Prevent accidental taps while resizing drawer\n      if (isDragging || preventCycle || shouldCancelInteractionRef.current) {\n        handleCancelInteraction();\n        return;\n      }\n      // Make sure to clear the timeout id if the user releases the handle before the cancel timeout\n      handleCancelInteraction();\n      if (!snapPoints || snapPoints.length === 0) {\n        if (!dismissible) {\n          closeDrawer();\n        }\n        return;\n      }\n      const isLastSnapPoint = activeSnapPoint === snapPoints[snapPoints.length - 1];\n      if (isLastSnapPoint && dismissible) {\n        closeDrawer();\n        return;\n      }\n      const currentSnapIndex = snapPoints.findIndex(point => point === activeSnapPoint);\n      if (currentSnapIndex === -1) return; // activeSnapPoint not found in snapPoints\n      const nextSnapPoint = snapPoints[currentSnapIndex + 1];\n      setActiveSnapPoint(nextSnapPoint);\n    }\n    function handleStartInteraction() {\n      closeTimeoutIdRef.current = window.setTimeout(() => {\n        // Cancel click interaction on a long press\n        shouldCancelInteractionRef.current = true;\n      }, LONG_HANDLE_PRESS_TIMEOUT);\n    }\n    function handleCancelInteraction() {\n      if (closeTimeoutIdRef.current) {\n        window.clearTimeout(closeTimeoutIdRef.current);\n      }\n      shouldCancelInteractionRef.current = false;\n    }\n    return /*#__PURE__*/React__namespace.default.createElement(\"div\", Object.assign({\n      onClick: handleStartCycle,\n      onPointerCancel: handleCancelInteraction,\n      onPointerDown: e => {\n        if (handleOnly) onPress(e);\n        handleStartInteraction();\n      },\n      onPointerMove: e => {\n        if (handleOnly) onDrag(e);\n      },\n      // onPointerUp is already handled by the content component\n      ref: ref,\n      \"data-vaul-drawer-visible\": isOpen ? 'true' : 'false',\n      \"data-vaul-handle\": \"\",\n      \"aria-hidden\": \"true\"\n    }, rest), /*#__PURE__*/React__namespace.default.createElement(\"span\", {\n      \"data-vaul-handle-hitarea\": \"\",\n      \"aria-hidden\": \"true\"\n    }, children));\n  });\n  Handle.displayName = 'Drawer.Handle';\n  function NestedRoot(_ref4) {\n    let {\n        onDrag,\n        onOpenChange,\n        open: nestedIsOpen\n      } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded3);\n    const {\n      onNestedDrag,\n      onNestedOpenChange,\n      onNestedRelease\n    } = useDrawerContext();\n    if (!onNestedDrag) {\n      throw new Error('Drawer.NestedRoot must be placed in another drawer');\n    }\n    return /*#__PURE__*/React__namespace.default.createElement(Root, Object.assign({\n      nested: true,\n      open: nestedIsOpen,\n      onClose: () => {\n        onNestedOpenChange(false);\n      },\n      onDrag: (e, p) => {\n        onNestedDrag(e, p);\n        onDrag == null ? void 0 : onDrag(e, p);\n      },\n      onOpenChange: o => {\n        if (o) {\n          onNestedOpenChange(o);\n        }\n        onOpenChange == null ? void 0 : onOpenChange(o);\n      },\n      onRelease: onNestedRelease\n    }, rest));\n  }\n  function Portal(props) {\n    const context = useDrawerContext();\n    const {\n        container = context.container\n      } = props,\n      portalProps = _objectWithoutPropertiesLoose(props, _excluded4);\n    return /*#__PURE__*/React__namespace.default.createElement(DialogPrimitive__namespace.Portal, Object.assign({\n      container: container\n    }, portalProps));\n  }\n  const Drawer = {\n    Root,\n    NestedRoot,\n    Content,\n    Overlay,\n    Trigger: DialogPrimitive__namespace.Trigger,\n    Portal,\n    Handle,\n    Close: DialogPrimitive__namespace.Close,\n    Title: DialogPrimitive__namespace.Title,\n    Description: DialogPrimitive__namespace.Description\n  };\n  exports.Content = Content;\n  exports.Drawer = Drawer;\n  exports.Handle = Handle;\n  exports.NestedRoot = NestedRoot;\n  exports.Overlay = Overlay;\n  exports.Portal = Portal;\n  exports.Root = Root;\n});","lineCount":1740,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_objectWithoutPropertiesLoose"],[4,35,1,13],[4,38,1,13,"require"],[4,45,1,13],[4,46,1,13,"_dependencyMap"],[4,60,1,13],[5,2,1,13],[5,6,1,13,"_objectDestructuringEmpty"],[5,31,1,13],[5,34,1,13,"require"],[5,41,1,13],[5,42,1,13,"_dependencyMap"],[5,56,1,13],[6,2,1,13],[6,8,1,13,"_excluded"],[6,17,1,13],[7,4,1,13,"_excluded2"],[7,14,1,13],[8,4,1,13,"_excluded3"],[8,14,1,13],[9,4,1,13,"_excluded4"],[9,14,1,13],[10,2,2,0],[10,11,2,9,"__insertCSS"],[10,22,2,20,"__insertCSS"],[10,23,2,21,"code"],[10,27,2,25],[10,29,2,27],[11,4,3,2],[11,8,3,6],[11,9,3,7,"code"],[11,13,3,11],[11,17,3,15],[11,24,3,22,"document"],[11,32,3,30],[11,36,3,34],[11,47,3,45],[11,49,3,47],[12,4,4,2],[12,8,4,6,"head"],[12,12,4,10],[12,15,4,13,"document"],[12,23,4,21],[12,24,4,22,"head"],[12,28,4,26],[12,32,4,30,"document"],[12,40,4,38],[12,41,4,39,"getElementsByTagName"],[12,61,4,59],[12,62,4,60],[12,68,4,66],[12,69,4,67],[12,70,4,68],[12,71,4,69],[12,72,4,70],[13,4,5,2],[13,8,5,6,"style"],[13,13,5,11],[13,16,5,14,"document"],[13,24,5,22],[13,25,5,23,"createElement"],[13,38,5,36],[13,39,5,37],[13,46,5,44],[13,47,5,45],[14,4,6,2,"style"],[14,9,6,7],[14,10,6,8,"type"],[14,14,6,12],[14,17,6,15],[14,27,6,25],[15,4,7,2,"head"],[15,8,7,6],[15,9,7,7,"appendChild"],[15,20,7,18],[15,21,7,19,"style"],[15,26,7,24],[15,27,7,25],[16,4,8,3,"style"],[16,9,8,8],[16,10,8,9,"styleSheet"],[16,20,8,19],[16,23,8,23,"style"],[16,28,8,28],[16,29,8,29,"styleSheet"],[16,39,8,39],[16,40,8,40,"cssText"],[16,47,8,47],[16,50,8,50,"code"],[16,54,8,54],[16,57,8,58,"style"],[16,62,8,63],[16,63,8,64,"appendChild"],[16,74,8,75],[16,75,8,76,"document"],[16,83,8,84],[16,84,8,85,"createTextNode"],[16,98,8,99],[16,99,8,100,"code"],[16,103,8,104],[16,104,8,105],[16,105,8,106],[17,2,9,0],[18,2,11,0,"Object"],[18,8,11,6],[18,9,11,7,"defineProperty"],[18,23,11,21],[18,24,11,22,"exports"],[18,31,11,29],[18,33,11,31],[18,45,11,43],[18,47,11,45],[19,4,11,47,"value"],[19,9,11,52],[19,11,11,54],[20,2,11,59],[20,3,11,60],[20,4,11,61],[21,2,13,0],[21,6,13,4,"DialogPrimitive"],[21,21,13,19],[21,24,13,22,"require"],[21,31,13,29],[21,32,13,29,"_dependencyMap"],[21,46,13,29],[21,75,13,54],[21,76,13,55],[22,2,14,0],[22,6,14,4,"React"],[22,11,14,9],[22,14,14,12,"require"],[22,21,14,19],[22,22,14,19,"_dependencyMap"],[22,36,14,19],[22,48,14,27],[22,49,14,28],[23,2,16,0],[23,11,16,9,"_interopNamespace"],[23,28,16,26,"_interopNamespace"],[23,29,16,27,"e"],[23,30,16,28],[23,32,16,30],[24,4,17,2],[24,8,17,6,"e"],[24,9,17,7],[24,13,17,11,"e"],[24,14,17,12],[24,15,17,13,"__esModule"],[24,25,17,23],[24,27,17,25],[24,34,17,32,"e"],[24,35,17,33],[25,4,18,2],[25,8,18,6,"n"],[25,9,18,7],[25,12,18,10,"Object"],[25,18,18,16],[25,19,18,17,"create"],[25,25,18,23],[25,26,18,24],[25,30,18,28],[25,31,18,29],[26,4,19,2],[26,8,19,6,"e"],[26,9,19,7],[26,11,19,9],[27,6,20,4,"Object"],[27,12,20,10],[27,13,20,11,"keys"],[27,17,20,15],[27,18,20,16,"e"],[27,19,20,17],[27,20,20,18],[27,21,20,19,"forEach"],[27,28,20,26],[27,29,20,27],[27,39,20,37,"k"],[27,40,20,38],[27,42,20,40],[28,8,21,6],[28,12,21,10,"k"],[28,13,21,11],[28,18,21,16],[28,27,21,25],[28,29,21,27],[29,10,22,8],[29,14,22,12,"d"],[29,15,22,13],[29,18,22,16,"Object"],[29,24,22,22],[29,25,22,23,"getOwnPropertyDescriptor"],[29,49,22,47],[29,50,22,48,"e"],[29,51,22,49],[29,53,22,51,"k"],[29,54,22,52],[29,55,22,53],[30,10,23,8,"Object"],[30,16,23,14],[30,17,23,15,"defineProperty"],[30,31,23,29],[30,32,23,30,"n"],[30,33,23,31],[30,35,23,33,"k"],[30,36,23,34],[30,38,23,36,"d"],[30,39,23,37],[30,40,23,38,"get"],[30,43,23,41],[30,46,23,44,"d"],[30,47,23,45],[30,50,23,48],[31,12,24,10,"enumerable"],[31,22,24,20],[31,24,24,22],[31,28,24,26],[32,12,25,10,"get"],[32,15,25,13],[32,17,25,15],[32,26,25,15,"get"],[32,27,25,15],[32,29,25,27],[33,14,25,29],[33,21,25,36,"e"],[33,22,25,37],[33,23,25,38,"k"],[33,24,25,39],[33,25,25,40],[34,12,25,42],[35,10,26,8],[35,11,26,9],[35,12,26,10],[36,8,27,6],[37,6,28,4],[37,7,28,5],[37,8,28,6],[38,4,29,2],[39,4,30,2,"n"],[39,5,30,3],[39,6,30,4,"default"],[39,13,30,11],[39,16,30,14,"e"],[39,17,30,15],[40,4,31,2],[40,11,31,9,"n"],[40,12,31,10],[41,2,32,0],[42,2,34,0],[42,6,34,4,"DialogPrimitive__namespace"],[42,32,34,30],[42,35,34,33],[42,48,34,46,"_interopNamespace"],[42,65,34,63],[42,66,34,64,"DialogPrimitive"],[42,81,34,79],[42,82,34,80],[43,2,35,0],[43,6,35,4,"React__namespace"],[43,22,35,20],[43,25,35,23],[43,38,35,36,"_interopNamespace"],[43,55,35,53],[43,56,35,54,"React"],[43,61,35,59],[43,62,35,60],[44,2,37,0],[44,8,37,6,"DrawerContext"],[44,21,37,19],[44,24,37,22,"React__namespace"],[44,40,37,38],[44,41,37,39,"default"],[44,48,37,46],[44,49,37,47,"createContext"],[44,62,37,60],[44,63,37,61],[45,4,38,4,"drawerRef"],[45,13,38,13],[45,15,38,15],[46,6,39,8,"current"],[46,13,39,15],[46,15,39,17],[47,4,40,4],[47,5,40,5],[48,4,41,4,"overlayRef"],[48,14,41,14],[48,16,41,16],[49,6,42,8,"current"],[49,13,42,15],[49,15,42,17],[50,4,43,4],[50,5,43,5],[51,4,44,4,"onPress"],[51,11,44,11],[51,13,44,13,"onPress"],[51,14,44,13],[51,19,44,17],[51,20,44,18],[51,21,44,19],[52,4,45,4,"onRelease"],[52,13,45,13],[52,15,45,15,"onRelease"],[52,16,45,15],[52,21,45,19],[52,22,45,20],[52,23,45,21],[53,4,46,4,"onDrag"],[53,10,46,10],[53,12,46,12,"onDrag"],[53,13,46,12],[53,18,46,16],[53,19,46,17],[53,20,46,18],[54,4,47,4,"onNestedDrag"],[54,16,47,16],[54,18,47,18,"onNestedDrag"],[54,19,47,18],[54,24,47,22],[54,25,47,23],[54,26,47,24],[55,4,48,4,"onNestedOpenChange"],[55,22,48,22],[55,24,48,24,"onNestedOpenChange"],[55,25,48,24],[55,30,48,28],[55,31,48,29],[55,32,48,30],[56,4,49,4,"onNestedRelease"],[56,19,49,19],[56,21,49,21,"onNestedRelease"],[56,22,49,21],[56,27,49,25],[56,28,49,26],[56,29,49,27],[57,4,50,4,"openProp"],[57,12,50,12],[57,14,50,14,"undefined"],[57,23,50,23],[58,4,51,4,"dismissible"],[58,15,51,15],[58,17,51,17],[58,22,51,22],[59,4,52,4,"isOpen"],[59,10,52,10],[59,12,52,12],[59,17,52,17],[60,4,53,4,"isDragging"],[60,14,53,14],[60,16,53,16],[60,21,53,21],[61,4,54,4,"keyboardIsOpen"],[61,18,54,18],[61,20,54,20],[62,6,55,8,"current"],[62,13,55,15],[62,15,55,17],[63,4,56,4],[63,5,56,5],[64,4,57,4,"snapPointsOffset"],[64,20,57,20],[64,22,57,22],[64,26,57,26],[65,4,58,4,"snapPoints"],[65,14,58,14],[65,16,58,16],[65,20,58,20],[66,4,59,4,"handleOnly"],[66,14,59,14],[66,16,59,16],[66,21,59,21],[67,4,60,4,"modal"],[67,9,60,9],[67,11,60,11],[67,16,60,16],[68,4,61,4,"shouldFade"],[68,14,61,14],[68,16,61,16],[68,21,61,21],[69,4,62,4,"activeSnapPoint"],[69,19,62,19],[69,21,62,21],[69,25,62,25],[70,4,63,4,"onOpenChange"],[70,16,63,16],[70,18,63,18,"onOpenChange"],[70,19,63,18],[70,24,63,22],[70,25,63,23],[70,26,63,24],[71,4,64,4,"setActiveSnapPoint"],[71,22,64,22],[71,24,64,24,"setActiveSnapPoint"],[71,25,64,24],[71,30,64,28],[71,31,64,29],[71,32,64,30],[72,4,65,4,"closeDrawer"],[72,15,65,15],[72,17,65,17,"closeDrawer"],[72,18,65,17],[72,23,65,21],[72,24,65,22],[72,25,65,23],[73,4,66,4,"direction"],[73,13,66,13],[73,15,66,15],[73,23,66,23],[74,4,67,4,"shouldAnimate"],[74,17,67,17],[74,19,67,19],[75,6,68,8,"current"],[75,13,68,15],[75,15,68,17],[76,4,69,4],[76,5,69,5],[77,4,70,4,"shouldScaleBackground"],[77,25,70,25],[77,27,70,27],[77,32,70,32],[78,4,71,4,"setBackgroundColorOnScale"],[78,29,71,29],[78,31,71,31],[78,35,71,35],[79,4,72,4,"noBodyStyles"],[79,16,72,16],[79,18,72,18],[79,23,72,23],[80,4,73,4,"container"],[80,13,73,13],[80,15,73,15],[80,19,73,19],[81,4,74,4,"autoFocus"],[81,13,74,13],[81,15,74,15],[82,2,75,0],[82,3,75,1],[82,4,75,2],[83,2,76,0],[83,8,76,6,"useDrawerContext"],[83,24,76,22],[83,27,76,25,"useDrawerContext"],[83,28,76,25],[83,33,76,29],[84,4,77,4],[84,10,77,10,"context"],[84,17,77,17],[84,20,77,20,"React__namespace"],[84,36,77,36],[84,37,77,37,"default"],[84,44,77,44],[84,45,77,45,"useContext"],[84,55,77,55],[84,56,77,56,"DrawerContext"],[84,69,77,69],[84,70,77,70],[85,4,78,4],[85,8,78,8],[85,9,78,9,"context"],[85,16,78,16],[85,18,78,18],[86,6,79,8],[86,12,79,14],[86,16,79,18,"Error"],[86,21,79,23],[86,22,79,24],[86,74,79,76],[86,75,79,77],[87,4,80,4],[88,4,81,4],[88,11,81,11,"context"],[88,18,81,18],[89,2,82,0],[89,3,82,1],[90,2,84,0,"__insertCSS"],[90,13,84,11],[90,14,84,12],[90,5135,84,5133],[90,5136,84,5134],[91,2,86,0],[91,11,86,9,"isMobileFirefox"],[91,26,86,24,"isMobileFirefox"],[91,27,86,24],[91,29,86,27],[92,4,87,4],[92,10,87,10,"userAgent"],[92,19,87,19],[92,22,87,22,"navigator"],[92,31,87,31],[92,32,87,32,"userAgent"],[92,41,87,41],[93,4,88,4],[93,11,88,11],[93,18,88,18,"window"],[93,24,88,24],[93,29,88,29],[93,40,88,40],[93,45,88,45],[93,54,88,54],[93,55,88,55,"test"],[93,59,88,59],[93,60,88,60,"userAgent"],[93,69,88,69],[93,70,88,70],[93,74,88,74],[93,82,88,82],[93,83,88,83,"test"],[93,87,88,87],[93,88,88,88,"userAgent"],[93,97,88,97],[93,98,88,98],[94,4,88,102],[95,4,89,4],[95,11,89,11],[95,12,89,12,"test"],[95,16,89,16],[95,17,89,17,"userAgent"],[95,26,89,26],[95,27,89,27],[95,28,89,28],[96,4,89,28],[96,5,90,5],[97,2,91,0],[98,2,92,0],[98,11,92,9,"isMac"],[98,16,92,14,"isMac"],[98,17,92,14],[98,19,92,17],[99,4,93,4],[99,11,93,11,"testPlatform"],[99,23,93,23],[99,24,93,24],[99,30,93,30],[99,31,93,31],[100,2,94,0],[101,2,95,0],[101,11,95,9,"isIPhone"],[101,19,95,17,"isIPhone"],[101,20,95,17],[101,22,95,20],[102,4,96,4],[102,11,96,11,"testPlatform"],[102,23,96,23],[102,24,96,24],[102,33,96,33],[102,34,96,34],[103,2,97,0],[104,2,98,0],[104,11,98,9,"isSafari"],[104,19,98,17,"isSafari"],[104,20,98,17],[104,22,98,20],[105,4,99,4],[105,11,99,11],[105,43,99,43],[105,44,99,44,"test"],[105,48,99,48],[105,49,99,49,"navigator"],[105,58,99,58],[105,59,99,59,"userAgent"],[105,68,99,68],[105,69,99,69],[106,2,100,0],[107,2,101,0],[107,11,101,9,"isIPad"],[107,17,101,15,"isIPad"],[107,18,101,15],[107,20,101,18],[108,4,102,4],[108,11,102,11,"testPlatform"],[108,23,102,23],[108,24,102,24],[108,31,102,31],[108,32,102,32],[109,4,102,36],[110,4,103,4,"isMac"],[110,9,103,9],[110,10,103,10],[110,11,103,11],[110,15,103,15,"navigator"],[110,24,103,24],[110,25,103,25,"maxTouchPoints"],[110,39,103,39],[110,42,103,42],[110,43,103,43],[111,2,104,0],[112,2,105,0],[112,11,105,9,"isIOS"],[112,16,105,14,"isIOS"],[112,17,105,14],[112,19,105,17],[113,4,106,4],[113,11,106,11,"isIPhone"],[113,19,106,19],[113,20,106,20],[113,21,106,21],[113,25,106,25,"isIPad"],[113,31,106,31],[113,32,106,32],[113,33,106,33],[114,2,107,0],[115,2,108,0],[115,11,108,9,"testPlatform"],[115,23,108,21,"testPlatform"],[115,24,108,22,"re"],[115,26,108,24],[115,28,108,26],[116,4,109,4],[116,11,109,11],[116,18,109,18,"window"],[116,24,109,24],[116,29,109,29],[116,40,109,40],[116,44,109,44,"window"],[116,50,109,50],[116,51,109,51,"navigator"],[116,60,109,60],[116,64,109,64],[116,68,109,68],[116,71,109,71,"re"],[116,73,109,73],[116,74,109,74,"test"],[116,78,109,78],[116,79,109,79,"window"],[116,85,109,85],[116,86,109,86,"navigator"],[116,95,109,95],[116,96,109,96,"platform"],[116,104,109,104],[116,105,109,105],[116,108,109,108,"undefined"],[116,117,109,117],[117,2,110,0],[119,2,112,0],[120,2,113,0],[120,8,113,6,"KEYBOARD_BUFFER"],[120,23,113,21],[120,26,113,24],[120,28,113,26],[121,2,114,0],[121,8,114,6,"useIsomorphicLayoutEffect"],[121,33,114,31],[121,36,114,34],[121,43,114,41,"window"],[121,49,114,47],[121,54,114,52],[121,65,114,63],[121,68,114,66,"React"],[121,73,114,71],[121,74,114,72,"useLayoutEffect"],[121,89,114,87],[121,92,114,90,"React"],[121,97,114,95],[121,98,114,96,"useEffect"],[121,107,114,105],[122,2,115,0],[122,11,115,9,"chain$1"],[122,18,115,16,"chain$1"],[122,19,115,17],[122,22,115,20,"callbacks"],[122,31,115,29],[122,33,115,31],[123,4,116,4],[123,11,116,11],[123,12,116,12],[123,15,116,15,"args"],[123,19,116,19],[123,24,116,22],[124,6,117,8],[124,11,117,13],[124,15,117,17,"callback"],[124,23,117,25],[124,27,117,29,"callbacks"],[124,36,117,38],[124,38,117,39],[125,8,118,12],[125,12,118,16],[125,19,118,23,"callback"],[125,27,118,31],[125,32,118,36],[125,42,118,46],[125,44,118,48],[126,10,119,16,"callback"],[126,18,119,24],[126,19,119,25],[126,22,119,28,"args"],[126,26,119,32],[126,27,119,33],[127,8,120,12],[128,6,121,8],[129,4,122,4],[129,5,122,5],[130,2,123,0],[131,2,124,0],[132,2,125,0],[132,8,125,6,"visualViewport"],[132,22,125,20],[132,25,125,23],[132,32,125,30,"document"],[132,40,125,38],[132,45,125,43],[132,56,125,54],[132,60,125,58,"window"],[132,66,125,64],[132,67,125,65,"visualViewport"],[132,81,125,79],[133,2,126,0],[133,11,126,9,"isScrollable"],[133,23,126,21,"isScrollable"],[133,24,126,22,"node"],[133,28,126,26],[133,30,126,28],[134,4,127,4],[134,8,127,8,"style"],[134,13,127,13],[134,16,127,16,"window"],[134,22,127,22],[134,23,127,23,"getComputedStyle"],[134,39,127,39],[134,40,127,40,"node"],[134,44,127,44],[134,45,127,45],[135,4,128,4],[135,11,128,11],[135,26,128,26],[135,27,128,27,"test"],[135,31,128,31],[135,32,128,32,"style"],[135,37,128,37],[135,38,128,38,"overflow"],[135,46,128,46],[135,49,128,49,"style"],[135,54,128,54],[135,55,128,55,"overflowX"],[135,64,128,64],[135,67,128,67,"style"],[135,72,128,72],[135,73,128,73,"overflowY"],[135,82,128,82],[135,83,128,83],[136,2,129,0],[137,2,130,0],[137,11,130,9,"getScrollParent"],[137,26,130,24,"getScrollParent"],[137,27,130,25,"node"],[137,31,130,29],[137,33,130,31],[138,4,131,4],[138,8,131,8,"isScrollable"],[138,20,131,20],[138,21,131,21,"node"],[138,25,131,25],[138,26,131,26],[138,28,131,28],[139,6,132,8,"node"],[139,10,132,12],[139,13,132,15,"node"],[139,17,132,19],[139,18,132,20,"parentElement"],[139,31,132,33],[140,4,133,4],[141,4,134,4],[141,11,134,10,"node"],[141,15,134,14],[141,19,134,18],[141,20,134,19,"isScrollable"],[141,32,134,31],[141,33,134,32,"node"],[141,37,134,36],[141,38,134,37],[141,40,134,38],[142,6,135,8,"node"],[142,10,135,12],[142,13,135,15,"node"],[142,17,135,19],[142,18,135,20,"parentElement"],[142,31,135,33],[143,4,136,4],[144,4,137,4],[144,11,137,11,"node"],[144,15,137,15],[144,19,137,19,"document"],[144,27,137,27],[144,28,137,28,"scrollingElement"],[144,44,137,44],[144,48,137,48,"document"],[144,56,137,56],[144,57,137,57,"documentElement"],[144,72,137,72],[145,2,138,0],[146,2,139,0],[147,2,140,0],[147,8,140,6,"nonTextInputTypes"],[147,25,140,23],[147,28,140,26],[147,32,140,30,"Set"],[147,35,140,33],[147,36,140,34],[147,37,141,4],[147,47,141,14],[147,49,142,4],[147,56,142,11],[147,58,143,4],[147,65,143,11],[147,67,144,4],[147,74,144,11],[147,76,145,4],[147,82,145,10],[147,84,146,4],[147,91,146,11],[147,93,147,4],[147,101,147,12],[147,103,148,4],[147,111,148,12],[147,113,149,4],[147,120,149,11],[147,121,150,1],[147,122,150,2],[148,2,151,0],[149,2,152,0],[149,6,152,4,"preventScrollCount"],[149,24,152,22],[149,27,152,25],[149,28,152,26],[150,2,153,0],[150,6,153,4,"restore"],[150,13,153,11],[151,2,154,0],[152,0,155,0],[153,0,156,0],[154,0,157,0],[155,0,158,0],[156,2,158,4],[156,11,158,13,"usePreventScroll"],[156,27,158,29,"usePreventScroll"],[156,28,158,30,"options"],[156,35,158,37],[156,38,158,40],[156,39,158,41],[156,40,158,42],[156,42,158,44],[157,4,159,4],[157,8,159,8],[158,6,159,10,"isDisabled"],[159,4,159,21],[159,5,159,22],[159,8,159,25,"options"],[159,15,159,32],[160,4,160,4,"useIsomorphicLayoutEffect"],[160,29,160,29],[160,30,160,30],[160,36,160,34],[161,6,161,8],[161,10,161,12,"isDisabled"],[161,20,161,22],[161,22,161,24],[162,8,162,12],[163,6,163,8],[164,6,164,8,"preventScrollCount"],[164,24,164,26],[164,26,164,28],[165,6,165,8],[165,10,165,12,"preventScrollCount"],[165,28,165,30],[165,33,165,35],[165,34,165,36],[165,36,165,38],[166,8,166,12],[166,12,166,16,"isIOS"],[166,17,166,21],[166,18,166,22],[166,19,166,23],[166,21,166,25],[167,10,167,16,"restore"],[167,17,167,23],[167,20,167,26,"preventScrollMobileSafari"],[167,45,167,51],[167,46,167,52],[167,47,167,53],[168,8,168,12],[169,6,169,8],[170,6,170,8],[170,13,170,15],[170,19,170,19],[171,8,171,12,"preventScrollCount"],[171,26,171,30],[171,28,171,32],[172,8,172,12],[172,12,172,16,"preventScrollCount"],[172,30,172,34],[172,35,172,39],[172,36,172,40],[172,38,172,42],[173,10,173,16,"restore"],[173,17,173,23],[173,21,173,27],[173,25,173,31],[173,28,173,34],[173,33,173,39],[173,34,173,40],[173,37,173,43,"restore"],[173,44,173,50],[173,45,173,51],[173,46,173,52],[174,8,174,12],[175,6,175,8],[175,7,175,9],[176,4,176,4],[176,5,176,5],[176,7,176,7],[176,8,177,8,"isDisabled"],[176,18,177,18],[176,19,178,5],[176,20,178,6],[177,2,179,0],[178,2,180,0],[179,2,181,0],[180,2,182,0],[181,2,183,0],[182,2,184,0],[183,2,185,0],[184,2,186,0],[185,2,187,0],[186,2,188,0],[187,2,189,0],[188,2,190,0],[189,2,191,0],[190,2,192,0],[191,2,193,0],[192,2,194,0],[193,2,195,0],[194,2,196,0],[195,2,197,0],[196,2,198,0],[197,2,199,0],[198,2,200,0],[199,2,201,0],[200,2,202,0],[201,2,203,0],[202,2,204,0],[203,2,205,0],[204,2,206,0],[204,11,206,9,"preventScrollMobileSafari"],[204,36,206,34,"preventScrollMobileSafari"],[204,37,206,34],[204,39,206,37],[205,4,207,4],[205,8,207,8,"scrollable"],[205,18,207,18],[206,4,208,4],[206,8,208,8,"lastY"],[206,13,208,13],[206,16,208,16],[206,17,208,17],[207,4,209,4],[207,8,209,8,"onTouchStart"],[207,20,209,20],[207,23,209,24,"e"],[207,24,209,25],[207,28,209,28],[208,6,210,8],[209,6,211,8,"scrollable"],[209,16,211,18],[209,19,211,21,"getScrollParent"],[209,34,211,36],[209,35,211,37,"e"],[209,36,211,38],[209,37,211,39,"target"],[209,43,211,45],[209,44,211,46],[210,6,212,8],[210,10,212,12,"scrollable"],[210,20,212,22],[210,25,212,27,"document"],[210,33,212,35],[210,34,212,36,"documentElement"],[210,49,212,51],[210,53,212,55,"scrollable"],[210,63,212,65],[210,68,212,70,"document"],[210,76,212,78],[210,77,212,79,"body"],[210,81,212,83],[210,83,212,85],[211,8,213,12],[212,6,214,8],[213,6,215,8,"lastY"],[213,11,215,13],[213,14,215,16,"e"],[213,15,215,17],[213,16,215,18,"changedTouches"],[213,30,215,32],[213,31,215,33],[213,32,215,34],[213,33,215,35],[213,34,215,36,"pageY"],[213,39,215,41],[214,4,216,4],[214,5,216,5],[215,4,217,4],[215,8,217,8,"onTouchMove"],[215,19,217,19],[215,22,217,23,"e"],[215,23,217,24],[215,27,217,27],[216,6,218,8],[217,6,219,8],[217,10,219,12],[217,11,219,13,"scrollable"],[217,21,219,23],[217,25,219,27,"scrollable"],[217,35,219,37],[217,40,219,42,"document"],[217,48,219,50],[217,49,219,51,"documentElement"],[217,64,219,66],[217,68,219,70,"scrollable"],[217,78,219,80],[217,83,219,85,"document"],[217,91,219,93],[217,92,219,94,"body"],[217,96,219,98],[217,98,219,100],[218,8,220,12,"e"],[218,9,220,13],[218,10,220,14,"preventDefault"],[218,24,220,28],[218,25,220,29],[218,26,220,30],[219,8,221,12],[220,6,222,8],[221,6,223,8],[222,6,224,8],[223,6,225,8],[224,6,226,8],[225,6,227,8],[225,10,227,12,"y"],[225,11,227,13],[225,14,227,16,"e"],[225,15,227,17],[225,16,227,18,"changedTouches"],[225,30,227,32],[225,31,227,33],[225,32,227,34],[225,33,227,35],[225,34,227,36,"pageY"],[225,39,227,41],[226,6,228,8],[226,10,228,12,"scrollTop"],[226,19,228,21],[226,22,228,24,"scrollable"],[226,32,228,34],[226,33,228,35,"scrollTop"],[226,42,228,44],[227,6,229,8],[227,10,229,12,"bottom"],[227,16,229,18],[227,19,229,21,"scrollable"],[227,29,229,31],[227,30,229,32,"scrollHeight"],[227,42,229,44],[227,45,229,47,"scrollable"],[227,55,229,57],[227,56,229,58,"clientHeight"],[227,68,229,70],[228,6,230,8],[228,10,230,12,"bottom"],[228,16,230,18],[228,21,230,23],[228,22,230,24],[228,24,230,26],[229,8,231,12],[230,6,232,8],[231,6,233,8],[231,10,233,12,"scrollTop"],[231,19,233,21],[231,23,233,25],[231,24,233,26],[231,28,233,30,"y"],[231,29,233,31],[231,32,233,34,"lastY"],[231,37,233,39],[231,41,233,43,"scrollTop"],[231,50,233,52],[231,54,233,56,"bottom"],[231,60,233,62],[231,64,233,66,"y"],[231,65,233,67],[231,68,233,70,"lastY"],[231,73,233,75],[231,75,233,77],[232,8,234,12,"e"],[232,9,234,13],[232,10,234,14,"preventDefault"],[232,24,234,28],[232,25,234,29],[232,26,234,30],[233,6,235,8],[234,6,236,8,"lastY"],[234,11,236,13],[234,14,236,16,"y"],[234,15,236,17],[235,4,237,4],[235,5,237,5],[236,4,238,4],[236,8,238,8,"onTouchEnd"],[236,18,238,18],[236,21,238,22,"e"],[236,22,238,23],[236,26,238,26],[237,6,239,8],[237,10,239,12,"target"],[237,16,239,18],[237,19,239,21,"e"],[237,20,239,22],[237,21,239,23,"target"],[237,27,239,29],[238,6,240,8],[239,6,241,8],[239,10,241,12,"isInput"],[239,17,241,19],[239,18,241,20,"target"],[239,24,241,26],[239,25,241,27],[239,29,241,31,"target"],[239,35,241,37],[239,40,241,42,"document"],[239,48,241,50],[239,49,241,51,"activeElement"],[239,62,241,64],[239,64,241,66],[240,8,242,12,"e"],[240,9,242,13],[240,10,242,14,"preventDefault"],[240,24,242,28],[240,25,242,29],[240,26,242,30],[241,8,243,12],[242,8,244,12],[243,8,245,12],[244,8,246,12,"target"],[244,14,246,18],[244,15,246,19,"style"],[244,20,246,24],[244,21,246,25,"transform"],[244,30,246,34],[244,33,246,37],[244,54,246,58],[245,8,247,12,"target"],[245,14,247,18],[245,15,247,19,"focus"],[245,20,247,24],[245,21,247,25],[245,22,247,26],[246,8,248,12,"requestAnimationFrame"],[246,29,248,33],[246,30,248,34],[246,36,248,38],[247,10,249,16,"target"],[247,16,249,22],[247,17,249,23,"style"],[247,22,249,28],[247,23,249,29,"transform"],[247,32,249,38],[247,35,249,41],[247,37,249,43],[248,8,250,12],[248,9,250,13],[248,10,250,14],[249,6,251,8],[250,4,252,4],[250,5,252,5],[251,4,253,4],[251,8,253,8,"onFocus"],[251,15,253,15],[251,18,253,19,"e"],[251,19,253,20],[251,23,253,23],[252,6,254,8],[252,10,254,12,"target"],[252,16,254,18],[252,19,254,21,"e"],[252,20,254,22],[252,21,254,23,"target"],[252,27,254,29],[253,6,255,8],[253,10,255,12,"isInput"],[253,17,255,19],[253,18,255,20,"target"],[253,24,255,26],[253,25,255,27],[253,27,255,29],[254,8,256,12],[255,8,257,12],[256,8,258,12],[257,8,259,12],[258,8,260,12,"target"],[258,14,260,18],[258,15,260,19,"style"],[258,20,260,24],[258,21,260,25,"transform"],[258,30,260,34],[258,33,260,37],[258,54,260,58],[259,8,261,12,"requestAnimationFrame"],[259,29,261,33],[259,30,261,34],[259,36,261,38],[260,10,262,16,"target"],[260,16,262,22],[260,17,262,23,"style"],[260,22,262,28],[260,23,262,29,"transform"],[260,32,262,38],[260,35,262,41],[260,37,262,43],[261,10,263,16],[262,10,264,16],[263,10,265,16],[263,14,265,20,"visualViewport"],[263,28,265,34],[263,30,265,36],[264,12,266,20],[264,16,266,24,"visualViewport"],[264,30,266,38],[264,31,266,39,"height"],[264,37,266,45],[264,40,266,48,"window"],[264,46,266,54],[264,47,266,55,"innerHeight"],[264,58,266,66],[264,60,266,68],[265,14,267,24],[266,14,268,24],[267,14,269,24,"requestAnimationFrame"],[267,35,269,45],[267,36,269,46],[267,42,269,50],[268,16,270,28,"scrollIntoView"],[268,30,270,42],[268,31,270,43,"target"],[268,37,270,49],[268,38,270,50],[269,14,271,24],[269,15,271,25],[269,16,271,26],[270,12,272,20],[270,13,272,21],[270,19,272,27],[271,14,273,24],[272,14,274,24],[273,14,275,24,"visualViewport"],[273,28,275,38],[273,29,275,39,"addEventListener"],[273,45,275,55],[273,46,275,56],[273,54,275,64],[273,56,275,66],[273,62,275,70,"scrollIntoView"],[273,76,275,84],[273,77,275,85,"target"],[273,83,275,91],[273,84,275,92],[273,86,275,94],[274,16,276,28,"once"],[274,20,276,32],[274,22,276,34],[275,14,277,24],[275,15,277,25],[275,16,277,26],[276,12,278,20],[277,10,279,16],[278,8,280,12],[278,9,280,13],[278,10,280,14],[279,6,281,8],[280,4,282,4],[280,5,282,5],[281,4,283,4],[281,8,283,8,"onWindowScroll"],[281,22,283,22],[281,25,283,25,"onWindowScroll"],[281,26,283,25],[281,31,283,29],[282,6,284,8],[283,6,285,8],[284,6,286,8,"window"],[284,12,286,14],[284,13,286,15,"scrollTo"],[284,21,286,23],[284,22,286,24],[284,23,286,25],[284,25,286,27],[284,26,286,28],[284,27,286,29],[285,4,287,4],[285,5,287,5],[286,4,288,4],[287,4,289,4],[288,4,290,4],[289,4,291,4],[289,8,291,8,"scrollX"],[289,15,291,15],[289,18,291,18,"window"],[289,24,291,24],[289,25,291,25,"pageXOffset"],[289,36,291,36],[290,4,292,4],[290,8,292,8,"scrollY"],[290,15,292,15],[290,18,292,18,"window"],[290,24,292,24],[290,25,292,25,"pageYOffset"],[290,36,292,36],[291,4,293,4],[291,8,293,8,"restoreStyles"],[291,21,293,21],[291,24,293,24,"chain$1"],[291,31,293,31],[291,32,293,32,"setStyle"],[291,40,293,40],[291,41,293,41,"document"],[291,49,293,49],[291,50,293,50,"documentElement"],[291,65,293,65],[291,67,293,67],[291,81,293,81],[291,83,293,83],[291,86,293,86,"window"],[291,92,293,92],[291,93,293,93,"innerWidth"],[291,103,293,103],[291,106,293,106,"document"],[291,114,293,114],[291,115,293,115,"documentElement"],[291,130,293,130],[291,131,293,131,"clientWidth"],[291,142,293,142],[291,146,293,146],[291,147,293,147],[291,148,293,148],[292,4,294,4],[293,4,295,4,"window"],[293,10,295,10],[293,11,295,11,"scrollTo"],[293,19,295,19],[293,20,295,20],[293,21,295,21],[293,23,295,23],[293,24,295,24],[293,25,295,25],[294,4,296,4],[294,8,296,8,"removeEvents"],[294,20,296,20],[294,23,296,23,"chain$1"],[294,30,296,30],[294,31,296,31,"addEvent"],[294,39,296,39],[294,40,296,40,"document"],[294,48,296,48],[294,50,296,50],[294,62,296,62],[294,64,296,64,"onTouchStart"],[294,76,296,76],[294,78,296,78],[295,6,297,8,"passive"],[295,13,297,15],[295,15,297,17],[295,20,297,22],[296,6,298,8,"capture"],[296,13,298,15],[296,15,298,17],[297,4,299,4],[297,5,299,5],[297,6,299,6],[297,8,299,8,"addEvent"],[297,16,299,16],[297,17,299,17,"document"],[297,25,299,25],[297,27,299,27],[297,38,299,38],[297,40,299,40,"onTouchMove"],[297,51,299,51],[297,53,299,53],[298,6,300,8,"passive"],[298,13,300,15],[298,15,300,17],[298,20,300,22],[299,6,301,8,"capture"],[299,13,301,15],[299,15,301,17],[300,4,302,4],[300,5,302,5],[300,6,302,6],[300,8,302,8,"addEvent"],[300,16,302,16],[300,17,302,17,"document"],[300,25,302,25],[300,27,302,27],[300,37,302,37],[300,39,302,39,"onTouchEnd"],[300,49,302,49],[300,51,302,51],[301,6,303,8,"passive"],[301,13,303,15],[301,15,303,17],[301,20,303,22],[302,6,304,8,"capture"],[302,13,304,15],[302,15,304,17],[303,4,305,4],[303,5,305,5],[303,6,305,6],[303,8,305,8,"addEvent"],[303,16,305,16],[303,17,305,17,"document"],[303,25,305,25],[303,27,305,27],[303,34,305,34],[303,36,305,36,"onFocus"],[303,43,305,43],[303,45,305,45],[303,49,305,49],[303,50,305,50],[303,52,305,52,"addEvent"],[303,60,305,60],[303,61,305,61,"window"],[303,67,305,67],[303,69,305,69],[303,77,305,77],[303,79,305,79,"onWindowScroll"],[303,93,305,93],[303,94,305,94],[303,95,305,95],[304,4,306,4],[304,11,306,11],[304,17,306,15],[305,6,307,8],[306,6,308,8,"restoreStyles"],[306,19,308,21],[306,20,308,22],[306,21,308,23],[307,6,309,8,"removeEvents"],[307,18,309,20],[307,19,309,21],[307,20,309,22],[308,6,310,8,"window"],[308,12,310,14],[308,13,310,15,"scrollTo"],[308,21,310,23],[308,22,310,24,"scrollX"],[308,29,310,31],[308,31,310,33,"scrollY"],[308,38,310,40],[308,39,310,41],[309,4,311,4],[309,5,311,5],[310,2,312,0],[311,2,313,0],[312,2,314,0],[312,11,314,9,"setStyle"],[312,19,314,17,"setStyle"],[312,20,314,18,"element"],[312,27,314,25],[312,29,314,27,"style"],[312,34,314,32],[312,36,314,34,"value"],[312,41,314,39],[312,43,314,41],[313,4,315,4],[314,4,316,4],[315,4,317,4],[315,8,317,8,"cur"],[315,11,317,11],[315,14,317,14,"element"],[315,21,317,21],[315,22,317,22,"style"],[315,27,317,27],[315,28,317,28,"style"],[315,33,317,33],[315,34,317,34],[316,4,318,4],[317,4,319,4,"element"],[317,11,319,11],[317,12,319,12,"style"],[317,17,319,17],[317,18,319,18,"style"],[317,23,319,23],[317,24,319,24],[317,27,319,27,"value"],[317,32,319,32],[318,4,320,4],[318,11,320,11],[318,17,320,15],[319,6,321,8],[320,6,322,8,"element"],[320,13,322,15],[320,14,322,16,"style"],[320,19,322,21],[320,20,322,22,"style"],[320,25,322,27],[320,26,322,28],[320,29,322,31,"cur"],[320,32,322,34],[321,4,323,4],[321,5,323,5],[322,2,324,0],[323,2,325,0],[324,2,326,0],[324,11,326,9,"addEvent"],[324,19,326,17,"addEvent"],[324,20,326,18,"target"],[324,26,326,24],[324,28,326,26,"event"],[324,33,326,31],[324,35,326,33,"handler"],[324,42,326,40],[324,44,326,42,"options"],[324,51,326,49],[324,53,326,51],[325,4,327,4],[326,4,328,4,"target"],[326,10,328,10],[326,11,328,11,"addEventListener"],[326,27,328,27],[326,28,328,28,"event"],[326,33,328,33],[326,35,328,35,"handler"],[326,42,328,42],[326,44,328,44,"options"],[326,51,328,51],[326,52,328,52],[327,4,329,4],[327,11,329,11],[327,17,329,15],[328,6,330,8],[329,6,331,8,"target"],[329,12,331,14],[329,13,331,15,"removeEventListener"],[329,32,331,34],[329,33,331,35,"event"],[329,38,331,40],[329,40,331,42,"handler"],[329,47,331,49],[329,49,331,51,"options"],[329,56,331,58],[329,57,331,59],[330,4,332,4],[330,5,332,5],[331,2,333,0],[332,2,334,0],[332,11,334,9,"scrollIntoView"],[332,25,334,23,"scrollIntoView"],[332,26,334,24,"target"],[332,32,334,30],[332,34,334,32],[333,4,335,4],[333,8,335,8,"root"],[333,12,335,12],[333,15,335,15,"document"],[333,23,335,23],[333,24,335,24,"scrollingElement"],[333,40,335,40],[333,44,335,44,"document"],[333,52,335,52],[333,53,335,53,"documentElement"],[333,68,335,68],[334,4,336,4],[334,11,336,10,"target"],[334,17,336,16],[334,21,336,20,"target"],[334,27,336,26],[334,32,336,31,"root"],[334,36,336,35],[334,38,336,36],[335,6,337,8],[336,6,338,8],[336,10,338,12,"scrollable"],[336,20,338,22],[336,23,338,25,"getScrollParent"],[336,38,338,40],[336,39,338,41,"target"],[336,45,338,47],[336,46,338,48],[337,6,339,8],[337,10,339,12,"scrollable"],[337,20,339,22],[337,25,339,27,"document"],[337,33,339,35],[337,34,339,36,"documentElement"],[337,49,339,51],[337,53,339,55,"scrollable"],[337,63,339,65],[337,68,339,70,"document"],[337,76,339,78],[337,77,339,79,"body"],[337,81,339,83],[337,85,339,87,"scrollable"],[337,95,339,97],[337,100,339,102,"target"],[337,106,339,108],[337,108,339,110],[338,8,340,12],[338,12,340,16,"scrollableTop"],[338,25,340,29],[338,28,340,32,"scrollable"],[338,38,340,42],[338,39,340,43,"getBoundingClientRect"],[338,60,340,64],[338,61,340,65],[338,62,340,66],[338,63,340,67,"top"],[338,66,340,70],[339,8,341,12],[339,12,341,16,"targetTop"],[339,21,341,25],[339,24,341,28,"target"],[339,30,341,34],[339,31,341,35,"getBoundingClientRect"],[339,52,341,56],[339,53,341,57],[339,54,341,58],[339,55,341,59,"top"],[339,58,341,62],[340,8,342,12],[340,12,342,16,"targetBottom"],[340,24,342,28],[340,27,342,31,"target"],[340,33,342,37],[340,34,342,38,"getBoundingClientRect"],[340,55,342,59],[340,56,342,60],[340,57,342,61],[340,58,342,62,"bottom"],[340,64,342,68],[341,8,343,12],[342,8,344,12],[342,14,344,18,"keyboardHeight"],[342,28,344,32],[342,31,344,35,"scrollable"],[342,41,344,45],[342,42,344,46,"getBoundingClientRect"],[342,63,344,67],[342,64,344,68],[342,65,344,69],[342,66,344,70,"bottom"],[342,72,344,76],[342,75,344,79,"KEYBOARD_BUFFER"],[342,90,344,94],[343,8,345,12],[343,12,345,16,"targetBottom"],[343,24,345,28],[343,27,345,31,"keyboardHeight"],[343,41,345,45],[343,43,345,47],[344,10,346,16,"scrollable"],[344,20,346,26],[344,21,346,27,"scrollTop"],[344,30,346,36],[344,34,346,40,"targetTop"],[344,43,346,49],[344,46,346,52,"scrollableTop"],[344,59,346,65],[345,8,347,12],[346,6,348,8],[347,6,349,8],[348,6,350,8,"target"],[348,12,350,14],[348,15,350,17,"scrollable"],[348,25,350,27],[348,26,350,28,"parentElement"],[348,39,350,41],[349,4,351,4],[350,2,352,0],[351,2,353,0],[351,11,353,9,"isInput"],[351,18,353,16,"isInput"],[351,19,353,17,"target"],[351,25,353,23],[351,27,353,25],[352,4,354,4],[352,11,354,11,"target"],[352,17,354,17],[352,29,354,29,"HTMLInputElement"],[352,45,354,45],[352,49,354,49],[352,50,354,50,"nonTextInputTypes"],[352,67,354,67],[352,68,354,68,"has"],[352,71,354,71],[352,72,354,72,"target"],[352,78,354,78],[352,79,354,79,"type"],[352,83,354,83],[352,84,354,84],[352,88,354,88,"target"],[352,94,354,94],[352,106,354,106,"HTMLTextAreaElement"],[352,125,354,125],[352,129,354,129,"target"],[352,135,354,135],[352,147,354,147,"HTMLElement"],[352,158,354,158],[352,162,354,162,"target"],[352,168,354,168],[352,169,354,169,"isContentEditable"],[352,186,354,186],[353,2,355,0],[355,2,357,0],[356,2,358,0],[357,0,359,0],[358,0,360,0],[359,0,361,0],[360,2,361,4],[360,11,361,13,"setRef"],[360,17,361,19,"setRef"],[360,18,361,20,"ref"],[360,21,361,23],[360,23,361,25,"value"],[360,28,361,30],[360,30,361,32],[361,4,362,4],[361,8,362,8],[361,15,362,15,"ref"],[361,18,362,18],[361,23,362,23],[361,33,362,33],[361,35,362,35],[362,6,363,8,"ref"],[362,9,363,11],[362,10,363,12,"value"],[362,15,363,17],[362,16,363,18],[363,4,364,4],[363,5,364,5],[363,11,364,11],[363,15,364,15,"ref"],[363,18,364,18],[363,23,364,23],[363,27,364,27],[363,31,364,31,"ref"],[363,34,364,34],[363,39,364,39,"undefined"],[363,48,364,48],[363,50,364,50],[364,6,365,8,"ref"],[364,9,365,11],[364,10,365,12,"current"],[364,17,365,19],[364,20,365,22,"value"],[364,25,365,27],[365,4,366,4],[366,2,367,0],[367,2,368,0],[368,0,369,0],[369,0,370,0],[370,0,371,0],[371,2,371,4],[371,11,371,13,"composeRefs"],[371,22,371,24,"composeRefs"],[371,23,371,25],[371,26,371,28,"refs"],[371,30,371,32],[371,32,371,34],[372,4,372,4],[372,11,372,12,"node"],[372,15,372,16],[372,19,372,19,"refs"],[372,23,372,23],[372,24,372,24,"forEach"],[372,31,372,31],[372,32,372,33,"ref"],[372,35,372,36],[372,39,372,39,"setRef"],[372,45,372,45],[372,46,372,46,"ref"],[372,49,372,49],[372,51,372,51,"node"],[372,55,372,55],[372,56,372,56],[372,57,372,57],[373,2,373,0],[374,2,374,0],[375,0,375,0],[376,0,376,0],[377,0,377,0],[378,2,377,4],[378,11,377,13,"useComposedRefs"],[378,26,377,28,"useComposedRefs"],[378,27,377,29],[378,30,377,32,"refs"],[378,34,377,36],[378,36,377,38],[379,4,378,4],[380,4,379,4],[380,11,379,11,"React__namespace"],[380,27,379,27],[380,28,379,28,"useCallback"],[380,39,379,39],[380,40,379,40,"composeRefs"],[380,51,379,51],[380,52,379,52],[380,55,379,55,"refs"],[380,59,379,59],[380,60,379,60],[380,62,379,62,"refs"],[380,66,379,66],[380,67,379,67],[381,2,380,0],[382,2,382,0],[382,8,382,6,"cache"],[382,13,382,11],[382,16,382,14],[382,20,382,18,"WeakMap"],[382,27,382,25],[382,28,382,26],[382,29,382,27],[383,2,383,0],[383,11,383,9,"set"],[383,14,383,12,"set"],[383,15,383,13,"el"],[383,17,383,15],[383,19,383,17,"styles"],[383,25,383,23],[383,27,383,25,"ignoreCache"],[383,38,383,36],[383,41,383,39],[383,46,383,44],[383,48,383,46],[384,4,384,4],[384,8,384,8],[384,9,384,9,"el"],[384,11,384,11],[384,15,384,15],[384,17,384,17,"el"],[384,19,384,19],[384,31,384,31,"HTMLElement"],[384,42,384,42],[384,43,384,43],[384,45,384,45],[385,4,385,4],[385,8,385,8,"originalStyles"],[385,22,385,22],[385,25,385,25],[385,26,385,26],[385,27,385,27],[386,4,386,4,"Object"],[386,10,386,10],[386,11,386,11,"entries"],[386,18,386,18],[386,19,386,19,"styles"],[386,25,386,25],[386,26,386,26],[386,27,386,27,"forEach"],[386,34,386,34],[386,35,386,35],[386,36,386,36],[386,37,386,37,"key"],[386,40,386,40],[386,42,386,42,"value"],[386,47,386,47],[386,48,386,48],[386,53,386,51],[387,6,387,8],[387,10,387,12,"key"],[387,13,387,15],[387,14,387,16,"startsWith"],[387,24,387,26],[387,25,387,27],[387,29,387,31],[387,30,387,32],[387,32,387,34],[388,8,388,12,"el"],[388,10,388,14],[388,11,388,15,"style"],[388,16,388,20],[388,17,388,21,"setProperty"],[388,28,388,32],[388,29,388,33,"key"],[388,32,388,36],[388,34,388,38,"value"],[388,39,388,43],[388,40,388,44],[389,8,389,12],[390,6,390,8],[391,6,391,8,"originalStyles"],[391,20,391,22],[391,21,391,23,"key"],[391,24,391,26],[391,25,391,27],[391,28,391,30,"el"],[391,30,391,32],[391,31,391,33,"style"],[391,36,391,38],[391,37,391,39,"key"],[391,40,391,42],[391,41,391,43],[392,6,392,8,"el"],[392,8,392,10],[392,9,392,11,"style"],[392,14,392,16],[392,15,392,17,"key"],[392,18,392,20],[392,19,392,21],[392,22,392,24,"value"],[392,27,392,29],[393,4,393,4],[393,5,393,5],[393,6,393,6],[394,4,394,4],[394,8,394,8,"ignoreCache"],[394,19,394,19],[394,21,394,21],[395,4,395,4,"cache"],[395,9,395,9],[395,10,395,10,"set"],[395,13,395,13],[395,14,395,14,"el"],[395,16,395,16],[395,18,395,18,"originalStyles"],[395,32,395,32],[395,33,395,33],[396,2,396,0],[397,2,397,0],[397,11,397,9,"reset"],[397,16,397,14,"reset"],[397,17,397,15,"el"],[397,19,397,17],[397,21,397,19,"prop"],[397,25,397,23],[397,27,397,25],[398,4,398,4],[398,8,398,8],[398,9,398,9,"el"],[398,11,398,11],[398,15,398,15],[398,17,398,17,"el"],[398,19,398,19],[398,31,398,31,"HTMLElement"],[398,42,398,42],[398,43,398,43],[398,45,398,45],[399,4,399,4],[399,8,399,8,"originalStyles"],[399,22,399,22],[399,25,399,25,"cache"],[399,30,399,30],[399,31,399,31,"get"],[399,34,399,34],[399,35,399,35,"el"],[399,37,399,37],[399,38,399,38],[400,4,400,4],[400,8,400,8],[400,9,400,9,"originalStyles"],[400,23,400,23],[400,25,400,25],[401,6,401,8],[402,4,402,4],[403,4,403,4],[404,6,404,8,"el"],[404,8,404,10],[404,9,404,11,"style"],[404,14,404,16],[404,15,404,17,"prop"],[404,19,404,21],[404,20,404,22],[404,23,404,25,"originalStyles"],[404,37,404,39],[404,38,404,40,"prop"],[404,42,404,44],[404,43,404,45],[405,4,405,4],[406,2,406,0],[407,2,407,0],[407,8,407,6,"isVertical"],[407,18,407,16],[407,21,407,20,"direction"],[407,30,407,29],[407,34,407,32],[408,4,408,4],[408,12,408,11,"direction"],[408,21,408,20],[409,6,409,8],[409,11,409,13],[409,16,409,18],[410,6,410,8],[410,11,410,13],[410,19,410,21],[411,8,411,12],[411,15,411,19],[411,19,411,23],[412,6,412,8],[412,11,412,13],[412,17,412,19],[413,6,413,8],[413,11,413,13],[413,18,413,20],[414,8,414,12],[414,15,414,19],[414,20,414,24],[415,6,415,8],[416,8,416,12],[416,15,416,19,"direction"],[416,24,416,28],[417,4,417,4],[418,2,418,0],[418,3,418,1],[419,2,419,0],[419,11,419,9,"getTranslate"],[419,23,419,21,"getTranslate"],[419,24,419,22,"element"],[419,31,419,29],[419,33,419,31,"direction"],[419,42,419,40],[419,44,419,42],[420,4,420,4],[420,8,420,8],[420,9,420,9,"element"],[420,16,420,16],[420,18,420,18],[421,6,421,8],[421,13,421,15],[421,17,421,19],[422,4,422,4],[423,4,423,4],[423,10,423,10,"style"],[423,15,423,15],[423,18,423,18,"window"],[423,24,423,24],[423,25,423,25,"getComputedStyle"],[423,41,423,41],[423,42,423,42,"element"],[423,49,423,49],[423,50,423,50],[424,4,424,4],[424,10,424,10,"transform"],[424,19,424,19],[425,4,424,22],[426,4,425,4,"style"],[426,9,425,9],[426,10,425,10,"transform"],[426,19,425,19],[426,23,425,23,"style"],[426,28,425,28],[426,29,425,29,"webkitTransform"],[426,44,425,44],[426,48,425,48,"style"],[426,53,425,53],[426,54,425,54,"mozTransform"],[426,66,425,66],[427,4,426,4],[427,8,426,8,"mat"],[427,11,426,11],[427,14,426,14,"transform"],[427,23,426,23],[427,24,426,24,"match"],[427,29,426,29],[427,30,426,30],[427,50,426,50],[427,51,426,51],[428,4,427,4],[428,8,427,8,"mat"],[428,11,427,11],[428,13,427,13],[429,6,428,8],[430,6,429,8],[430,13,429,15,"parseFloat"],[430,23,429,25],[430,24,429,26,"mat"],[430,27,429,29],[430,28,429,30],[430,29,429,31],[430,30,429,32],[430,31,429,33,"split"],[430,36,429,38],[430,37,429,39],[430,41,429,43],[430,42,429,44],[430,43,429,45,"isVertical"],[430,53,429,55],[430,54,429,56,"direction"],[430,63,429,65],[430,64,429,66],[430,67,429,69],[430,69,429,71],[430,72,429,74],[430,74,429,76],[430,75,429,77],[430,76,429,78],[431,4,430,4],[432,4,431,4],[433,4,432,4,"mat"],[433,7,432,7],[433,10,432,10,"transform"],[433,19,432,19],[433,20,432,20,"match"],[433,25,432,25],[433,26,432,26],[433,44,432,44],[433,45,432,45],[434,4,433,4],[434,11,433,11,"mat"],[434,14,433,14],[434,17,433,17,"parseFloat"],[434,27,433,27],[434,28,433,28,"mat"],[434,31,433,31],[434,32,433,32],[434,33,433,33],[434,34,433,34],[434,35,433,35,"split"],[434,40,433,40],[434,41,433,41],[434,45,433,45],[434,46,433,46],[434,47,433,47,"isVertical"],[434,57,433,57],[434,58,433,58,"direction"],[434,67,433,67],[434,68,433,68],[434,71,433,71],[434,72,433,72],[434,75,433,75],[434,76,433,76],[434,77,433,77],[434,78,433,78],[434,81,433,81],[434,85,433,85],[435,2,434,0],[436,2,435,0],[436,11,435,9,"dampenValue"],[436,22,435,20,"dampenValue"],[436,23,435,21,"v"],[436,24,435,22],[436,26,435,24],[437,4,436,4],[437,11,436,11],[437,12,436,12],[437,16,436,16,"Math"],[437,20,436,20],[437,21,436,21,"log"],[437,24,436,24],[437,25,436,25,"v"],[437,26,436,26],[437,29,436,29],[437,30,436,30],[437,31,436,31],[437,34,436,34],[437,35,436,35],[437,36,436,36],[438,2,437,0],[439,2,438,0],[439,11,438,9,"assignStyle"],[439,22,438,20,"assignStyle"],[439,23,438,21,"element"],[439,30,438,28],[439,32,438,30,"style"],[439,37,438,35],[439,39,438,37],[440,4,439,4],[440,8,439,8],[440,9,439,9,"element"],[440,16,439,16],[440,18,439,18],[440,25,439,25],[440,31,439,29],[440,32,439,30],[440,33,439,31],[441,4,440,4],[441,10,440,10,"prevStyle"],[441,19,440,19],[441,22,440,22,"element"],[441,29,440,29],[441,30,440,30,"style"],[441,35,440,35],[441,36,440,36,"cssText"],[441,43,440,43],[442,4,441,4,"Object"],[442,10,441,10],[442,11,441,11,"assign"],[442,17,441,17],[442,18,441,18,"element"],[442,25,441,25],[442,26,441,26,"style"],[442,31,441,31],[442,33,441,33,"style"],[442,38,441,38],[442,39,441,39],[443,4,442,4],[443,11,442,11],[443,17,442,15],[444,6,443,8,"element"],[444,13,443,15],[444,14,443,16,"style"],[444,19,443,21],[444,20,443,22,"cssText"],[444,27,443,29],[444,30,443,32,"prevStyle"],[444,39,443,41],[445,4,444,4],[445,5,444,5],[446,2,445,0],[447,2,446,0],[448,0,447,0],[449,0,448,0],[450,2,448,4],[450,11,448,13,"chain"],[450,16,448,18,"chain"],[450,17,448,19],[450,20,448,22,"fns"],[450,23,448,25],[450,25,448,27],[451,4,449,4],[451,11,449,11],[451,12,449,12],[451,15,449,15,"args"],[451,19,449,19],[451,24,449,22],[452,6,450,8],[452,11,450,13],[452,17,450,19,"fn"],[452,19,450,21],[452,23,450,25,"fns"],[452,26,450,28],[452,28,450,29],[453,8,451,12],[453,12,451,16],[453,19,451,23,"fn"],[453,21,451,25],[453,26,451,30],[453,36,451,40],[453,38,451,42],[454,10,452,16],[455,10,453,16,"fn"],[455,12,453,18],[455,13,453,19],[455,16,453,22,"args"],[455,20,453,26],[455,21,453,27],[456,8,454,12],[457,6,455,8],[458,4,456,4],[458,5,456,5],[459,2,457,0],[460,2,459,0],[460,8,459,6,"TRANSITIONS"],[460,19,459,17],[460,22,459,20],[461,4,460,4,"DURATION"],[461,12,460,12],[461,14,460,14],[461,17,460,17],[462,4,461,4,"EASE"],[462,8,461,8],[462,10,461,10],[462,11,462,8],[462,15,462,12],[462,17,463,8],[462,21,463,12],[462,23,464,8],[462,24,464,9],[462,26,465,8],[462,27,465,9],[463,2,467,0],[463,3,467,1],[464,2,468,0],[464,8,468,6,"VELOCITY_THRESHOLD"],[464,26,468,24],[464,29,468,27],[464,32,468,30],[465,2,469,0],[465,8,469,6,"CLOSE_THRESHOLD"],[465,23,469,21],[465,26,469,24],[465,30,469,28],[466,2,470,0],[466,8,470,6,"SCROLL_LOCK_TIMEOUT"],[466,27,470,25],[466,30,470,28],[466,33,470,31],[467,2,471,0],[467,8,471,6,"BORDER_RADIUS"],[467,21,471,19],[467,24,471,22],[467,25,471,23],[468,2,472,0],[468,8,472,6,"NESTED_DISPLACEMENT"],[468,27,472,25],[468,30,472,28],[468,32,472,30],[469,2,473,0],[469,8,473,6,"WINDOW_TOP_OFFSET"],[469,25,473,23],[469,28,473,26],[469,30,473,28],[470,2,474,0],[470,8,474,6,"DRAG_CLASS"],[470,18,474,16],[470,21,474,19],[470,36,474,34],[472,2,476,0],[473,2,477,0],[473,11,477,9,"useCallbackRef"],[473,25,477,23,"useCallbackRef"],[473,26,477,24,"callback"],[473,34,477,32],[473,36,477,34],[474,4,478,4],[474,10,478,10,"callbackRef"],[474,21,478,21],[474,24,478,24,"React__namespace"],[474,40,478,40],[474,41,478,41,"default"],[474,48,478,48],[474,49,478,49,"useRef"],[474,55,478,55],[474,56,478,56,"callback"],[474,64,478,64],[474,65,478,65],[475,4,479,4,"React__namespace"],[475,20,479,20],[475,21,479,21,"default"],[475,28,479,28],[475,29,479,29,"useEffect"],[475,38,479,38],[475,39,479,39],[475,45,479,43],[476,6,480,8,"callbackRef"],[476,17,480,19],[476,18,480,20,"current"],[476,25,480,27],[476,28,480,30,"callback"],[476,36,480,38],[477,4,481,4],[477,5,481,5],[477,6,481,6],[478,4,482,4],[479,4,483,4],[479,11,483,11,"React__namespace"],[479,27,483,27],[479,28,483,28,"default"],[479,35,483,35],[479,36,483,36,"useMemo"],[479,43,483,43],[479,44,483,44],[479,50,483,48],[479,51,483,49],[479,54,483,52,"args"],[479,58,483,56],[479,63,483,59,"callbackRef"],[479,74,483,70],[479,75,483,71,"current"],[479,82,483,78],[479,86,483,82],[479,90,483,86],[479,93,483,89],[479,98,483,94],[479,99,483,95],[479,102,483,98,"callbackRef"],[479,113,483,109],[479,114,483,110,"current"],[479,121,483,117],[479,122,483,118,"call"],[479,126,483,122],[479,127,483,123,"callbackRef"],[479,138,483,134],[479,140,483,136],[479,143,483,139,"args"],[479,147,483,143],[479,148,483,144],[479,150,483,146],[479,152,483,148],[479,153,483,149],[480,2,484,0],[481,2,485,0],[481,11,485,9,"useUncontrolledState"],[481,31,485,29,"useUncontrolledState"],[481,32,485,30],[482,4,485,32,"defaultProp"],[482,15,485,43],[483,4,485,45,"onChange"],[484,2,485,54],[484,3,485,55],[484,5,485,57],[485,4,486,4],[485,10,486,10,"uncontrolledState"],[485,27,486,27],[485,30,486,30,"React__namespace"],[485,46,486,46],[485,47,486,47,"default"],[485,54,486,54],[485,55,486,55,"useState"],[485,63,486,63],[485,64,486,64,"defaultProp"],[485,75,486,75],[485,76,486,76],[486,4,487,4],[486,10,487,10],[486,11,487,11,"value"],[486,16,487,16],[486,17,487,17],[486,20,487,20,"uncontrolledState"],[486,37,487,37],[487,4,488,4],[487,10,488,10,"prevValueRef"],[487,22,488,22],[487,25,488,25,"React__namespace"],[487,41,488,41],[487,42,488,42,"default"],[487,49,488,49],[487,50,488,50,"useRef"],[487,56,488,56],[487,57,488,57,"value"],[487,62,488,62],[487,63,488,63],[488,4,489,4],[488,10,489,10,"handleChange"],[488,22,489,22],[488,25,489,25,"useCallbackRef"],[488,39,489,39],[488,40,489,40,"onChange"],[488,48,489,48],[488,49,489,49],[489,4,490,4,"React__namespace"],[489,20,490,20],[489,21,490,21,"default"],[489,28,490,28],[489,29,490,29,"useEffect"],[489,38,490,38],[489,39,490,39],[489,45,490,43],[490,6,491,8],[490,10,491,12,"prevValueRef"],[490,22,491,24],[490,23,491,25,"current"],[490,30,491,32],[490,35,491,37,"value"],[490,40,491,42],[490,42,491,44],[491,8,492,12,"handleChange"],[491,20,492,24],[491,21,492,25,"value"],[491,26,492,30],[491,27,492,31],[492,8,493,12,"prevValueRef"],[492,20,493,24],[492,21,493,25,"current"],[492,28,493,32],[492,31,493,35,"value"],[492,36,493,40],[493,6,494,8],[494,4,495,4],[494,5,495,5],[494,7,495,7],[494,8,496,8,"value"],[494,13,496,13],[494,15,497,8,"prevValueRef"],[494,27,497,20],[494,29,498,8,"handleChange"],[494,41,498,20],[494,42,499,5],[494,43,499,6],[495,4,500,4],[495,11,500,11,"uncontrolledState"],[495,28,500,28],[496,2,501,0],[497,2,502,0],[497,11,502,9,"useControllableState"],[497,31,502,29,"useControllableState"],[497,32,502,30],[498,4,502,32,"prop"],[498,8,502,36],[499,4,502,38,"defaultProp"],[499,15,502,49],[500,4,502,51,"onChange"],[500,12,502,59],[500,15,502,62,"onChange"],[500,16,502,62],[500,21,502,66],[500,22,502,67],[501,2,502,69],[501,3,502,70],[501,5,502,72],[502,4,503,4],[502,10,503,10],[502,11,503,11,"uncontrolledProp"],[502,27,503,27],[502,29,503,29,"setUncontrolledProp"],[502,48,503,48],[502,49,503,49],[502,52,503,52,"useUncontrolledState"],[502,72,503,72],[502,73,503,73],[503,6,504,8,"defaultProp"],[503,17,504,19],[504,6,505,8,"onChange"],[505,4,506,4],[505,5,506,5],[505,6,506,6],[506,4,507,4],[506,10,507,10,"isControlled"],[506,22,507,22],[506,25,507,25,"prop"],[506,29,507,29],[506,34,507,34,"undefined"],[506,43,507,43],[507,4,508,4],[507,10,508,10,"value"],[507,15,508,15],[507,18,508,18,"isControlled"],[507,30,508,30],[507,33,508,33,"prop"],[507,37,508,37],[507,40,508,40,"uncontrolledProp"],[507,56,508,56],[508,4,509,4],[508,10,509,10,"handleChange"],[508,22,509,22],[508,25,509,25,"useCallbackRef"],[508,39,509,39],[508,40,509,40,"onChange"],[508,48,509,48],[508,49,509,49],[509,4,510,4],[509,10,510,10,"setValue"],[509,18,510,18],[509,21,510,21,"React__namespace"],[509,37,510,37],[509,38,510,38,"default"],[509,45,510,45],[509,46,510,46,"useCallback"],[509,57,510,57],[509,58,510,59,"nextValue"],[509,67,510,68],[509,71,510,71],[510,6,511,8],[510,10,511,12,"isControlled"],[510,22,511,24],[510,24,511,26],[511,8,512,12],[511,14,512,18,"setter"],[511,20,512,24],[511,23,512,27,"nextValue"],[511,32,512,36],[512,8,513,12],[512,14,513,18,"value"],[512,19,513,23],[512,22,513,26],[512,29,513,33,"nextValue"],[512,38,513,42],[512,43,513,47],[512,53,513,57],[512,56,513,60,"setter"],[512,62,513,66],[512,63,513,67,"prop"],[512,67,513,71],[512,68,513,72],[512,71,513,75,"nextValue"],[512,80,513,84],[513,8,514,12],[513,12,514,16,"value"],[513,17,514,21],[513,22,514,26,"prop"],[513,26,514,30],[513,28,514,32,"handleChange"],[513,40,514,44],[513,41,514,45,"value"],[513,46,514,50],[513,47,514,51],[514,6,515,8],[514,7,515,9],[514,13,515,15],[515,8,516,12,"setUncontrolledProp"],[515,27,516,31],[515,28,516,32,"nextValue"],[515,37,516,41],[515,38,516,42],[516,6,517,8],[517,4,518,4],[517,5,518,5],[517,7,518,7],[517,8,519,8,"isControlled"],[517,20,519,20],[517,22,520,8,"prop"],[517,26,520,12],[517,28,521,8,"setUncontrolledProp"],[517,47,521,27],[517,49,522,8,"handleChange"],[517,61,522,20],[517,62,523,5],[517,63,523,6],[518,4,524,4],[518,11,524,11],[518,12,525,8,"value"],[518,17,525,13],[518,19,526,8,"setValue"],[518,27,526,16],[518,28,527,5],[519,2,528,0],[520,2,530,0],[520,11,530,9,"useSnapPoints"],[520,24,530,22,"useSnapPoints"],[520,25,530,23],[521,4,530,25,"activeSnapPointProp"],[521,23,530,44],[522,4,530,46,"setActiveSnapPointProp"],[522,26,530,68],[523,4,530,70,"snapPoints"],[523,14,530,80],[524,4,530,82,"drawerRef"],[524,13,530,91],[525,4,530,93,"overlayRef"],[525,14,530,103],[526,4,530,105,"fadeFromIndex"],[526,17,530,118],[527,4,530,120,"onSnapPointChange"],[527,21,530,137],[528,4,530,139,"direction"],[528,13,530,148],[528,16,530,151],[528,24,530,159],[529,4,530,161,"container"],[529,13,530,170],[530,4,530,172,"snapToSequentialPoint"],[531,2,530,194],[531,3,530,195],[531,5,530,197],[532,4,531,4],[532,10,531,10],[532,11,531,11,"activeSnapPoint"],[532,26,531,26],[532,28,531,28,"setActiveSnapPoint"],[532,46,531,46],[532,47,531,47],[532,50,531,50,"useControllableState"],[532,70,531,70],[532,71,531,71],[533,6,532,8,"prop"],[533,10,532,12],[533,12,532,14,"activeSnapPointProp"],[533,31,532,33],[534,6,533,8,"defaultProp"],[534,17,533,19],[534,19,533,21,"snapPoints"],[534,29,533,31],[534,33,533,35],[534,37,533,39],[534,40,533,42],[534,45,533,47],[534,46,533,48],[534,49,533,51,"snapPoints"],[534,59,533,61],[534,60,533,62],[534,61,533,63],[534,62,533,64],[535,6,534,8,"onChange"],[535,14,534,16],[535,16,534,18,"setActiveSnapPointProp"],[536,4,535,4],[536,5,535,5],[536,6,535,6],[537,4,536,4],[537,10,536,10],[537,11,536,11,"windowDimensions"],[537,27,536,27],[537,29,536,29,"setWindowDimensions"],[537,48,536,48],[537,49,536,49],[537,52,536,52,"React__namespace"],[537,68,536,68],[537,69,536,69,"default"],[537,76,536,76],[537,77,536,77,"useState"],[537,85,536,85],[537,86,536,86],[537,93,536,93,"window"],[537,99,536,99],[537,104,536,104],[537,115,536,115],[537,118,536,118],[538,6,537,8,"innerWidth"],[538,16,537,18],[538,18,537,20,"window"],[538,24,537,26],[538,25,537,27,"innerWidth"],[538,35,537,37],[539,6,538,8,"innerHeight"],[539,17,538,19],[539,19,538,21,"window"],[539,25,538,27],[539,26,538,28,"innerHeight"],[540,4,539,4],[540,5,539,5],[540,8,539,8,"undefined"],[540,17,539,17],[540,18,539,18],[541,4,540,4,"React__namespace"],[541,20,540,20],[541,21,540,21,"default"],[541,28,540,28],[541,29,540,29,"useEffect"],[541,38,540,38],[541,39,540,39],[541,45,540,43],[542,6,541,8],[542,15,541,17,"onResize"],[542,23,541,25,"onResize"],[542,24,541,25],[542,26,541,28],[543,8,542,12,"setWindowDimensions"],[543,27,542,31],[543,28,542,32],[544,10,543,16,"innerWidth"],[544,20,543,26],[544,22,543,28,"window"],[544,28,543,34],[544,29,543,35,"innerWidth"],[544,39,543,45],[545,10,544,16,"innerHeight"],[545,21,544,27],[545,23,544,29,"window"],[545,29,544,35],[545,30,544,36,"innerHeight"],[546,8,545,12],[546,9,545,13],[546,10,545,14],[547,6,546,8],[548,6,547,8,"window"],[548,12,547,14],[548,13,547,15,"addEventListener"],[548,29,547,31],[548,30,547,32],[548,38,547,40],[548,40,547,42,"onResize"],[548,48,547,50],[548,49,547,51],[549,6,548,8],[549,13,548,15],[549,19,548,19,"window"],[549,25,548,25],[549,26,548,26,"removeEventListener"],[549,45,548,45],[549,46,548,46],[549,54,548,54],[549,56,548,56,"onResize"],[549,64,548,64],[549,65,548,65],[550,4,549,4],[550,5,549,5],[550,7,549,7],[550,9,549,9],[550,10,549,10],[551,4,550,4],[551,10,550,10,"isLastSnapPoint"],[551,25,550,25],[551,28,550,28,"React__namespace"],[551,44,550,44],[551,45,550,45,"default"],[551,52,550,52],[551,53,550,53,"useMemo"],[551,60,550,60],[551,61,550,61],[551,67,550,65,"activeSnapPoint"],[551,82,550,80],[551,88,550,86,"snapPoints"],[551,98,550,96],[551,102,550,100],[551,106,550,104],[551,109,550,107],[551,114,550,112],[551,115,550,113],[551,118,550,116,"snapPoints"],[551,128,550,126],[551,129,550,127,"snapPoints"],[551,139,550,137],[551,140,550,138,"length"],[551,146,550,144],[551,149,550,147],[551,150,550,148],[551,151,550,149],[551,152,550,150],[551,156,550,154],[551,160,550,158],[551,162,550,160],[551,163,551,8,"snapPoints"],[551,173,551,18],[551,175,552,8,"activeSnapPoint"],[551,190,552,23],[551,191,553,5],[551,192,553,6],[552,4,554,4],[552,10,554,10,"activeSnapPointIndex"],[552,30,554,30],[552,33,554,33,"React__namespace"],[552,49,554,49],[552,50,554,50,"default"],[552,57,554,57],[552,58,554,58,"useMemo"],[552,65,554,65],[552,66,554,66],[552,72,554,70],[553,6,555,8],[553,10,555,12,"_snapPoints_findIndex"],[553,31,555,33],[554,6,556,8],[554,13,556,15],[554,14,556,16,"_snapPoints_findIndex"],[554,35,556,37],[554,38,556,40,"snapPoints"],[554,48,556,50],[554,52,556,54],[554,56,556,58],[554,59,556,61],[554,64,556,66],[554,65,556,67],[554,68,556,70,"snapPoints"],[554,78,556,80],[554,79,556,81,"findIndex"],[554,88,556,90],[554,89,556,92,"snapPoint"],[554,98,556,101],[554,102,556,104,"snapPoint"],[554,111,556,113],[554,116,556,118,"activeSnapPoint"],[554,131,556,133],[554,132,556,134],[554,137,556,139],[554,141,556,143],[554,144,556,146,"_snapPoints_findIndex"],[554,165,556,167],[554,168,556,170],[554,172,556,174],[555,4,557,4],[555,5,557,5],[555,7,557,7],[555,8,558,8,"snapPoints"],[555,18,558,18],[555,20,559,8,"activeSnapPoint"],[555,35,559,23],[555,36,560,5],[555,37,560,6],[556,4,561,4],[556,10,561,10,"shouldFade"],[556,20,561,20],[556,23,561,23,"snapPoints"],[556,33,561,33],[556,37,561,37,"snapPoints"],[556,47,561,47],[556,48,561,48,"length"],[556,54,561,54],[556,57,561,57],[556,58,561,58],[556,63,561,63,"fadeFromIndex"],[556,76,561,76],[556,80,561,80,"fadeFromIndex"],[556,93,561,93],[556,98,561,98],[556,99,561,99],[556,100,561,100],[556,104,561,104],[556,105,561,105,"Number"],[556,111,561,111],[556,112,561,112,"isNaN"],[556,117,561,117],[556,118,561,118,"fadeFromIndex"],[556,131,561,131],[556,132,561,132],[556,136,561,136,"snapPoints"],[556,146,561,146],[556,147,561,147,"fadeFromIndex"],[556,160,561,160],[556,161,561,161],[556,166,561,166,"activeSnapPoint"],[556,181,561,181],[556,185,561,185],[556,186,561,186,"snapPoints"],[556,196,561,196],[557,4,562,4],[557,10,562,10,"snapPointsOffset"],[557,26,562,26],[557,29,562,29,"React__namespace"],[557,45,562,45],[557,46,562,46,"default"],[557,53,562,53],[557,54,562,54,"useMemo"],[557,61,562,61],[557,62,562,62],[557,68,562,66],[558,6,563,8],[558,12,563,14,"containerSize"],[558,25,563,27],[558,28,563,30,"container"],[558,37,563,39],[558,40,563,42],[559,8,564,12,"width"],[559,13,564,17],[559,15,564,19,"container"],[559,24,564,28],[559,25,564,29,"getBoundingClientRect"],[559,46,564,50],[559,47,564,51],[559,48,564,52],[559,49,564,53,"width"],[559,54,564,58],[560,8,565,12,"height"],[560,14,565,18],[560,16,565,20,"container"],[560,25,565,29],[560,26,565,30,"getBoundingClientRect"],[560,47,565,51],[560,48,565,52],[560,49,565,53],[560,50,565,54,"height"],[561,6,566,8],[561,7,566,9],[561,10,566,12],[561,17,566,19,"window"],[561,23,566,25],[561,28,566,30],[561,39,566,41],[561,42,566,44],[562,8,567,12,"width"],[562,13,567,17],[562,15,567,19,"window"],[562,21,567,25],[562,22,567,26,"innerWidth"],[562,32,567,36],[563,8,568,12,"height"],[563,14,568,18],[563,16,568,20,"window"],[563,22,568,26],[563,23,568,27,"innerHeight"],[564,6,569,8],[564,7,569,9],[564,10,569,12],[565,8,570,12,"width"],[565,13,570,17],[565,15,570,19],[565,16,570,20],[566,8,571,12,"height"],[566,14,571,18],[566,16,571,20],[567,6,572,8],[567,7,572,9],[568,6,573,8],[568,10,573,12,"_snapPoints_map"],[568,25,573,27],[569,6,574,8],[569,13,574,15],[569,14,574,16,"_snapPoints_map"],[569,29,574,31],[569,32,574,34,"snapPoints"],[569,42,574,44],[569,46,574,48],[569,50,574,52],[569,53,574,55],[569,58,574,60],[569,59,574,61],[569,62,574,64,"snapPoints"],[569,72,574,74],[569,73,574,75,"map"],[569,76,574,78],[569,77,574,80,"snapPoint"],[569,86,574,89],[569,90,574,92],[570,8,575,12],[570,14,575,18,"isPx"],[570,18,575,22],[570,21,575,25],[570,28,575,32,"snapPoint"],[570,37,575,41],[570,42,575,46],[570,50,575,54],[571,8,576,12],[571,12,576,16,"snapPointAsNumber"],[571,29,576,33],[571,32,576,36],[571,33,576,37],[572,8,577,12],[572,12,577,16,"isPx"],[572,16,577,20],[572,18,577,22],[573,10,578,16,"snapPointAsNumber"],[573,27,578,33],[573,30,578,36,"parseInt"],[573,38,578,44],[573,39,578,45,"snapPoint"],[573,48,578,54],[573,50,578,56],[573,52,578,58],[573,53,578,59],[574,8,579,12],[575,8,580,12],[575,12,580,16,"isVertical"],[575,22,580,26],[575,23,580,27,"direction"],[575,32,580,36],[575,33,580,37],[575,35,580,39],[576,10,581,16],[576,16,581,22,"height"],[576,22,581,28],[576,25,581,31,"isPx"],[576,29,581,35],[576,32,581,38,"snapPointAsNumber"],[576,49,581,55],[576,52,581,58,"windowDimensions"],[576,68,581,74],[576,71,581,77,"snapPoint"],[576,80,581,86],[576,83,581,89,"containerSize"],[576,96,581,102],[576,97,581,103,"height"],[576,103,581,109],[576,106,581,112],[576,107,581,113],[577,10,582,16],[577,14,582,20,"windowDimensions"],[577,30,582,36],[577,32,582,38],[578,12,583,20],[578,19,583,27,"direction"],[578,28,583,36],[578,33,583,41],[578,41,583,49],[578,44,583,52,"containerSize"],[578,57,583,65],[578,58,583,66,"height"],[578,64,583,72],[578,67,583,75,"height"],[578,73,583,81],[578,76,583,84],[578,77,583,85,"containerSize"],[578,90,583,98],[578,91,583,99,"height"],[578,97,583,105],[578,100,583,108,"height"],[578,106,583,114],[579,10,584,16],[580,10,585,16],[580,17,585,23,"height"],[580,23,585,29],[581,8,586,12],[582,8,587,12],[582,14,587,18,"width"],[582,19,587,23],[582,22,587,26,"isPx"],[582,26,587,30],[582,29,587,33,"snapPointAsNumber"],[582,46,587,50],[582,49,587,53,"windowDimensions"],[582,65,587,69],[582,68,587,72,"snapPoint"],[582,77,587,81],[582,80,587,84,"containerSize"],[582,93,587,97],[582,94,587,98,"width"],[582,99,587,103],[582,102,587,106],[582,103,587,107],[583,8,588,12],[583,12,588,16,"windowDimensions"],[583,28,588,32],[583,30,588,34],[584,10,589,16],[584,17,589,23,"direction"],[584,26,589,32],[584,31,589,37],[584,38,589,44],[584,41,589,47,"containerSize"],[584,54,589,60],[584,55,589,61,"width"],[584,60,589,66],[584,63,589,69,"width"],[584,68,589,74],[584,71,589,77],[584,72,589,78,"containerSize"],[584,85,589,91],[584,86,589,92,"width"],[584,91,589,97],[584,94,589,100,"width"],[584,99,589,105],[585,8,590,12],[586,8,591,12],[586,15,591,19,"width"],[586,20,591,24],[587,6,592,8],[587,7,592,9],[587,8,592,10],[587,13,592,15],[587,17,592,19],[587,20,592,22,"_snapPoints_map"],[587,35,592,37],[587,38,592,40],[587,40,592,42],[588,4,593,4],[588,5,593,5],[588,7,593,7],[588,8,594,8,"snapPoints"],[588,18,594,18],[588,20,595,8,"windowDimensions"],[588,36,595,24],[588,38,596,8,"container"],[588,47,596,17],[588,48,597,5],[588,49,597,6],[589,4,598,4],[589,10,598,10,"activeSnapPointOffset"],[589,31,598,31],[589,34,598,34,"React__namespace"],[589,50,598,50],[589,51,598,51,"default"],[589,58,598,58],[589,59,598,59,"useMemo"],[589,66,598,66],[589,67,598,67],[589,73,598,71,"activeSnapPointIndex"],[589,93,598,91],[589,98,598,96],[589,102,598,100],[589,105,598,103,"snapPointsOffset"],[589,121,598,119],[589,125,598,123],[589,129,598,127],[589,132,598,130],[589,137,598,135],[589,138,598,136],[589,141,598,139,"snapPointsOffset"],[589,157,598,155],[589,158,598,156,"activeSnapPointIndex"],[589,178,598,176],[589,179,598,177],[589,182,598,180],[589,186,598,184],[589,188,598,186],[589,189,599,8,"snapPointsOffset"],[589,205,599,24],[589,207,600,8,"activeSnapPointIndex"],[589,227,600,28],[589,228,601,5],[589,229,601,6],[590,4,602,4],[590,10,602,10,"snapToPoint"],[590,21,602,21],[590,24,602,24,"React__namespace"],[590,40,602,40],[590,41,602,41,"default"],[590,48,602,48],[590,49,602,49,"useCallback"],[590,60,602,60],[590,61,602,62,"dimension"],[590,70,602,71],[590,74,602,74],[591,6,603,8],[591,10,603,12,"_snapPointsOffset_findIndex"],[591,37,603,39],[592,6,604,8],[592,12,604,14,"newSnapPointIndex"],[592,29,604,31],[592,32,604,34],[592,33,604,35,"_snapPointsOffset_findIndex"],[592,60,604,62],[592,63,604,65,"snapPointsOffset"],[592,79,604,81],[592,83,604,85],[592,87,604,89],[592,90,604,92],[592,95,604,97],[592,96,604,98],[592,99,604,101,"snapPointsOffset"],[592,115,604,117],[592,116,604,118,"findIndex"],[592,125,604,127],[592,126,604,129,"snapPointDim"],[592,138,604,141],[592,142,604,144,"snapPointDim"],[592,154,604,156],[592,159,604,161,"dimension"],[592,168,604,170],[592,169,604,171],[592,174,604,176],[592,178,604,180],[592,181,604,183,"_snapPointsOffset_findIndex"],[592,208,604,210],[592,211,604,213],[592,215,604,217],[593,6,605,8,"onSnapPointChange"],[593,23,605,25],[593,24,605,26,"newSnapPointIndex"],[593,41,605,43],[593,42,605,44],[594,6,606,8,"set"],[594,9,606,11],[594,10,606,12,"drawerRef"],[594,19,606,21],[594,20,606,22,"current"],[594,27,606,29],[594,29,606,31],[595,8,607,12,"transition"],[595,18,607,22],[595,20,607,24],[595,33,607,37,"TRANSITIONS"],[595,44,607,48],[595,45,607,49,"DURATION"],[595,53,607,57],[595,71,607,75,"TRANSITIONS"],[595,82,607,86],[595,83,607,87,"EASE"],[595,87,607,91],[595,88,607,92,"join"],[595,92,607,96],[595,93,607,97],[595,96,607,100],[595,97,607,101],[595,100,607,104],[596,8,608,12,"transform"],[596,17,608,21],[596,19,608,23,"isVertical"],[596,29,608,33],[596,30,608,34,"direction"],[596,39,608,43],[596,40,608,44],[596,43,608,47],[596,61,608,65,"dimension"],[596,70,608,74],[596,78,608,82],[596,81,608,85],[596,96,608,100,"dimension"],[596,105,608,109],[597,6,609,8],[597,7,609,9],[597,8,609,10],[598,6,610,8],[598,10,610,12,"snapPointsOffset"],[598,26,610,28],[598,30,610,32,"newSnapPointIndex"],[598,47,610,49],[598,52,610,54,"snapPointsOffset"],[598,68,610,70],[598,69,610,71,"length"],[598,75,610,77],[598,78,610,80],[598,79,610,81],[598,83,610,85,"fadeFromIndex"],[598,96,610,98],[598,101,610,103,"undefined"],[598,110,610,112],[598,114,610,116,"newSnapPointIndex"],[598,131,610,133],[598,136,610,138,"fadeFromIndex"],[598,149,610,151],[598,153,610,155,"newSnapPointIndex"],[598,170,610,172],[598,173,610,175,"fadeFromIndex"],[598,186,610,188],[598,188,610,190],[599,8,611,12,"set"],[599,11,611,15],[599,12,611,16,"overlayRef"],[599,22,611,26],[599,23,611,27,"current"],[599,30,611,34],[599,32,611,36],[600,10,612,16,"transition"],[600,20,612,26],[600,22,612,28],[600,33,612,39,"TRANSITIONS"],[600,44,612,50],[600,45,612,51,"DURATION"],[600,53,612,59],[600,71,612,77,"TRANSITIONS"],[600,82,612,88],[600,83,612,89,"EASE"],[600,87,612,93],[600,88,612,94,"join"],[600,92,612,98],[600,93,612,99],[600,96,612,102],[600,97,612,103],[600,100,612,106],[601,10,613,16,"opacity"],[601,17,613,23],[601,19,613,25],[602,8,614,12],[602,9,614,13],[602,10,614,14],[603,6,615,8],[603,7,615,9],[603,13,615,15],[604,8,616,12,"set"],[604,11,616,15],[604,12,616,16,"overlayRef"],[604,22,616,26],[604,23,616,27,"current"],[604,30,616,34],[604,32,616,36],[605,10,617,16,"transition"],[605,20,617,26],[605,22,617,28],[605,33,617,39,"TRANSITIONS"],[605,44,617,50],[605,45,617,51,"DURATION"],[605,53,617,59],[605,71,617,77,"TRANSITIONS"],[605,82,617,88],[605,83,617,89,"EASE"],[605,87,617,93],[605,88,617,94,"join"],[605,92,617,98],[605,93,617,99],[605,96,617,102],[605,97,617,103],[605,100,617,106],[606,10,618,16,"opacity"],[606,17,618,23],[606,19,618,25],[607,8,619,12],[607,9,619,13],[607,10,619,14],[608,6,620,8],[609,6,621,8,"setActiveSnapPoint"],[609,24,621,26],[609,25,621,27,"snapPoints"],[609,35,621,37],[609,39,621,41],[609,43,621,45],[609,46,621,48],[609,51,621,53],[609,52,621,54],[609,55,621,57,"snapPoints"],[609,65,621,67],[609,66,621,68,"Math"],[609,70,621,72],[609,71,621,73,"max"],[609,74,621,76],[609,75,621,77,"newSnapPointIndex"],[609,92,621,94],[609,94,621,96],[609,95,621,97],[609,96,621,98],[609,97,621,99],[609,98,621,100],[610,4,622,4],[610,5,622,5],[610,7,622,7],[610,8,623,8,"drawerRef"],[610,17,623,17],[610,18,623,18,"current"],[610,25,623,25],[610,27,624,8,"snapPoints"],[610,37,624,18],[610,39,625,8,"snapPointsOffset"],[610,55,625,24],[610,57,626,8,"fadeFromIndex"],[610,70,626,21],[610,72,627,8,"overlayRef"],[610,82,627,18],[610,84,628,8,"setActiveSnapPoint"],[610,102,628,26],[610,103,629,5],[610,104,629,6],[611,4,630,4,"React__namespace"],[611,20,630,20],[611,21,630,21,"default"],[611,28,630,28],[611,29,630,29,"useEffect"],[611,38,630,38],[611,39,630,39],[611,45,630,43],[612,6,631,8],[612,10,631,12,"activeSnapPoint"],[612,25,631,27],[612,29,631,31,"activeSnapPointProp"],[612,48,631,50],[612,50,631,52],[613,8,632,12],[613,12,632,16,"_snapPoints_findIndex"],[613,33,632,37],[614,8,633,12],[614,14,633,18,"newIndex"],[614,22,633,26],[614,25,633,29],[614,26,633,30,"_snapPoints_findIndex"],[614,47,633,51],[614,50,633,54,"snapPoints"],[614,60,633,64],[614,64,633,68],[614,68,633,72],[614,71,633,75],[614,76,633,80],[614,77,633,81],[614,80,633,84,"snapPoints"],[614,90,633,94],[614,91,633,95,"findIndex"],[614,100,633,104],[614,101,633,106,"snapPoint"],[614,110,633,115],[614,114,633,118,"snapPoint"],[614,123,633,127],[614,128,633,132,"activeSnapPointProp"],[614,147,633,151],[614,151,633,155,"snapPoint"],[614,160,633,164],[614,165,633,169,"activeSnapPoint"],[614,180,633,184],[614,181,633,185],[614,186,633,190],[614,190,633,194],[614,193,633,197,"_snapPoints_findIndex"],[614,214,633,218],[614,217,633,221],[614,218,633,222],[614,219,633,223],[615,8,634,12],[615,12,634,16,"snapPointsOffset"],[615,28,634,32],[615,32,634,36,"newIndex"],[615,40,634,44],[615,45,634,49],[615,46,634,50],[615,47,634,51],[615,51,634,55],[615,58,634,62,"snapPointsOffset"],[615,74,634,78],[615,75,634,79,"newIndex"],[615,83,634,87],[615,84,634,88],[615,89,634,93],[615,97,634,101],[615,99,634,103],[616,10,635,16,"snapToPoint"],[616,21,635,27],[616,22,635,28,"snapPointsOffset"],[616,38,635,44],[616,39,635,45,"newIndex"],[616,47,635,53],[616,48,635,54],[616,49,635,55],[617,8,636,12],[618,6,637,8],[619,4,638,4],[619,5,638,5],[619,7,638,7],[619,8,639,8,"activeSnapPoint"],[619,23,639,23],[619,25,640,8,"activeSnapPointProp"],[619,44,640,27],[619,46,641,8,"snapPoints"],[619,56,641,18],[619,58,642,8,"snapPointsOffset"],[619,74,642,24],[619,76,643,8,"snapToPoint"],[619,87,643,19],[619,88,644,5],[619,89,644,6],[620,4,645,4],[620,13,645,13,"onRelease"],[620,22,645,22,"onRelease"],[620,23,645,23],[621,6,645,25,"draggedDistance"],[621,21,645,40],[622,6,645,42,"closeDrawer"],[622,17,645,53],[623,6,645,55,"velocity"],[623,14,645,63],[624,6,645,65,"dismissible"],[625,4,645,77],[625,5,645,78],[625,7,645,80],[626,6,646,8],[626,10,646,12,"fadeFromIndex"],[626,23,646,25],[626,28,646,30,"undefined"],[626,37,646,39],[626,39,646,41],[627,6,647,8],[627,12,647,14,"currentPosition"],[627,27,647,29],[627,30,647,32,"direction"],[627,39,647,41],[627,44,647,46],[627,52,647,54],[627,56,647,58,"direction"],[627,65,647,67],[627,70,647,72],[627,77,647,79],[627,80,647,82],[627,81,647,83,"activeSnapPointOffset"],[627,102,647,104],[627,106,647,108],[627,110,647,112],[627,113,647,115,"activeSnapPointOffset"],[627,134,647,136],[627,137,647,139],[627,138,647,140],[627,142,647,144,"draggedDistance"],[627,157,647,159],[627,160,647,162],[627,161,647,163,"activeSnapPointOffset"],[627,182,647,184],[627,186,647,188],[627,190,647,192],[627,193,647,195,"activeSnapPointOffset"],[627,214,647,216],[627,217,647,219],[627,218,647,220],[627,222,647,224,"draggedDistance"],[627,237,647,239],[628,6,648,8],[628,12,648,14,"isOverlaySnapPoint"],[628,30,648,32],[628,33,648,35,"activeSnapPointIndex"],[628,53,648,55],[628,58,648,60,"fadeFromIndex"],[628,71,648,73],[628,74,648,76],[628,75,648,77],[629,6,649,8],[629,12,649,14,"isFirst"],[629,19,649,21],[629,22,649,24,"activeSnapPointIndex"],[629,42,649,44],[629,47,649,49],[629,48,649,50],[630,6,650,8],[630,12,650,14,"hasDraggedUp"],[630,24,650,26],[630,27,650,29,"draggedDistance"],[630,42,650,44],[630,45,650,47],[630,46,650,48],[631,6,651,8],[631,10,651,12,"isOverlaySnapPoint"],[631,28,651,30],[631,30,651,32],[632,8,652,12,"set"],[632,11,652,15],[632,12,652,16,"overlayRef"],[632,22,652,26],[632,23,652,27,"current"],[632,30,652,34],[632,32,652,36],[633,10,653,16,"transition"],[633,20,653,26],[633,22,653,28],[633,33,653,39,"TRANSITIONS"],[633,44,653,50],[633,45,653,51,"DURATION"],[633,53,653,59],[633,71,653,77,"TRANSITIONS"],[633,82,653,88],[633,83,653,89,"EASE"],[633,87,653,93],[633,88,653,94,"join"],[633,92,653,98],[633,93,653,99],[633,96,653,102],[633,97,653,103],[634,8,654,12],[634,9,654,13],[634,10,654,14],[635,6,655,8],[636,6,656,8],[636,10,656,12],[636,11,656,13,"snapToSequentialPoint"],[636,32,656,34],[636,36,656,38,"velocity"],[636,44,656,46],[636,47,656,49],[636,48,656,50],[636,52,656,54],[636,53,656,55,"hasDraggedUp"],[636,65,656,67],[636,67,656,69],[637,8,657,12],[637,12,657,16,"dismissible"],[637,23,657,27],[637,25,657,29,"closeDrawer"],[637,36,657,40],[637,37,657,41],[637,38,657,42],[637,39,657,43],[637,44,658,17,"snapToPoint"],[637,55,658,28],[637,56,658,29,"snapPointsOffset"],[637,72,658,45],[637,73,658,46],[637,74,658,47],[637,75,658,48],[637,76,658,49],[637,77,658,50],[637,78,658,51],[638,8,659,12],[639,6,660,8],[640,6,661,8],[640,10,661,12],[640,11,661,13,"snapToSequentialPoint"],[640,32,661,34],[640,36,661,38,"velocity"],[640,44,661,46],[640,47,661,49],[640,48,661,50],[640,52,661,54,"hasDraggedUp"],[640,64,661,66],[640,68,661,70,"snapPointsOffset"],[640,84,661,86],[640,88,661,90,"snapPoints"],[640,98,661,100],[640,100,661,102],[641,8,662,12,"snapToPoint"],[641,19,662,23],[641,20,662,24,"snapPointsOffset"],[641,36,662,40],[641,37,662,41,"snapPoints"],[641,47,662,51],[641,48,662,52,"length"],[641,54,662,58],[641,57,662,61],[641,58,662,62],[641,59,662,63],[641,60,662,64],[642,8,663,12],[643,6,664,8],[644,6,665,8],[645,6,666,8],[645,12,666,14,"closestSnapPoint"],[645,28,666,30],[645,31,666,33,"snapPointsOffset"],[645,47,666,49],[645,51,666,53],[645,55,666,57],[645,58,666,60],[645,63,666,65],[645,64,666,66],[645,67,666,69,"snapPointsOffset"],[645,83,666,85],[645,84,666,86,"reduce"],[645,90,666,92],[645,91,666,93],[645,92,666,94,"prev"],[645,96,666,98],[645,98,666,100,"curr"],[645,102,666,104],[645,107,666,107],[646,8,667,12],[646,12,667,16],[646,19,667,23,"prev"],[646,23,667,27],[646,28,667,32],[646,36,667,40],[646,40,667,44],[646,47,667,51,"curr"],[646,51,667,55],[646,56,667,60],[646,64,667,68],[646,66,667,70],[646,73,667,77,"prev"],[646,77,667,81],[647,8,668,12],[647,15,668,19,"Math"],[647,19,668,23],[647,20,668,24,"abs"],[647,23,668,27],[647,24,668,28,"curr"],[647,28,668,32],[647,31,668,35,"currentPosition"],[647,46,668,50],[647,47,668,51],[647,50,668,54,"Math"],[647,54,668,58],[647,55,668,59,"abs"],[647,58,668,62],[647,59,668,63,"prev"],[647,63,668,67],[647,66,668,70,"currentPosition"],[647,81,668,85],[647,82,668,86],[647,85,668,89,"curr"],[647,89,668,93],[647,92,668,96,"prev"],[647,96,668,100],[648,6,669,8],[648,7,669,9],[648,8,669,10],[649,6,670,8],[649,12,670,14,"dim"],[649,15,670,17],[649,18,670,20,"isVertical"],[649,28,670,30],[649,29,670,31,"direction"],[649,38,670,40],[649,39,670,41],[649,42,670,44,"window"],[649,48,670,50],[649,49,670,51,"innerHeight"],[649,60,670,62],[649,63,670,65,"window"],[649,69,670,71],[649,70,670,72,"innerWidth"],[649,80,670,82],[650,6,671,8],[650,10,671,12,"velocity"],[650,18,671,20],[650,21,671,23,"VELOCITY_THRESHOLD"],[650,39,671,41],[650,43,671,45,"Math"],[650,47,671,49],[650,48,671,50,"abs"],[650,51,671,53],[650,52,671,54,"draggedDistance"],[650,67,671,69],[650,68,671,70],[650,71,671,73,"dim"],[650,74,671,76],[650,77,671,79],[650,80,671,82],[650,82,671,84],[651,8,672,12],[651,14,672,18,"dragDirection"],[651,27,672,31],[651,30,672,34,"hasDraggedUp"],[651,42,672,46],[651,45,672,49],[651,46,672,50],[651,49,672,53],[651,50,672,54],[651,51,672,55],[651,52,672,56],[651,53,672,57],[652,8,673,12],[653,8,674,12],[653,12,674,16,"dragDirection"],[653,25,674,29],[653,28,674,32],[653,29,674,33],[653,33,674,37,"isLastSnapPoint"],[653,48,674,52],[653,52,674,56,"snapPoints"],[653,62,674,66],[653,64,674,68],[654,10,675,16,"snapToPoint"],[654,21,675,27],[654,22,675,28,"snapPointsOffset"],[654,38,675,44],[654,39,675,45,"snapPoints"],[654,49,675,55],[654,50,675,56,"length"],[654,56,675,62],[654,59,675,65],[654,60,675,66],[654,61,675,67],[654,62,675,68],[655,10,676,16],[656,8,677,12],[657,8,678,12],[657,12,678,16,"isFirst"],[657,19,678,23],[657,23,678,27,"dragDirection"],[657,36,678,40],[657,39,678,43],[657,40,678,44],[657,44,678,48,"dismissible"],[657,55,678,59],[657,57,678,61],[658,10,679,16,"closeDrawer"],[658,21,679,27],[658,22,679,28],[658,23,679,29],[659,8,680,12],[660,8,681,12],[660,12,681,16,"activeSnapPointIndex"],[660,32,681,36],[660,37,681,41],[660,41,681,45],[660,43,681,47],[661,8,682,12,"snapToPoint"],[661,19,682,23],[661,20,682,24,"snapPointsOffset"],[661,36,682,40],[661,37,682,41,"activeSnapPointIndex"],[661,57,682,61],[661,60,682,64,"dragDirection"],[661,73,682,77],[661,74,682,78],[661,75,682,79],[662,8,683,12],[663,6,684,8],[664,6,685,8,"snapToPoint"],[664,17,685,19],[664,18,685,20,"closestSnapPoint"],[664,34,685,36],[664,35,685,37],[665,4,686,4],[666,4,687,4],[666,13,687,13,"onDrag"],[666,19,687,19,"onDrag"],[666,20,687,20],[667,6,687,22,"draggedDistance"],[668,4,687,38],[668,5,687,39],[668,7,687,41],[669,6,688,8],[669,10,688,12,"activeSnapPointOffset"],[669,31,688,33],[669,36,688,38],[669,40,688,42],[669,42,688,44],[670,6,689,8],[670,12,689,14,"newValue"],[670,20,689,22],[670,23,689,25,"direction"],[670,32,689,34],[670,37,689,39],[670,45,689,47],[670,49,689,51,"direction"],[670,58,689,60],[670,63,689,65],[670,70,689,72],[670,73,689,75,"activeSnapPointOffset"],[670,94,689,96],[670,97,689,99,"draggedDistance"],[670,112,689,114],[670,115,689,117,"activeSnapPointOffset"],[670,136,689,138],[670,139,689,141,"draggedDistance"],[670,154,689,156],[671,6,690,8],[672,6,691,8],[672,10,691,12],[672,11,691,13,"direction"],[672,20,691,22],[672,25,691,27],[672,33,691,35],[672,37,691,39,"direction"],[672,46,691,48],[672,51,691,53],[672,58,691,60],[672,63,691,65,"newValue"],[672,71,691,73],[672,74,691,76,"snapPointsOffset"],[672,90,691,92],[672,91,691,93,"snapPointsOffset"],[672,107,691,109],[672,108,691,110,"length"],[672,114,691,116],[672,117,691,119],[672,118,691,120],[672,119,691,121],[672,121,691,123],[673,8,692,12],[674,6,693,8],[675,6,694,8],[675,10,694,12],[675,11,694,13,"direction"],[675,20,694,22],[675,25,694,27],[675,30,694,32],[675,34,694,36,"direction"],[675,43,694,45],[675,48,694,50],[675,54,694,56],[675,59,694,61,"newValue"],[675,67,694,69],[675,70,694,72,"snapPointsOffset"],[675,86,694,88],[675,87,694,89,"snapPointsOffset"],[675,103,694,105],[675,104,694,106,"length"],[675,110,694,112],[675,113,694,115],[675,114,694,116],[675,115,694,117],[675,117,694,119],[676,8,695,12],[677,6,696,8],[678,6,697,8,"set"],[678,9,697,11],[678,10,697,12,"drawerRef"],[678,19,697,21],[678,20,697,22,"current"],[678,27,697,29],[678,29,697,31],[679,8,698,12,"transform"],[679,17,698,21],[679,19,698,23,"isVertical"],[679,29,698,33],[679,30,698,34,"direction"],[679,39,698,43],[679,40,698,44],[679,43,698,47],[679,61,698,65,"newValue"],[679,69,698,73],[679,77,698,81],[679,80,698,84],[679,95,698,99,"newValue"],[679,103,698,107],[680,6,699,8],[680,7,699,9],[680,8,699,10],[681,4,700,4],[682,4,701,4],[682,13,701,13,"getPercentageDragged"],[682,33,701,33,"getPercentageDragged"],[682,34,701,34,"absDraggedDistance"],[682,52,701,52],[682,54,701,54,"isDraggingDown"],[682,68,701,68],[682,70,701,70],[683,6,702,8],[683,10,702,12],[683,11,702,13,"snapPoints"],[683,21,702,23],[683,25,702,27],[683,32,702,34,"activeSnapPointIndex"],[683,52,702,54],[683,57,702,59],[683,65,702,67],[683,69,702,71],[683,70,702,72,"snapPointsOffset"],[683,86,702,88],[683,90,702,92,"fadeFromIndex"],[683,103,702,105],[683,108,702,110,"undefined"],[683,117,702,119],[683,119,702,121],[683,126,702,128],[683,130,702,132],[684,6,703,8],[685,6,704,8],[685,12,704,14,"isOverlaySnapPoint"],[685,30,704,32],[685,33,704,35,"activeSnapPointIndex"],[685,53,704,55],[685,58,704,60,"fadeFromIndex"],[685,71,704,73],[685,74,704,76],[685,75,704,77],[686,6,705,8],[686,12,705,14,"isOverlaySnapPointOrHigher"],[686,38,705,40],[686,41,705,43,"activeSnapPointIndex"],[686,61,705,63],[686,65,705,67,"fadeFromIndex"],[686,78,705,80],[687,6,706,8],[687,10,706,12,"isOverlaySnapPointOrHigher"],[687,36,706,38],[687,40,706,42,"isDraggingDown"],[687,54,706,56],[687,56,706,58],[688,8,707,12],[688,15,707,19],[688,16,707,20],[689,6,708,8],[690,6,709,8],[691,6,710,8],[691,10,710,12,"isOverlaySnapPoint"],[691,28,710,30],[691,32,710,34],[691,33,710,35,"isDraggingDown"],[691,47,710,49],[691,49,710,51],[691,56,710,58],[691,57,710,59],[692,6,711,8],[692,10,711,12],[692,11,711,13,"shouldFade"],[692,21,711,23],[692,25,711,27],[692,26,711,28,"isOverlaySnapPoint"],[692,44,711,46],[692,46,711,48],[692,53,711,55],[692,57,711,59],[693,6,712,8],[694,6,713,8],[694,12,713,14,"targetSnapPointIndex"],[694,32,713,34],[694,35,713,37,"isOverlaySnapPoint"],[694,53,713,55],[694,56,713,58,"activeSnapPointIndex"],[694,76,713,78],[694,79,713,81],[694,80,713,82],[694,83,713,85,"activeSnapPointIndex"],[694,103,713,105],[694,106,713,108],[694,107,713,109],[695,6,714,8],[696,6,715,8],[696,12,715,14,"snapPointDistance"],[696,29,715,31],[696,32,715,34,"isOverlaySnapPoint"],[696,50,715,52],[696,53,715,55,"snapPointsOffset"],[696,69,715,71],[696,70,715,72,"targetSnapPointIndex"],[696,90,715,92],[696,91,715,93],[696,94,715,96,"snapPointsOffset"],[696,110,715,112],[696,111,715,113,"targetSnapPointIndex"],[696,131,715,133],[696,134,715,136],[696,135,715,137],[696,136,715,138],[696,139,715,141,"snapPointsOffset"],[696,155,715,157],[696,156,715,158,"targetSnapPointIndex"],[696,176,715,178],[696,179,715,181],[696,180,715,182],[696,181,715,183],[696,184,715,186,"snapPointsOffset"],[696,200,715,202],[696,201,715,203,"targetSnapPointIndex"],[696,221,715,223],[696,222,715,224],[697,6,716,8],[697,12,716,14,"percentageDragged"],[697,29,716,31],[697,32,716,34,"absDraggedDistance"],[697,50,716,52],[697,53,716,55,"Math"],[697,57,716,59],[697,58,716,60,"abs"],[697,61,716,63],[697,62,716,64,"snapPointDistance"],[697,79,716,81],[697,80,716,82],[698,6,717,8],[698,10,717,12,"isOverlaySnapPoint"],[698,28,717,30],[698,30,717,32],[699,8,718,12],[699,15,718,19],[699,16,718,20],[699,19,718,23,"percentageDragged"],[699,36,718,40],[700,6,719,8],[700,7,719,9],[700,13,719,15],[701,8,720,12],[701,15,720,19,"percentageDragged"],[701,32,720,36],[702,6,721,8],[703,4,722,4],[704,4,723,4],[704,11,723,11],[705,6,724,8,"isLastSnapPoint"],[705,21,724,23],[706,6,725,8,"activeSnapPoint"],[706,21,725,23],[707,6,726,8,"shouldFade"],[707,16,726,18],[708,6,727,8,"getPercentageDragged"],[708,26,727,28],[709,6,728,8,"setActiveSnapPoint"],[709,24,728,26],[710,6,729,8,"activeSnapPointIndex"],[710,26,729,28],[711,6,730,8,"onRelease"],[711,15,730,17],[712,6,731,8,"onDrag"],[712,12,731,14],[713,6,732,8,"snapPointsOffset"],[714,4,733,4],[714,5,733,5],[715,2,734,0],[716,2,736,0],[716,8,736,6,"noop"],[716,12,736,10],[716,15,736,13,"noop"],[716,16,736,13],[716,21,736,17],[716,27,736,21],[716,28,736,22],[716,29,736,23],[717,2,737,0],[717,11,737,9,"useScaleBackground"],[717,29,737,27,"useScaleBackground"],[717,30,737,27],[717,32,737,30],[718,4,738,4],[718,10,738,10],[719,6,738,12,"direction"],[719,15,738,21],[720,6,738,23,"isOpen"],[720,12,738,29],[721,6,738,31,"shouldScaleBackground"],[721,27,738,52],[722,6,738,54,"setBackgroundColorOnScale"],[722,31,738,79],[723,6,738,81,"noBodyStyles"],[724,4,738,94],[724,5,738,95],[724,8,738,98,"useDrawerContext"],[724,24,738,114],[724,25,738,115],[724,26,738,116],[725,4,739,4],[725,10,739,10,"timeoutIdRef"],[725,22,739,22],[725,25,739,25,"React__namespace"],[725,41,739,41],[725,42,739,42,"default"],[725,49,739,49],[725,50,739,50,"useRef"],[725,56,739,56],[725,57,739,57],[725,61,739,61],[725,62,739,62],[726,4,740,4],[726,10,740,10,"initialBackgroundColor"],[726,32,740,32],[726,35,740,35,"React"],[726,40,740,40],[726,41,740,41,"useMemo"],[726,48,740,48],[726,49,740,49],[726,55,740,53,"document"],[726,63,740,61],[726,64,740,62,"body"],[726,68,740,66],[726,69,740,67,"style"],[726,74,740,72],[726,75,740,73,"backgroundColor"],[726,90,740,88],[726,92,740,90],[726,94,740,92],[726,95,740,93],[727,4,741,4],[727,13,741,13,"getScale"],[727,21,741,21,"getScale"],[727,22,741,21],[727,24,741,24],[728,6,742,8],[728,13,742,15],[728,14,742,16,"window"],[728,20,742,22],[728,21,742,23,"innerWidth"],[728,31,742,33],[728,34,742,36,"WINDOW_TOP_OFFSET"],[728,51,742,53],[728,55,742,57,"window"],[728,61,742,63],[728,62,742,64,"innerWidth"],[728,72,742,74],[729,4,743,4],[730,4,744,4,"React__namespace"],[730,20,744,20],[730,21,744,21,"default"],[730,28,744,28],[730,29,744,29,"useEffect"],[730,38,744,38],[730,39,744,39],[730,45,744,43],[731,6,745,8],[731,10,745,12,"isOpen"],[731,16,745,18],[731,20,745,22,"shouldScaleBackground"],[731,41,745,43],[731,43,745,45],[732,8,746,12],[732,12,746,16,"timeoutIdRef"],[732,24,746,28],[732,25,746,29,"current"],[732,32,746,36],[732,34,746,38,"clearTimeout"],[732,46,746,50],[732,47,746,51,"timeoutIdRef"],[732,59,746,63],[732,60,746,64,"current"],[732,67,746,71],[732,68,746,72],[733,8,747,12],[733,14,747,18,"wrapper"],[733,21,747,25],[733,24,747,28,"document"],[733,32,747,36],[733,33,747,37,"querySelector"],[733,46,747,50],[733,47,747,51],[733,75,747,79],[733,76,747,80],[733,80,747,84,"document"],[733,88,747,92],[733,89,747,93,"querySelector"],[733,102,747,106],[733,103,747,107],[733,126,747,130],[733,127,747,131],[734,8,748,12],[734,12,748,16],[734,13,748,17,"wrapper"],[734,20,748,24],[734,22,748,26],[735,8,749,12,"chain"],[735,13,749,17],[735,14,749,18,"setBackgroundColorOnScale"],[735,39,749,43],[735,43,749,47],[735,44,749,48,"noBodyStyles"],[735,56,749,60],[735,59,749,63,"assignStyle"],[735,70,749,74],[735,71,749,75,"document"],[735,79,749,83],[735,80,749,84,"body"],[735,84,749,88],[735,86,749,90],[736,10,750,16,"background"],[736,20,750,26],[736,22,750,28],[737,8,751,12],[737,9,751,13],[737,10,751,14],[737,13,751,17,"noop"],[737,17,751,21],[737,19,751,23,"assignStyle"],[737,30,751,34],[737,31,751,35,"wrapper"],[737,38,751,42],[737,40,751,44],[738,10,752,16,"transformOrigin"],[738,25,752,31],[738,27,752,33,"isVertical"],[738,37,752,43],[738,38,752,44,"direction"],[738,47,752,53],[738,48,752,54],[738,51,752,57],[738,56,752,62],[738,59,752,65],[738,65,752,71],[739,10,753,16,"transitionProperty"],[739,28,753,34],[739,30,753,36],[739,56,753,62],[740,10,754,16,"transitionDuration"],[740,28,754,34],[740,30,754,36],[740,33,754,39,"TRANSITIONS"],[740,44,754,50],[740,45,754,51,"DURATION"],[740,53,754,59],[740,56,754,62],[741,10,755,16,"transitionTimingFunction"],[741,34,755,40],[741,36,755,42],[741,52,755,58,"TRANSITIONS"],[741,63,755,69],[741,64,755,70,"EASE"],[741,68,755,74],[741,69,755,75,"join"],[741,73,755,79],[741,74,755,80],[741,77,755,83],[741,78,755,84],[742,8,756,12],[742,9,756,13],[742,10,756,14],[742,11,756,15],[743,8,757,12],[743,14,757,18,"wrapperStylesCleanup"],[743,34,757,38],[743,37,757,41,"assignStyle"],[743,48,757,52],[743,49,757,53,"wrapper"],[743,56,757,60],[743,58,757,60,"Object"],[743,64,757,60],[743,65,757,60,"assign"],[743,71,757,60],[744,10,758,16,"borderRadius"],[744,22,758,28],[744,24,758,30],[744,27,758,33,"BORDER_RADIUS"],[744,40,758,46],[744,44,758,50],[745,10,759,16,"overflow"],[745,18,759,24],[745,20,759,26],[746,8,759,34],[746,11,760,19,"isVertical"],[746,21,760,29],[746,22,760,30,"direction"],[746,31,760,39],[746,32,760,40],[746,35,760,43],[747,10,761,20,"transform"],[747,19,761,29],[747,21,761,31],[747,30,761,40,"getScale"],[747,38,761,48],[747,39,761,49],[747,40,761,50],[748,8,762,16],[748,9,762,17],[748,12,762,20],[749,10,763,20,"transform"],[749,19,763,29],[749,21,763,31],[749,30,763,40,"getScale"],[749,38,763,48],[749,39,763,49],[749,40,763,50],[750,8,764,16],[750,9,764,17],[750,10,765,13],[750,11,765,14],[751,8,766,12],[751,15,766,19],[751,21,766,23],[752,10,767,16,"wrapperStylesCleanup"],[752,30,767,36],[752,31,767,37],[752,32,767,38],[753,10,768,16,"timeoutIdRef"],[753,22,768,28],[753,23,768,29,"current"],[753,30,768,36],[753,33,768,39,"window"],[753,39,768,45],[753,40,768,46,"setTimeout"],[753,50,768,56],[753,51,768,57],[753,57,768,61],[754,12,769,20],[754,16,769,24,"initialBackgroundColor"],[754,38,769,46],[754,40,769,48],[755,14,770,24,"document"],[755,22,770,32],[755,23,770,33,"body"],[755,27,770,37],[755,28,770,38,"style"],[755,33,770,43],[755,34,770,44,"background"],[755,44,770,54],[755,47,770,57,"initialBackgroundColor"],[755,69,770,79],[756,12,771,20],[756,13,771,21],[756,19,771,27],[757,14,772,24,"document"],[757,22,772,32],[757,23,772,33,"body"],[757,27,772,37],[757,28,772,38,"style"],[757,33,772,43],[757,34,772,44,"removeProperty"],[757,48,772,58],[757,49,772,59],[757,61,772,71],[757,62,772,72],[758,12,773,20],[759,10,774,16],[759,11,774,17],[759,13,774,19,"TRANSITIONS"],[759,24,774,30],[759,25,774,31,"DURATION"],[759,33,774,39],[759,36,774,42],[759,40,774,46],[759,41,774,47],[760,8,775,12],[760,9,775,13],[761,6,776,8],[762,4,777,4],[762,5,777,5],[762,7,777,7],[762,8,778,8,"isOpen"],[762,14,778,14],[762,16,779,8,"shouldScaleBackground"],[762,37,779,29],[762,39,780,8,"initialBackgroundColor"],[762,61,780,30],[762,62,781,5],[762,63,781,6],[763,2,782,0],[764,2,784,0],[764,6,784,4,"previousBodyPosition"],[764,26,784,24],[764,29,784,27],[764,33,784,31],[765,2,785,0],[766,0,786,0],[767,0,787,0],[768,0,788,0],[769,0,789,0],[770,0,790,0],[771,0,791,0],[772,0,792,0],[773,2,792,4],[773,11,792,13,"usePositionFixed"],[773,27,792,29,"usePositionFixed"],[773,28,792,30],[774,4,792,32,"isOpen"],[774,10,792,38],[775,4,792,40,"modal"],[775,9,792,45],[776,4,792,47,"nested"],[776,10,792,53],[777,4,792,55,"hasBeenOpened"],[777,17,792,68],[778,4,792,70,"preventScrollRestoration"],[778,28,792,94],[779,4,792,96,"noBodyStyles"],[780,2,792,109],[780,3,792,110],[780,5,792,112],[781,4,793,4],[781,10,793,10],[781,11,793,11,"activeUrl"],[781,20,793,20],[781,22,793,22,"setActiveUrl"],[781,34,793,34],[781,35,793,35],[781,38,793,38,"React__namespace"],[781,54,793,54],[781,55,793,55,"default"],[781,62,793,62],[781,63,793,63,"useState"],[781,71,793,71],[781,72,793,72],[781,78,793,76],[781,85,793,83,"window"],[781,91,793,89],[781,96,793,94],[781,107,793,105],[781,110,793,108,"window"],[781,116,793,114],[781,117,793,115,"location"],[781,125,793,123],[781,126,793,124,"href"],[781,130,793,128],[781,133,793,131],[781,135,793,133],[781,136,793,134],[782,4,794,4],[782,10,794,10,"scrollPos"],[782,19,794,19],[782,22,794,22,"React__namespace"],[782,38,794,38],[782,39,794,39,"default"],[782,46,794,46],[782,47,794,47,"useRef"],[782,53,794,53],[782,54,794,54],[782,55,794,55],[782,56,794,56],[783,4,795,4],[783,10,795,10,"setPositionFixed"],[783,26,795,26],[783,29,795,29,"React__namespace"],[783,45,795,45],[783,46,795,46,"default"],[783,53,795,53],[783,54,795,54,"useCallback"],[783,65,795,65],[783,66,795,66],[783,72,795,70],[784,6,796,8],[785,6,797,8],[785,10,797,12],[785,11,797,13,"isSafari"],[785,19,797,21],[785,20,797,22],[785,21,797,23],[785,23,797,25],[786,6,798,8],[787,6,799,8],[787,10,799,12,"previousBodyPosition"],[787,30,799,32],[787,35,799,37],[787,39,799,41],[787,43,799,45,"isOpen"],[787,49,799,51],[787,53,799,55],[787,54,799,56,"noBodyStyles"],[787,66,799,68],[787,68,799,70],[788,8,800,12,"previousBodyPosition"],[788,28,800,32],[788,31,800,35],[789,10,801,16,"position"],[789,18,801,24],[789,20,801,26,"document"],[789,28,801,34],[789,29,801,35,"body"],[789,33,801,39],[789,34,801,40,"style"],[789,39,801,45],[789,40,801,46,"position"],[789,48,801,54],[790,10,802,16,"top"],[790,13,802,19],[790,15,802,21,"document"],[790,23,802,29],[790,24,802,30,"body"],[790,28,802,34],[790,29,802,35,"style"],[790,34,802,40],[790,35,802,41,"top"],[790,38,802,44],[791,10,803,16,"left"],[791,14,803,20],[791,16,803,22,"document"],[791,24,803,30],[791,25,803,31,"body"],[791,29,803,35],[791,30,803,36,"style"],[791,35,803,41],[791,36,803,42,"left"],[791,40,803,46],[792,10,804,16,"height"],[792,16,804,22],[792,18,804,24,"document"],[792,26,804,32],[792,27,804,33,"body"],[792,31,804,37],[792,32,804,38,"style"],[792,37,804,43],[792,38,804,44,"height"],[792,44,804,50],[793,10,805,16,"right"],[793,15,805,21],[793,17,805,23],[794,8,806,12],[794,9,806,13],[795,8,807,12],[796,8,808,12],[796,14,808,18],[797,10,808,20,"scrollX"],[797,17,808,27],[798,10,808,29,"innerHeight"],[799,8,808,41],[799,9,808,42],[799,12,808,45,"window"],[799,18,808,51],[800,8,809,12,"document"],[800,16,809,20],[800,17,809,21,"body"],[800,21,809,25],[800,22,809,26,"style"],[800,27,809,31],[800,28,809,32,"setProperty"],[800,39,809,43],[800,40,809,44],[800,50,809,54],[800,52,809,56],[800,59,809,63],[800,61,809,65],[800,72,809,76],[800,73,809,77],[801,8,810,12,"Object"],[801,14,810,18],[801,15,810,19,"assign"],[801,21,810,25],[801,22,810,26,"document"],[801,30,810,34],[801,31,810,35,"body"],[801,35,810,39],[801,36,810,40,"style"],[801,41,810,45],[801,43,810,47],[802,10,811,16,"top"],[802,13,811,19],[802,15,811,21],[802,18,811,24],[802,19,811,25,"scrollPos"],[802,28,811,34],[802,29,811,35,"current"],[802,36,811,42],[802,40,811,46],[803,10,812,16,"left"],[803,14,812,20],[803,16,812,22],[803,19,812,25],[803,20,812,26,"scrollX"],[803,27,812,33],[803,31,812,37],[804,10,813,16,"right"],[804,15,813,21],[804,17,813,23],[804,22,813,28],[805,10,814,16,"height"],[805,16,814,22],[805,18,814,24],[806,8,815,12],[806,9,815,13],[806,10,815,14],[807,8,816,12,"window"],[807,14,816,18],[807,15,816,19,"setTimeout"],[807,25,816,29],[807,26,816,30],[807,32,816,34,"window"],[807,38,816,40],[807,39,816,41,"requestAnimationFrame"],[807,60,816,62],[807,61,816,63],[807,67,816,67],[808,10,817,20],[809,10,818,20],[809,16,818,26,"bottomBarHeight"],[809,31,818,41],[809,34,818,44,"innerHeight"],[809,45,818,55],[809,48,818,58,"window"],[809,54,818,64],[809,55,818,65,"innerHeight"],[809,66,818,76],[810,10,819,20],[810,14,819,24,"bottomBarHeight"],[810,29,819,39],[810,33,819,43,"scrollPos"],[810,42,819,52],[810,43,819,53,"current"],[810,50,819,60],[810,54,819,64,"innerHeight"],[810,65,819,75],[810,67,819,77],[811,12,820,24],[812,12,821,24,"document"],[812,20,821,32],[812,21,821,33,"body"],[812,25,821,37],[812,26,821,38,"style"],[812,31,821,43],[812,32,821,44,"top"],[812,35,821,47],[812,38,821,50],[812,41,821,53],[812,43,821,55,"scrollPos"],[812,52,821,64],[812,53,821,65,"current"],[812,60,821,72],[812,63,821,75,"bottomBarHeight"],[812,78,821,90],[812,79,821,91],[812,83,821,95],[813,10,822,20],[814,8,823,16],[814,9,823,17],[814,10,823,18],[814,12,823,20],[814,15,823,23],[814,16,823,24],[815,6,824,8],[816,4,825,4],[816,5,825,5],[816,7,825,7],[816,8,826,8,"isOpen"],[816,14,826,14],[816,15,827,5],[816,16,827,6],[817,4,828,4],[817,10,828,10,"restorePositionSetting"],[817,32,828,32],[817,35,828,35,"React__namespace"],[817,51,828,51],[817,52,828,52,"default"],[817,59,828,59],[817,60,828,60,"useCallback"],[817,71,828,71],[817,72,828,72],[817,78,828,76],[818,6,829,8],[819,6,830,8],[819,10,830,12],[819,11,830,13,"isSafari"],[819,19,830,21],[819,20,830,22],[819,21,830,23],[819,23,830,25],[820,6,831,8],[820,10,831,12,"previousBodyPosition"],[820,30,831,32],[820,35,831,37],[820,39,831,41],[820,43,831,45],[820,44,831,46,"noBodyStyles"],[820,56,831,58],[820,58,831,60],[821,8,832,12],[822,8,833,12],[822,14,833,18,"y"],[822,15,833,19],[822,18,833,22],[822,19,833,23,"parseInt"],[822,27,833,31],[822,28,833,32,"document"],[822,36,833,40],[822,37,833,41,"body"],[822,41,833,45],[822,42,833,46,"style"],[822,47,833,51],[822,48,833,52,"top"],[822,51,833,55],[822,53,833,57],[822,55,833,59],[822,56,833,60],[823,8,834,12],[823,14,834,18,"x"],[823,15,834,19],[823,18,834,22],[823,19,834,23,"parseInt"],[823,27,834,31],[823,28,834,32,"document"],[823,36,834,40],[823,37,834,41,"body"],[823,41,834,45],[823,42,834,46,"style"],[823,47,834,51],[823,48,834,52,"left"],[823,52,834,56],[823,54,834,58],[823,56,834,60],[823,57,834,61],[824,8,835,12],[825,8,836,12,"Object"],[825,14,836,18],[825,15,836,19,"assign"],[825,21,836,25],[825,22,836,26,"document"],[825,30,836,34],[825,31,836,35,"body"],[825,35,836,39],[825,36,836,40,"style"],[825,41,836,45],[825,43,836,47,"previousBodyPosition"],[825,63,836,67],[825,64,836,68],[826,8,837,12,"window"],[826,14,837,18],[826,15,837,19,"requestAnimationFrame"],[826,36,837,40],[826,37,837,41],[826,43,837,45],[827,10,838,16],[827,14,838,20,"preventScrollRestoration"],[827,38,838,44],[827,42,838,48,"activeUrl"],[827,51,838,57],[827,56,838,62,"window"],[827,62,838,68],[827,63,838,69,"location"],[827,71,838,77],[827,72,838,78,"href"],[827,76,838,82],[827,78,838,84],[828,12,839,20,"setActiveUrl"],[828,24,839,32],[828,25,839,33,"window"],[828,31,839,39],[828,32,839,40,"location"],[828,40,839,48],[828,41,839,49,"href"],[828,45,839,53],[828,46,839,54],[829,12,840,20],[830,10,841,16],[831,10,842,16,"window"],[831,16,842,22],[831,17,842,23,"scrollTo"],[831,25,842,31],[831,26,842,32,"x"],[831,27,842,33],[831,29,842,35,"y"],[831,30,842,36],[831,31,842,37],[832,8,843,12],[832,9,843,13],[832,10,843,14],[833,8,844,12,"previousBodyPosition"],[833,28,844,32],[833,31,844,35],[833,35,844,39],[834,6,845,8],[835,4,846,4],[835,5,846,5],[835,7,846,7],[835,8,847,8,"activeUrl"],[835,17,847,17],[835,18,848,5],[835,19,848,6],[836,4,849,4,"React__namespace"],[836,20,849,20],[836,21,849,21,"default"],[836,28,849,28],[836,29,849,29,"useEffect"],[836,38,849,38],[836,39,849,39],[836,45,849,43],[837,6,850,8],[837,15,850,17,"onScroll"],[837,23,850,25,"onScroll"],[837,24,850,25],[837,26,850,28],[838,8,851,12,"scrollPos"],[838,17,851,21],[838,18,851,22,"current"],[838,25,851,29],[838,28,851,32,"window"],[838,34,851,38],[838,35,851,39,"scrollY"],[838,42,851,46],[839,6,852,8],[840,6,853,8,"onScroll"],[840,14,853,16],[840,15,853,17],[840,16,853,18],[841,6,854,8,"window"],[841,12,854,14],[841,13,854,15,"addEventListener"],[841,29,854,31],[841,30,854,32],[841,38,854,40],[841,40,854,42,"onScroll"],[841,48,854,50],[841,49,854,51],[842,6,855,8],[842,13,855,15],[842,19,855,19],[843,8,856,12,"window"],[843,14,856,18],[843,15,856,19,"removeEventListener"],[843,34,856,38],[843,35,856,39],[843,43,856,47],[843,45,856,49,"onScroll"],[843,53,856,57],[843,54,856,58],[844,6,857,8],[844,7,857,9],[845,4,858,4],[845,5,858,5],[845,7,858,7],[845,9,858,9],[845,10,858,10],[846,4,859,4,"React__namespace"],[846,20,859,20],[846,21,859,21,"default"],[846,28,859,28],[846,29,859,29,"useEffect"],[846,38,859,38],[846,39,859,39],[846,45,859,43],[847,6,860,8],[847,10,860,12],[847,11,860,13,"modal"],[847,16,860,18],[847,18,860,20],[848,6,861,8],[848,13,861,15],[848,19,861,19],[849,8,862,12],[849,12,862,16],[849,19,862,23,"document"],[849,27,862,31],[849,32,862,36],[849,43,862,47],[849,45,862,49],[850,8,863,12],[851,8,864,12],[851,14,864,18,"hasDrawerOpened"],[851,29,864,33],[851,32,864,36],[851,33,864,37],[851,34,864,38,"document"],[851,42,864,46],[851,43,864,47,"querySelector"],[851,56,864,60],[851,57,864,61],[851,77,864,81],[851,78,864,82],[852,8,865,12],[852,12,865,16,"hasDrawerOpened"],[852,27,865,31],[852,29,865,33],[853,8,866,12,"restorePositionSetting"],[853,30,866,34],[853,31,866,35],[853,32,866,36],[854,6,867,8],[854,7,867,9],[855,4,868,4],[855,5,868,5],[855,7,868,7],[855,8,869,8,"modal"],[855,13,869,13],[855,15,870,8,"restorePositionSetting"],[855,37,870,30],[855,38,871,5],[855,39,871,6],[856,4,872,4,"React__namespace"],[856,20,872,20],[856,21,872,21,"default"],[856,28,872,28],[856,29,872,29,"useEffect"],[856,38,872,38],[856,39,872,39],[856,45,872,43],[857,6,873,8],[857,10,873,12,"nested"],[857,16,873,18],[857,20,873,22],[857,21,873,23,"hasBeenOpened"],[857,34,873,36],[857,36,873,38],[858,6,874,8],[859,6,875,8],[859,10,875,12,"isOpen"],[859,16,875,18],[859,18,875,20],[860,8,876,12],[861,8,877,12],[861,14,877,18,"isStandalone"],[861,26,877,30],[861,29,877,33,"window"],[861,35,877,39],[861,36,877,40,"matchMedia"],[861,46,877,50],[861,47,877,51],[861,75,877,79],[861,76,877,80],[861,77,877,81,"matches"],[861,84,877,88],[862,8,878,12],[862,9,878,13,"isStandalone"],[862,21,878,25],[862,25,878,29,"setPositionFixed"],[862,41,878,45],[862,42,878,46],[862,43,878,47],[863,8,879,12],[863,12,879,16],[863,13,879,17,"modal"],[863,18,879,22],[863,20,879,24],[864,10,880,16,"window"],[864,16,880,22],[864,17,880,23,"setTimeout"],[864,27,880,33],[864,28,880,34],[864,34,880,38],[865,12,881,20,"restorePositionSetting"],[865,34,881,42],[865,35,881,43],[865,36,881,44],[866,10,882,16],[866,11,882,17],[866,13,882,19],[866,16,882,22],[866,17,882,23],[867,8,883,12],[868,6,884,8],[868,7,884,9],[868,13,884,15],[869,8,885,12,"restorePositionSetting"],[869,30,885,34],[869,31,885,35],[869,32,885,36],[870,6,886,8],[871,4,887,4],[871,5,887,5],[871,7,887,7],[871,8,888,8,"isOpen"],[871,14,888,14],[871,16,889,8,"hasBeenOpened"],[871,29,889,21],[871,31,890,8,"activeUrl"],[871,40,890,17],[871,42,891,8,"modal"],[871,47,891,13],[871,49,892,8,"nested"],[871,55,892,14],[871,57,893,8,"setPositionFixed"],[871,73,893,24],[871,75,894,8,"restorePositionSetting"],[871,97,894,30],[871,98,895,5],[871,99,895,6],[872,4,896,4],[872,11,896,11],[873,6,897,8,"restorePositionSetting"],[874,4,898,4],[874,5,898,5],[875,2,899,0],[876,2,901,0],[876,11,901,9,"Root"],[876,15,901,13,"Root"],[876,16,901,14],[877,4,901,16,"open"],[877,8,901,20],[877,10,901,22,"openProp"],[877,18,901,30],[878,4,901,32,"onOpenChange"],[878,16,901,44],[879,4,901,46,"children"],[879,12,901,54],[880,4,901,56,"onDrag"],[880,10,901,62],[880,12,901,64,"onDragProp"],[880,22,901,74],[881,4,901,76,"onRelease"],[881,13,901,85],[881,15,901,87,"onReleaseProp"],[881,28,901,100],[882,4,901,102,"snapPoints"],[882,14,901,112],[883,4,901,114,"shouldScaleBackground"],[883,25,901,135],[883,28,901,138],[883,33,901,143],[884,4,901,145,"setBackgroundColorOnScale"],[884,29,901,170],[884,32,901,173],[884,36,901,177],[885,4,901,179,"closeThreshold"],[885,18,901,193],[885,21,901,196,"CLOSE_THRESHOLD"],[885,36,901,211],[886,4,901,213,"scrollLockTimeout"],[886,21,901,230],[886,24,901,233,"SCROLL_LOCK_TIMEOUT"],[886,43,901,252],[887,4,901,254,"dismissible"],[887,15,901,265],[887,18,901,268],[887,22,901,272],[888,4,901,274,"handleOnly"],[888,14,901,284],[888,17,901,287],[888,22,901,292],[889,4,901,294,"fadeFromIndex"],[889,17,901,307],[889,20,901,310,"snapPoints"],[889,30,901,320],[889,34,901,324,"snapPoints"],[889,44,901,334],[889,45,901,335,"length"],[889,51,901,341],[889,54,901,344],[889,55,901,345],[890,4,901,347,"activeSnapPoint"],[890,19,901,362],[890,21,901,364,"activeSnapPointProp"],[890,40,901,383],[891,4,901,385,"setActiveSnapPoint"],[891,22,901,403],[891,24,901,405,"setActiveSnapPointProp"],[891,46,901,427],[892,4,901,429,"fixed"],[892,9,901,434],[893,4,901,436,"modal"],[893,9,901,441],[893,12,901,444],[893,16,901,448],[894,4,901,450,"onClose"],[894,11,901,457],[895,4,901,459,"nested"],[895,10,901,465],[896,4,901,467,"noBodyStyles"],[896,16,901,479],[896,19,901,482],[896,24,901,487],[897,4,901,489,"direction"],[897,13,901,498],[897,16,901,501],[897,24,901,509],[898,4,901,511,"defaultOpen"],[898,15,901,522],[898,18,901,525],[898,23,901,530],[899,4,901,532,"disablePreventScroll"],[899,24,901,552],[899,27,901,555],[899,31,901,559],[900,4,901,561,"snapToSequentialPoint"],[900,25,901,582],[900,28,901,585],[900,33,901,590],[901,4,901,592,"preventScrollRestoration"],[901,28,901,616],[901,31,901,619],[901,36,901,624],[902,4,901,626,"repositionInputs"],[902,20,901,642],[902,23,901,645],[902,27,901,649],[903,4,901,651,"onAnimationEnd"],[903,18,901,665],[904,4,901,667,"container"],[904,13,901,676],[905,4,901,678,"autoFocus"],[905,13,901,687],[905,16,901,690],[906,2,901,696],[906,3,901,697],[906,5,901,699],[907,4,902,4],[907,8,902,8,"_drawerRef_current"],[907,26,902,26],[907,28,902,28,"_drawerRef_current1"],[907,47,902,47],[908,4,903,4],[908,10,903,10],[908,11,903,11,"isOpen"],[908,17,903,17],[908,20,903,20],[908,25,903,25],[908,27,903,27,"setIsOpen"],[908,36,903,36],[908,37,903,37],[908,40,903,40,"useControllableState"],[908,60,903,60],[908,61,903,61],[909,6,904,8,"defaultProp"],[909,17,904,19],[909,19,904,21,"defaultOpen"],[909,30,904,32],[910,6,905,8,"prop"],[910,10,905,12],[910,12,905,14,"openProp"],[910,20,905,22],[911,6,906,8,"onChange"],[911,14,906,16],[911,16,906,19,"o"],[911,17,906,20],[911,21,906,23],[912,8,907,12,"onOpenChange"],[912,20,907,24],[912,24,907,28],[912,28,907,32],[912,31,907,35],[912,36,907,40],[912,37,907,41],[912,40,907,44,"onOpenChange"],[912,52,907,56],[912,53,907,57,"o"],[912,54,907,58],[912,55,907,59],[913,8,908,12],[913,12,908,16],[913,13,908,17,"o"],[913,14,908,18],[913,18,908,22],[913,19,908,23,"nested"],[913,25,908,29],[913,27,908,31],[914,10,909,16,"restorePositionSetting"],[914,32,909,38],[914,33,909,39],[914,34,909,40],[915,8,910,12],[916,8,911,12,"setTimeout"],[916,18,911,22],[916,19,911,23],[916,25,911,27],[917,10,912,16,"onAnimationEnd"],[917,24,912,30],[917,28,912,34],[917,32,912,38],[917,35,912,41],[917,40,912,46],[917,41,912,47],[917,44,912,50,"onAnimationEnd"],[917,58,912,64],[917,59,912,65,"o"],[917,60,912,66],[917,61,912,67],[918,8,913,12],[918,9,913,13],[918,11,913,15,"TRANSITIONS"],[918,22,913,26],[918,23,913,27,"DURATION"],[918,31,913,35],[918,34,913,38],[918,38,913,42],[918,39,913,43],[919,8,914,12],[919,12,914,16,"o"],[919,13,914,17],[919,17,914,21],[919,18,914,22,"modal"],[919,23,914,27],[919,25,914,29],[920,10,915,16],[920,14,915,20],[920,21,915,27,"window"],[920,27,915,33],[920,32,915,38],[920,43,915,49],[920,45,915,51],[921,12,916,20,"window"],[921,18,916,26],[921,19,916,27,"requestAnimationFrame"],[921,40,916,48],[921,41,916,49],[921,47,916,53],[922,14,917,24,"document"],[922,22,917,32],[922,23,917,33,"body"],[922,27,917,37],[922,28,917,38,"style"],[922,33,917,43],[922,34,917,44,"pointerEvents"],[922,47,917,57],[922,50,917,60],[922,56,917,66],[923,12,918,20],[923,13,918,21],[923,14,918,22],[924,10,919,16],[925,8,920,12],[926,8,921,12],[926,12,921,16],[926,13,921,17,"o"],[926,14,921,18],[926,16,921,20],[927,10,922,16],[928,10,923,16,"document"],[928,18,923,24],[928,19,923,25,"body"],[928,23,923,29],[928,24,923,30,"style"],[928,29,923,35],[928,30,923,36,"pointerEvents"],[928,43,923,49],[928,46,923,52],[928,52,923,58],[929,8,924,12],[930,6,925,8],[931,4,926,4],[931,5,926,5],[931,6,926,6],[932,4,927,4],[932,10,927,10],[932,11,927,11,"hasBeenOpened"],[932,24,927,24],[932,26,927,26,"setHasBeenOpened"],[932,42,927,42],[932,43,927,43],[932,46,927,46,"React__namespace"],[932,62,927,62],[932,63,927,63,"default"],[932,70,927,70],[932,71,927,71,"useState"],[932,79,927,79],[932,80,927,80],[932,85,927,85],[932,86,927,86],[933,4,928,4],[933,10,928,10],[933,11,928,11,"isDragging"],[933,21,928,21],[933,23,928,23,"setIsDragging"],[933,36,928,36],[933,37,928,37],[933,40,928,40,"React__namespace"],[933,56,928,56],[933,57,928,57,"default"],[933,64,928,64],[933,65,928,65,"useState"],[933,73,928,73],[933,74,928,74],[933,79,928,79],[933,80,928,80],[934,4,929,4],[934,10,929,10],[934,11,929,11,"justReleased"],[934,23,929,23],[934,25,929,25,"setJustReleased"],[934,40,929,40],[934,41,929,41],[934,44,929,44,"React__namespace"],[934,60,929,60],[934,61,929,61,"default"],[934,68,929,68],[934,69,929,69,"useState"],[934,77,929,77],[934,78,929,78],[934,83,929,83],[934,84,929,84],[935,4,930,4],[935,10,930,10,"overlayRef"],[935,20,930,20],[935,23,930,23,"React__namespace"],[935,39,930,39],[935,40,930,40,"default"],[935,47,930,47],[935,48,930,48,"useRef"],[935,54,930,54],[935,55,930,55],[935,59,930,59],[935,60,930,60],[936,4,931,4],[936,10,931,10,"openTime"],[936,18,931,18],[936,21,931,21,"React__namespace"],[936,37,931,37],[936,38,931,38,"default"],[936,45,931,45],[936,46,931,46,"useRef"],[936,52,931,52],[936,53,931,53],[936,57,931,57],[936,58,931,58],[937,4,932,4],[937,10,932,10,"dragStartTime"],[937,23,932,23],[937,26,932,26,"React__namespace"],[937,42,932,42],[937,43,932,43,"default"],[937,50,932,50],[937,51,932,51,"useRef"],[937,57,932,57],[937,58,932,58],[937,62,932,62],[937,63,932,63],[938,4,933,4],[938,10,933,10,"dragEndTime"],[938,21,933,21],[938,24,933,24,"React__namespace"],[938,40,933,40],[938,41,933,41,"default"],[938,48,933,48],[938,49,933,49,"useRef"],[938,55,933,55],[938,56,933,56],[938,60,933,60],[938,61,933,61],[939,4,934,4],[939,10,934,10,"lastTimeDragPrevented"],[939,31,934,31],[939,34,934,34,"React__namespace"],[939,50,934,50],[939,51,934,51,"default"],[939,58,934,58],[939,59,934,59,"useRef"],[939,65,934,65],[939,66,934,66],[939,70,934,70],[939,71,934,71],[940,4,935,4],[940,10,935,10,"isAllowedToDrag"],[940,25,935,25],[940,28,935,28,"React__namespace"],[940,44,935,44],[940,45,935,45,"default"],[940,52,935,52],[940,53,935,53,"useRef"],[940,59,935,59],[940,60,935,60],[940,65,935,65],[940,66,935,66],[941,4,936,4],[941,10,936,10,"nestedOpenChangeTimer"],[941,31,936,31],[941,34,936,34,"React__namespace"],[941,50,936,50],[941,51,936,51,"default"],[941,58,936,58],[941,59,936,59,"useRef"],[941,65,936,65],[941,66,936,66],[941,70,936,70],[941,71,936,71],[942,4,937,4],[942,10,937,10,"pointerStart"],[942,22,937,22],[942,25,937,25,"React__namespace"],[942,41,937,41],[942,42,937,42,"default"],[942,49,937,49],[942,50,937,50,"useRef"],[942,56,937,56],[942,57,937,57],[942,58,937,58],[942,59,937,59],[943,4,938,4],[943,10,938,10,"keyboardIsOpen"],[943,24,938,24],[943,27,938,27,"React__namespace"],[943,43,938,43],[943,44,938,44,"default"],[943,51,938,51],[943,52,938,52,"useRef"],[943,58,938,58],[943,59,938,59],[943,64,938,64],[943,65,938,65],[944,4,939,4],[944,10,939,10,"shouldAnimate"],[944,23,939,23],[944,26,939,26,"React__namespace"],[944,42,939,42],[944,43,939,43,"default"],[944,50,939,50],[944,51,939,51,"useRef"],[944,57,939,57],[944,58,939,58],[944,59,939,59,"defaultOpen"],[944,70,939,70],[944,71,939,71],[945,4,940,4],[945,10,940,10,"previousDiffFromInitial"],[945,33,940,33],[945,36,940,36,"React__namespace"],[945,52,940,52],[945,53,940,53,"default"],[945,60,940,60],[945,61,940,61,"useRef"],[945,67,940,67],[945,68,940,68],[945,69,940,69],[945,70,940,70],[946,4,941,4],[946,10,941,10,"drawerRef"],[946,19,941,19],[946,22,941,22,"React__namespace"],[946,38,941,38],[946,39,941,39,"default"],[946,46,941,46],[946,47,941,47,"useRef"],[946,53,941,53],[946,54,941,54],[946,58,941,58],[946,59,941,59],[947,4,942,4],[947,10,942,10,"drawerHeightRef"],[947,25,942,25],[947,28,942,28,"React__namespace"],[947,44,942,44],[947,45,942,45,"default"],[947,52,942,52],[947,53,942,53,"useRef"],[947,59,942,59],[947,60,942,60],[947,61,942,61],[947,62,942,62,"_drawerRef_current"],[947,80,942,80],[947,83,942,83,"drawerRef"],[947,92,942,92],[947,93,942,93,"current"],[947,100,942,100],[947,105,942,105],[947,109,942,109],[947,112,942,112],[947,117,942,117],[947,118,942,118],[947,121,942,121,"_drawerRef_current"],[947,139,942,139],[947,140,942,140,"getBoundingClientRect"],[947,161,942,161],[947,162,942,162],[947,163,942,163],[947,164,942,164,"height"],[947,170,942,170],[947,175,942,175],[947,176,942,176],[947,177,942,177],[948,4,943,4],[948,10,943,10,"drawerWidthRef"],[948,24,943,24],[948,27,943,27,"React__namespace"],[948,43,943,43],[948,44,943,44,"default"],[948,51,943,51],[948,52,943,52,"useRef"],[948,58,943,58],[948,59,943,59],[948,60,943,60],[948,61,943,61,"_drawerRef_current1"],[948,80,943,80],[948,83,943,83,"drawerRef"],[948,92,943,92],[948,93,943,93,"current"],[948,100,943,100],[948,105,943,105],[948,109,943,109],[948,112,943,112],[948,117,943,117],[948,118,943,118],[948,121,943,121,"_drawerRef_current1"],[948,140,943,140],[948,141,943,141,"getBoundingClientRect"],[948,162,943,162],[948,163,943,163],[948,164,943,164],[948,165,943,165,"width"],[948,170,943,170],[948,175,943,175],[948,176,943,176],[948,177,943,177],[949,4,944,4],[949,10,944,10,"initialDrawerHeight"],[949,29,944,29],[949,32,944,32,"React__namespace"],[949,48,944,48],[949,49,944,49,"default"],[949,56,944,56],[949,57,944,57,"useRef"],[949,63,944,63],[949,64,944,64],[949,65,944,65],[949,66,944,66],[950,4,945,4],[950,10,945,10,"onSnapPointChange"],[950,27,945,27],[950,30,945,30,"React__namespace"],[950,46,945,46],[950,47,945,47,"default"],[950,54,945,54],[950,55,945,55,"useCallback"],[950,66,945,66],[950,67,945,68,"activeSnapPointIndex"],[950,87,945,88],[950,91,945,91],[951,6,946,8],[952,6,947,8],[952,10,947,12,"snapPoints"],[952,20,947,22],[952,24,947,26,"activeSnapPointIndex"],[952,44,947,46],[952,49,947,51,"snapPointsOffset"],[952,65,947,67],[952,66,947,68,"length"],[952,72,947,74],[952,75,947,77],[952,76,947,78],[952,78,947,80,"openTime"],[952,86,947,88],[952,87,947,89,"current"],[952,94,947,96],[952,97,947,99],[952,101,947,103,"Date"],[952,105,947,107],[952,106,947,108],[952,107,947,109],[953,4,948,4],[953,5,948,5],[953,7,948,7],[953,9,948,9],[953,10,948,10],[954,4,949,4],[954,10,949,10],[955,6,949,12,"activeSnapPoint"],[955,21,949,27],[956,6,949,29,"activeSnapPointIndex"],[956,26,949,49],[957,6,949,51,"setActiveSnapPoint"],[957,24,949,69],[958,6,949,71,"onRelease"],[958,15,949,80],[958,17,949,82,"onReleaseSnapPoints"],[958,36,949,101],[959,6,949,103,"snapPointsOffset"],[959,22,949,119],[960,6,949,121,"onDrag"],[960,12,949,127],[960,14,949,129,"onDragSnapPoints"],[960,30,949,145],[961,6,949,147,"shouldFade"],[961,16,949,157],[962,6,949,159,"getPercentageDragged"],[962,26,949,179],[962,28,949,181,"getSnapPointsPercentageDragged"],[963,4,949,212],[963,5,949,213],[963,8,949,216,"useSnapPoints"],[963,21,949,229],[963,22,949,230],[964,6,950,8,"snapPoints"],[964,16,950,18],[965,6,951,8,"activeSnapPointProp"],[965,25,951,27],[966,6,952,8,"setActiveSnapPointProp"],[966,28,952,30],[967,6,953,8,"drawerRef"],[967,15,953,17],[968,6,954,8,"fadeFromIndex"],[968,19,954,21],[969,6,955,8,"overlayRef"],[969,16,955,18],[970,6,956,8,"onSnapPointChange"],[970,23,956,25],[971,6,957,8,"direction"],[971,15,957,17],[972,6,958,8,"container"],[972,15,958,17],[973,6,959,8,"snapToSequentialPoint"],[974,4,960,4],[974,5,960,5],[974,6,960,6],[975,4,961,4,"usePreventScroll"],[975,20,961,20],[975,21,961,21],[976,6,962,8,"isDisabled"],[976,16,962,18],[976,18,962,20],[976,19,962,21,"isOpen"],[976,25,962,27],[976,29,962,31,"isDragging"],[976,39,962,41],[976,43,962,45],[976,44,962,46,"modal"],[976,49,962,51],[976,53,962,55,"justReleased"],[976,65,962,67],[976,69,962,71],[976,70,962,72,"hasBeenOpened"],[976,83,962,85],[976,87,962,89],[976,88,962,90,"repositionInputs"],[976,104,962,106],[976,108,962,110],[976,109,962,111,"disablePreventScroll"],[977,4,963,4],[977,5,963,5],[977,6,963,6],[978,4,964,4],[978,10,964,10],[979,6,964,12,"restorePositionSetting"],[980,4,964,35],[980,5,964,36],[980,8,964,39,"usePositionFixed"],[980,24,964,55],[980,25,964,56],[981,6,965,8,"isOpen"],[981,12,965,14],[982,6,966,8,"modal"],[982,11,966,13],[983,6,967,8,"nested"],[983,12,967,14],[983,14,967,16,"nested"],[983,20,967,22],[983,24,967,26],[983,28,967,30],[983,31,967,33,"nested"],[983,37,967,39],[983,40,967,42],[983,45,967,47],[984,6,968,8,"hasBeenOpened"],[984,19,968,21],[985,6,969,8,"preventScrollRestoration"],[985,30,969,32],[986,6,970,8,"noBodyStyles"],[987,4,971,4],[987,5,971,5],[987,6,971,6],[988,4,972,4],[988,13,972,13,"getScale"],[988,21,972,21,"getScale"],[988,22,972,21],[988,24,972,24],[989,6,973,8],[989,13,973,15],[989,14,973,16,"window"],[989,20,973,22],[989,21,973,23,"innerWidth"],[989,31,973,33],[989,34,973,36,"WINDOW_TOP_OFFSET"],[989,51,973,53],[989,55,973,57,"window"],[989,61,973,63],[989,62,973,64,"innerWidth"],[989,72,973,74],[990,4,974,4],[991,4,975,4],[991,13,975,13,"onPress"],[991,20,975,20,"onPress"],[991,21,975,21,"event"],[991,26,975,26],[991,28,975,28],[992,6,976,8],[992,10,976,12,"_drawerRef_current"],[992,28,976,30],[992,30,976,32,"_drawerRef_current1"],[992,49,976,51],[993,6,977,8],[993,10,977,12],[993,11,977,13,"dismissible"],[993,22,977,24],[993,26,977,28],[993,27,977,29,"snapPoints"],[993,37,977,39],[993,39,977,41],[994,6,978,8],[994,10,978,12,"drawerRef"],[994,19,978,21],[994,20,978,22,"current"],[994,27,978,29],[994,31,978,33],[994,32,978,34,"drawerRef"],[994,41,978,43],[994,42,978,44,"current"],[994,49,978,51],[994,50,978,52,"contains"],[994,58,978,60],[994,59,978,61,"event"],[994,64,978,66],[994,65,978,67,"target"],[994,71,978,73],[994,72,978,74],[994,74,978,76],[995,6,979,8,"drawerHeightRef"],[995,21,979,23],[995,22,979,24,"current"],[995,29,979,31],[995,32,979,34],[995,33,979,35],[995,34,979,36,"_drawerRef_current"],[995,52,979,54],[995,55,979,57,"drawerRef"],[995,64,979,66],[995,65,979,67,"current"],[995,72,979,74],[995,77,979,79],[995,81,979,83],[995,84,979,86],[995,89,979,91],[995,90,979,92],[995,93,979,95,"_drawerRef_current"],[995,111,979,113],[995,112,979,114,"getBoundingClientRect"],[995,133,979,135],[995,134,979,136],[995,135,979,137],[995,136,979,138,"height"],[995,142,979,144],[995,147,979,149],[995,148,979,150],[996,6,980,8,"drawerWidthRef"],[996,20,980,22],[996,21,980,23,"current"],[996,28,980,30],[996,31,980,33],[996,32,980,34],[996,33,980,35,"_drawerRef_current1"],[996,52,980,54],[996,55,980,57,"drawerRef"],[996,64,980,66],[996,65,980,67,"current"],[996,72,980,74],[996,77,980,79],[996,81,980,83],[996,84,980,86],[996,89,980,91],[996,90,980,92],[996,93,980,95,"_drawerRef_current1"],[996,112,980,114],[996,113,980,115,"getBoundingClientRect"],[996,134,980,136],[996,135,980,137],[996,136,980,138],[996,137,980,139,"width"],[996,142,980,144],[996,147,980,149],[996,148,980,150],[997,6,981,8,"setIsDragging"],[997,19,981,21],[997,20,981,22],[997,24,981,26],[997,25,981,27],[998,6,982,8,"dragStartTime"],[998,19,982,21],[998,20,982,22,"current"],[998,27,982,29],[998,30,982,32],[998,34,982,36,"Date"],[998,38,982,40],[998,39,982,41],[998,40,982,42],[999,6,983,8],[1000,6,984,8],[1000,10,984,12,"isIOS"],[1000,15,984,17],[1000,16,984,18],[1000,17,984,19],[1000,19,984,21],[1001,8,985,12,"window"],[1001,14,985,18],[1001,15,985,19,"addEventListener"],[1001,31,985,35],[1001,32,985,36],[1001,42,985,46],[1001,44,985,48],[1001,50,985,52,"isAllowedToDrag"],[1001,65,985,67],[1001,66,985,68,"current"],[1001,73,985,75],[1001,76,985,78],[1001,81,985,83],[1001,83,985,85],[1002,10,986,16,"once"],[1002,14,986,20],[1002,16,986,22],[1003,8,987,12],[1003,9,987,13],[1003,10,987,14],[1004,6,988,8],[1005,6,989,8],[1006,6,990,8,"event"],[1006,11,990,13],[1006,12,990,14,"target"],[1006,18,990,20],[1006,19,990,21,"setPointerCapture"],[1006,36,990,38],[1006,37,990,39,"event"],[1006,42,990,44],[1006,43,990,45,"pointerId"],[1006,52,990,54],[1006,53,990,55],[1007,6,991,8,"pointerStart"],[1007,18,991,20],[1007,19,991,21,"current"],[1007,26,991,28],[1007,29,991,31,"isVertical"],[1007,39,991,41],[1007,40,991,42,"direction"],[1007,49,991,51],[1007,50,991,52],[1007,53,991,55,"event"],[1007,58,991,60],[1007,59,991,61,"pageY"],[1007,64,991,66],[1007,67,991,69,"event"],[1007,72,991,74],[1007,73,991,75,"pageX"],[1007,78,991,80],[1008,4,992,4],[1009,4,993,4],[1009,13,993,13,"shouldDrag"],[1009,23,993,23,"shouldDrag"],[1009,24,993,24,"el"],[1009,26,993,26],[1009,28,993,28,"isDraggingInDirection"],[1009,49,993,49],[1009,51,993,51],[1010,6,994,8],[1010,10,994,12,"_window_getSelection"],[1010,30,994,32],[1011,6,995,8],[1011,10,995,12,"element"],[1011,17,995,19],[1011,20,995,22,"el"],[1011,22,995,24],[1012,6,996,8],[1012,12,996,14,"highlightedText"],[1012,27,996,29],[1012,30,996,32],[1012,31,996,33,"_window_getSelection"],[1012,51,996,53],[1012,54,996,56,"window"],[1012,60,996,62],[1012,61,996,63,"getSelection"],[1012,73,996,75],[1012,74,996,76],[1012,75,996,77],[1012,80,996,82],[1012,84,996,86],[1012,87,996,89],[1012,92,996,94],[1012,93,996,95],[1012,96,996,98,"_window_getSelection"],[1012,116,996,118],[1012,117,996,119,"toString"],[1012,125,996,127],[1012,126,996,128],[1012,127,996,129],[1013,6,997,8],[1013,12,997,14,"swipeAmount"],[1013,23,997,25],[1013,26,997,28,"drawerRef"],[1013,35,997,37],[1013,36,997,38,"current"],[1013,43,997,45],[1013,46,997,48,"getTranslate"],[1013,58,997,60],[1013,59,997,61,"drawerRef"],[1013,68,997,70],[1013,69,997,71,"current"],[1013,76,997,78],[1013,78,997,80,"direction"],[1013,87,997,89],[1013,88,997,90],[1013,91,997,93],[1013,95,997,97],[1014,6,998,8],[1014,12,998,14,"date"],[1014,16,998,18],[1014,19,998,21],[1014,23,998,25,"Date"],[1014,27,998,29],[1014,28,998,30],[1014,29,998,31],[1015,6,999,8],[1016,6,1000,8],[1016,10,1000,12,"element"],[1016,17,1000,19],[1016,18,1000,20,"tagName"],[1016,25,1000,27],[1016,30,1000,32],[1016,38,1000,40],[1016,40,1000,42],[1017,8,1001,12],[1017,15,1001,19],[1017,20,1001,24],[1018,6,1002,8],[1019,6,1003,8],[1019,10,1003,12,"element"],[1019,17,1003,19],[1019,18,1003,20,"hasAttribute"],[1019,30,1003,32],[1019,31,1003,33],[1019,50,1003,52],[1019,51,1003,53],[1019,55,1003,57,"element"],[1019,62,1003,64],[1019,63,1003,65,"closest"],[1019,70,1003,72],[1019,71,1003,73],[1019,92,1003,94],[1019,93,1003,95],[1019,95,1003,97],[1020,8,1004,12],[1020,15,1004,19],[1020,20,1004,24],[1021,6,1005,8],[1022,6,1006,8],[1022,10,1006,12,"direction"],[1022,19,1006,21],[1022,24,1006,26],[1022,31,1006,33],[1022,35,1006,37,"direction"],[1022,44,1006,46],[1022,49,1006,51],[1022,55,1006,57],[1022,57,1006,59],[1023,8,1007,12],[1023,15,1007,19],[1023,19,1007,23],[1024,6,1008,8],[1025,6,1009,8],[1026,6,1010,8],[1026,10,1010,12,"openTime"],[1026,18,1010,20],[1026,19,1010,21,"current"],[1026,26,1010,28],[1026,30,1010,32,"date"],[1026,34,1010,36],[1026,35,1010,37,"getTime"],[1026,42,1010,44],[1026,43,1010,45],[1026,44,1010,46],[1026,47,1010,49,"openTime"],[1026,55,1010,57],[1026,56,1010,58,"current"],[1026,63,1010,65],[1026,64,1010,66,"getTime"],[1026,71,1010,73],[1026,72,1010,74],[1026,73,1010,75],[1026,76,1010,78],[1026,79,1010,81],[1026,81,1010,83],[1027,8,1011,12],[1027,15,1011,19],[1027,20,1011,24],[1028,6,1012,8],[1029,6,1013,8],[1029,10,1013,12,"swipeAmount"],[1029,21,1013,23],[1029,26,1013,28],[1029,30,1013,32],[1029,32,1013,34],[1030,8,1014,12],[1030,12,1014,16,"direction"],[1030,21,1014,25],[1030,26,1014,30],[1030,34,1014,38],[1030,37,1014,41,"swipeAmount"],[1030,48,1014,52],[1030,51,1014,55],[1030,52,1014,56],[1030,55,1014,59,"swipeAmount"],[1030,66,1014,70],[1030,69,1014,73],[1030,70,1014,74],[1030,72,1014,76],[1031,10,1015,16],[1031,17,1015,23],[1031,21,1015,27],[1032,8,1016,12],[1033,6,1017,8],[1034,6,1018,8],[1035,6,1019,8],[1035,10,1019,12,"highlightedText"],[1035,25,1019,27],[1035,29,1019,31,"highlightedText"],[1035,44,1019,46],[1035,45,1019,47,"length"],[1035,51,1019,53],[1035,54,1019,56],[1035,55,1019,57],[1035,57,1019,59],[1036,8,1020,12],[1036,15,1020,19],[1036,20,1020,24],[1037,6,1021,8],[1038,6,1022,8],[1039,6,1023,8],[1039,10,1023,12,"lastTimeDragPrevented"],[1039,31,1023,33],[1039,32,1023,34,"current"],[1039,39,1023,41],[1039,43,1023,45,"date"],[1039,47,1023,49],[1039,48,1023,50,"getTime"],[1039,55,1023,57],[1039,56,1023,58],[1039,57,1023,59],[1039,60,1023,62,"lastTimeDragPrevented"],[1039,81,1023,83],[1039,82,1023,84,"current"],[1039,89,1023,91],[1039,90,1023,92,"getTime"],[1039,97,1023,99],[1039,98,1023,100],[1039,99,1023,101],[1039,102,1023,104,"scrollLockTimeout"],[1039,119,1023,121],[1039,123,1023,125,"swipeAmount"],[1039,134,1023,136],[1039,139,1023,141],[1039,140,1023,142],[1039,142,1023,144],[1040,8,1024,12,"lastTimeDragPrevented"],[1040,29,1024,33],[1040,30,1024,34,"current"],[1040,37,1024,41],[1040,40,1024,44,"date"],[1040,44,1024,48],[1041,8,1025,12],[1041,15,1025,19],[1041,20,1025,24],[1042,6,1026,8],[1043,6,1027,8],[1043,10,1027,12,"isDraggingInDirection"],[1043,31,1027,33],[1043,33,1027,35],[1044,8,1028,12,"lastTimeDragPrevented"],[1044,29,1028,33],[1044,30,1028,34,"current"],[1044,37,1028,41],[1044,40,1028,44,"date"],[1044,44,1028,48],[1045,8,1029,12],[1046,8,1030,12],[1046,15,1030,19],[1046,20,1030,24],[1047,6,1031,8],[1048,6,1032,8],[1049,6,1033,8],[1049,13,1033,14,"element"],[1049,20,1033,21],[1049,22,1033,22],[1050,8,1034,12],[1051,8,1035,12],[1051,12,1035,16,"element"],[1051,19,1035,23],[1051,20,1035,24,"scrollHeight"],[1051,32,1035,36],[1051,35,1035,39,"element"],[1051,42,1035,46],[1051,43,1035,47,"clientHeight"],[1051,55,1035,59],[1051,57,1035,61],[1052,10,1036,16],[1052,14,1036,20,"element"],[1052,21,1036,27],[1052,22,1036,28,"scrollTop"],[1052,31,1036,37],[1052,36,1036,42],[1052,37,1036,43],[1052,39,1036,45],[1053,12,1037,20,"lastTimeDragPrevented"],[1053,33,1037,41],[1053,34,1037,42,"current"],[1053,41,1037,49],[1053,44,1037,52],[1053,48,1037,56,"Date"],[1053,52,1037,60],[1053,53,1037,61],[1053,54,1037,62],[1054,12,1038,20],[1055,12,1039,20],[1055,19,1039,27],[1055,24,1039,32],[1056,10,1040,16],[1057,10,1041,16],[1057,14,1041,20,"element"],[1057,21,1041,27],[1057,22,1041,28,"getAttribute"],[1057,34,1041,40],[1057,35,1041,41],[1057,41,1041,47],[1057,42,1041,48],[1057,47,1041,53],[1057,55,1041,61],[1057,57,1041,63],[1058,12,1042,20],[1058,19,1042,27],[1058,23,1042,31],[1059,10,1043,16],[1060,8,1044,12],[1061,8,1045,12],[1062,8,1046,12,"element"],[1062,15,1046,19],[1062,18,1046,22,"element"],[1062,25,1046,29],[1062,26,1046,30,"parentNode"],[1062,36,1046,40],[1063,6,1047,8],[1064,6,1048,8],[1065,6,1049,8],[1065,13,1049,15],[1065,17,1049,19],[1066,4,1050,4],[1067,4,1051,4],[1067,13,1051,13,"onDrag"],[1067,19,1051,19,"onDrag"],[1067,20,1051,20,"event"],[1067,25,1051,25],[1067,27,1051,27],[1068,6,1052,8],[1068,10,1052,12],[1068,11,1052,13,"drawerRef"],[1068,20,1052,22],[1068,21,1052,23,"current"],[1068,28,1052,30],[1068,30,1052,32],[1069,8,1053,12],[1070,6,1054,8],[1071,6,1055,8],[1072,6,1056,8],[1072,10,1056,12,"isDragging"],[1072,20,1056,22],[1072,22,1056,24],[1073,8,1057,12],[1073,14,1057,18,"directionMultiplier"],[1073,33,1057,37],[1073,36,1057,40,"direction"],[1073,45,1057,49],[1073,50,1057,54],[1073,58,1057,62],[1073,62,1057,66,"direction"],[1073,71,1057,75],[1073,76,1057,80],[1073,83,1057,87],[1073,86,1057,90],[1073,87,1057,91],[1073,90,1057,94],[1073,91,1057,95],[1073,92,1057,96],[1074,8,1058,12],[1074,14,1058,18,"draggedDistance"],[1074,29,1058,33],[1074,32,1058,36],[1074,33,1058,37,"pointerStart"],[1074,45,1058,49],[1074,46,1058,50,"current"],[1074,53,1058,57],[1074,57,1058,61,"isVertical"],[1074,67,1058,71],[1074,68,1058,72,"direction"],[1074,77,1058,81],[1074,78,1058,82],[1074,81,1058,85,"event"],[1074,86,1058,90],[1074,87,1058,91,"pageY"],[1074,92,1058,96],[1074,95,1058,99,"event"],[1074,100,1058,104],[1074,101,1058,105,"pageX"],[1074,106,1058,110],[1074,107,1058,111],[1074,111,1058,115,"directionMultiplier"],[1074,130,1058,134],[1075,8,1059,12],[1075,14,1059,18,"isDraggingInDirection"],[1075,35,1059,39],[1075,38,1059,42,"draggedDistance"],[1075,53,1059,57],[1075,56,1059,60],[1075,57,1059,61],[1076,8,1060,12],[1077,8,1061,12],[1077,14,1061,18,"noCloseSnapPointsPreCondition"],[1077,43,1061,47],[1077,46,1061,50,"snapPoints"],[1077,56,1061,60],[1077,60,1061,64],[1077,61,1061,65,"dismissible"],[1077,72,1061,76],[1077,76,1061,80],[1077,77,1061,81,"isDraggingInDirection"],[1077,98,1061,102],[1078,8,1062,12],[1079,8,1063,12],[1079,12,1063,16,"noCloseSnapPointsPreCondition"],[1079,41,1063,45],[1079,45,1063,49,"activeSnapPointIndex"],[1079,65,1063,69],[1079,70,1063,74],[1079,71,1063,75],[1079,73,1063,77],[1080,8,1064,12],[1081,8,1065,12],[1081,14,1065,18,"absDraggedDistance"],[1081,32,1065,36],[1081,35,1065,39,"Math"],[1081,39,1065,43],[1081,40,1065,44,"abs"],[1081,43,1065,47],[1081,44,1065,48,"draggedDistance"],[1081,59,1065,63],[1081,60,1065,64],[1082,8,1066,12],[1082,14,1066,18,"wrapper"],[1082,21,1066,25],[1082,24,1066,28,"document"],[1082,32,1066,36],[1082,33,1066,37,"querySelector"],[1082,46,1066,50],[1082,47,1066,51],[1082,75,1066,79],[1082,76,1066,80],[1083,8,1067,12],[1083,14,1067,18,"drawerDimension"],[1083,29,1067,33],[1083,32,1067,36,"direction"],[1083,41,1067,45],[1083,46,1067,50],[1083,54,1067,58],[1083,58,1067,62,"direction"],[1083,67,1067,71],[1083,72,1067,76],[1083,77,1067,81],[1083,80,1067,84,"drawerHeightRef"],[1083,95,1067,99],[1083,96,1067,100,"current"],[1083,103,1067,107],[1083,106,1067,110,"drawerWidthRef"],[1083,120,1067,124],[1083,121,1067,125,"current"],[1083,128,1067,132],[1084,8,1068,12],[1085,8,1069,12],[1085,12,1069,16,"percentageDragged"],[1085,29,1069,33],[1085,32,1069,36,"absDraggedDistance"],[1085,50,1069,54],[1085,53,1069,57,"drawerDimension"],[1085,68,1069,72],[1086,8,1070,12],[1086,14,1070,18,"snapPointPercentageDragged"],[1086,40,1070,44],[1086,43,1070,47,"getSnapPointsPercentageDragged"],[1086,73,1070,77],[1086,74,1070,78,"absDraggedDistance"],[1086,92,1070,96],[1086,94,1070,98,"isDraggingInDirection"],[1086,115,1070,119],[1086,116,1070,120],[1087,8,1071,12],[1087,12,1071,16,"snapPointPercentageDragged"],[1087,38,1071,42],[1087,43,1071,47],[1087,47,1071,51],[1087,49,1071,53],[1088,10,1072,16,"percentageDragged"],[1088,27,1072,33],[1088,30,1072,36,"snapPointPercentageDragged"],[1088,56,1072,62],[1089,8,1073,12],[1090,8,1074,12],[1091,8,1075,12],[1091,12,1075,16,"noCloseSnapPointsPreCondition"],[1091,41,1075,45],[1091,45,1075,49,"percentageDragged"],[1091,62,1075,66],[1091,66,1075,70],[1091,67,1075,71],[1091,69,1075,73],[1092,10,1076,16],[1093,8,1077,12],[1094,8,1078,12],[1094,12,1078,16],[1094,13,1078,17,"isAllowedToDrag"],[1094,28,1078,32],[1094,29,1078,33,"current"],[1094,36,1078,40],[1094,40,1078,44],[1094,41,1078,45,"shouldDrag"],[1094,51,1078,55],[1094,52,1078,56,"event"],[1094,57,1078,61],[1094,58,1078,62,"target"],[1094,64,1078,68],[1094,66,1078,70,"isDraggingInDirection"],[1094,87,1078,91],[1094,88,1078,92],[1094,90,1078,94],[1095,8,1079,12,"drawerRef"],[1095,17,1079,21],[1095,18,1079,22,"current"],[1095,25,1079,29],[1095,26,1079,30,"classList"],[1095,35,1079,39],[1095,36,1079,40,"add"],[1095,39,1079,43],[1095,40,1079,44,"DRAG_CLASS"],[1095,50,1079,54],[1095,51,1079,55],[1096,8,1080,12],[1097,8,1081,12,"isAllowedToDrag"],[1097,23,1081,27],[1097,24,1081,28,"current"],[1097,31,1081,35],[1097,34,1081,38],[1097,38,1081,42],[1098,8,1082,12,"set"],[1098,11,1082,15],[1098,12,1082,16,"drawerRef"],[1098,21,1082,25],[1098,22,1082,26,"current"],[1098,29,1082,33],[1098,31,1082,35],[1099,10,1083,16,"transition"],[1099,20,1083,26],[1099,22,1083,28],[1100,8,1084,12],[1100,9,1084,13],[1100,10,1084,14],[1101,8,1085,12,"set"],[1101,11,1085,15],[1101,12,1085,16,"overlayRef"],[1101,22,1085,26],[1101,23,1085,27,"current"],[1101,30,1085,34],[1101,32,1085,36],[1102,10,1086,16,"transition"],[1102,20,1086,26],[1102,22,1086,28],[1103,8,1087,12],[1103,9,1087,13],[1103,10,1087,14],[1104,8,1088,12],[1104,12,1088,16,"snapPoints"],[1104,22,1088,26],[1104,24,1088,28],[1105,10,1089,16,"onDragSnapPoints"],[1105,26,1089,32],[1105,27,1089,33],[1106,12,1090,20,"draggedDistance"],[1107,10,1091,16],[1107,11,1091,17],[1107,12,1091,18],[1108,8,1092,12],[1109,8,1093,12],[1110,8,1094,12],[1110,12,1094,16,"isDraggingInDirection"],[1110,33,1094,37],[1110,37,1094,41],[1110,38,1094,42,"snapPoints"],[1110,48,1094,52],[1110,50,1094,54],[1111,10,1095,16],[1111,16,1095,22,"dampenedDraggedDistance"],[1111,39,1095,45],[1111,42,1095,48,"dampenValue"],[1111,53,1095,59],[1111,54,1095,60,"draggedDistance"],[1111,69,1095,75],[1111,70,1095,76],[1112,10,1096,16],[1112,16,1096,22,"translateValue"],[1112,30,1096,36],[1112,33,1096,39,"Math"],[1112,37,1096,43],[1112,38,1096,44,"min"],[1112,41,1096,47],[1112,42,1096,48,"dampenedDraggedDistance"],[1112,65,1096,71],[1112,68,1096,74],[1112,69,1096,75],[1112,70,1096,76],[1112,72,1096,78],[1112,73,1096,79],[1112,74,1096,80],[1112,77,1096,83,"directionMultiplier"],[1112,96,1096,102],[1113,10,1097,16,"set"],[1113,13,1097,19],[1113,14,1097,20,"drawerRef"],[1113,23,1097,29],[1113,24,1097,30,"current"],[1113,31,1097,37],[1113,33,1097,39],[1114,12,1098,20,"transform"],[1114,21,1098,29],[1114,23,1098,31,"isVertical"],[1114,33,1098,41],[1114,34,1098,42,"direction"],[1114,43,1098,51],[1114,44,1098,52],[1114,47,1098,55],[1114,65,1098,73,"translateValue"],[1114,79,1098,87],[1114,87,1098,95],[1114,90,1098,98],[1114,105,1098,113,"translateValue"],[1114,119,1098,127],[1115,10,1099,16],[1115,11,1099,17],[1115,12,1099,18],[1116,10,1100,16],[1117,8,1101,12],[1118,8,1102,12],[1118,14,1102,18,"opacityValue"],[1118,26,1102,30],[1118,29,1102,33],[1118,30,1102,34],[1118,33,1102,37,"percentageDragged"],[1118,50,1102,54],[1119,8,1103,12],[1119,12,1103,16,"shouldFade"],[1119,22,1103,26],[1119,26,1103,30,"fadeFromIndex"],[1119,39,1103,43],[1119,43,1103,47,"activeSnapPointIndex"],[1119,63,1103,67],[1119,68,1103,72,"fadeFromIndex"],[1119,81,1103,85],[1119,84,1103,88],[1119,85,1103,89],[1119,87,1103,91],[1120,10,1104,16,"onDragProp"],[1120,20,1104,26],[1120,24,1104,30],[1120,28,1104,34],[1120,31,1104,37],[1120,36,1104,42],[1120,37,1104,43],[1120,40,1104,46,"onDragProp"],[1120,50,1104,56],[1120,51,1104,57,"event"],[1120,56,1104,62],[1120,58,1104,64,"percentageDragged"],[1120,75,1104,81],[1120,76,1104,82],[1121,10,1105,16,"set"],[1121,13,1105,19],[1121,14,1105,20,"overlayRef"],[1121,24,1105,30],[1121,25,1105,31,"current"],[1121,32,1105,38],[1121,34,1105,40],[1122,12,1106,20,"opacity"],[1122,19,1106,27],[1122,21,1106,29],[1122,24,1106,32,"opacityValue"],[1122,36,1106,44],[1122,38,1106,46],[1123,12,1107,20,"transition"],[1123,22,1107,30],[1123,24,1107,32],[1124,10,1108,16],[1124,11,1108,17],[1124,13,1108,19],[1124,17,1108,23],[1124,18,1108,24],[1125,8,1109,12],[1126,8,1110,12],[1126,12,1110,16,"wrapper"],[1126,19,1110,23],[1126,23,1110,27,"overlayRef"],[1126,33,1110,37],[1126,34,1110,38,"current"],[1126,41,1110,45],[1126,45,1110,49,"shouldScaleBackground"],[1126,66,1110,70],[1126,68,1110,72],[1127,10,1111,16],[1128,10,1112,16],[1128,16,1112,22,"scaleValue"],[1128,26,1112,32],[1128,29,1112,35,"Math"],[1128,33,1112,39],[1128,34,1112,40,"min"],[1128,37,1112,43],[1128,38,1112,44,"getScale"],[1128,46,1112,52],[1128,47,1112,53],[1128,48,1112,54],[1128,51,1112,57,"percentageDragged"],[1128,68,1112,74],[1128,72,1112,78],[1128,73,1112,79],[1128,76,1112,82,"getScale"],[1128,84,1112,90],[1128,85,1112,91],[1128,86,1112,92],[1128,87,1112,93],[1128,89,1112,95],[1128,90,1112,96],[1128,91,1112,97],[1129,10,1113,16],[1129,16,1113,22,"borderRadiusValue"],[1129,33,1113,39],[1129,36,1113,42],[1129,37,1113,43],[1129,40,1113,46,"percentageDragged"],[1129,57,1113,63],[1129,60,1113,66],[1129,61,1113,67],[1130,10,1114,16],[1130,16,1114,22,"translateValue"],[1130,30,1114,36],[1130,33,1114,39,"Math"],[1130,37,1114,43],[1130,38,1114,44,"max"],[1130,41,1114,47],[1130,42,1114,48],[1130,43,1114,49],[1130,45,1114,51],[1130,47,1114,53],[1130,50,1114,56,"percentageDragged"],[1130,67,1114,73],[1130,70,1114,76],[1130,72,1114,78],[1130,73,1114,79],[1131,10,1115,16,"set"],[1131,13,1115,19],[1131,14,1115,20,"wrapper"],[1131,21,1115,27],[1131,23,1115,29],[1132,12,1116,20,"borderRadius"],[1132,24,1116,32],[1132,26,1116,34],[1132,29,1116,37,"borderRadiusValue"],[1132,46,1116,54],[1132,50,1116,58],[1133,12,1117,20,"transform"],[1133,21,1117,29],[1133,23,1117,31,"isVertical"],[1133,33,1117,41],[1133,34,1117,42,"direction"],[1133,43,1117,51],[1133,44,1117,52],[1133,47,1117,55],[1133,56,1117,64,"scaleValue"],[1133,66,1117,74],[1133,86,1117,94,"translateValue"],[1133,100,1117,108],[1133,108,1117,116],[1133,111,1117,119],[1133,120,1117,128,"scaleValue"],[1133,130,1117,138],[1133,147,1117,155,"translateValue"],[1133,161,1117,169],[1133,172,1117,180],[1134,12,1118,20,"transition"],[1134,22,1118,30],[1134,24,1118,32],[1135,10,1119,16],[1135,11,1119,17],[1135,13,1119,19],[1135,17,1119,23],[1135,18,1119,24],[1136,8,1120,12],[1137,8,1121,12],[1137,12,1121,16],[1137,13,1121,17,"snapPoints"],[1137,23,1121,27],[1137,25,1121,29],[1138,10,1122,16],[1138,16,1122,22,"translateValue"],[1138,30,1122,36],[1138,33,1122,39,"absDraggedDistance"],[1138,51,1122,57],[1138,54,1122,60,"directionMultiplier"],[1138,73,1122,79],[1139,10,1123,16,"set"],[1139,13,1123,19],[1139,14,1123,20,"drawerRef"],[1139,23,1123,29],[1139,24,1123,30,"current"],[1139,31,1123,37],[1139,33,1123,39],[1140,12,1124,20,"transform"],[1140,21,1124,29],[1140,23,1124,31,"isVertical"],[1140,33,1124,41],[1140,34,1124,42,"direction"],[1140,43,1124,51],[1140,44,1124,52],[1140,47,1124,55],[1140,65,1124,73,"translateValue"],[1140,79,1124,87],[1140,87,1124,95],[1140,90,1124,98],[1140,105,1124,113,"translateValue"],[1140,119,1124,127],[1141,10,1125,16],[1141,11,1125,17],[1141,12,1125,18],[1142,8,1126,12],[1143,6,1127,8],[1144,4,1128,4],[1145,4,1129,4,"React__namespace"],[1145,20,1129,20],[1145,21,1129,21,"default"],[1145,28,1129,28],[1145,29,1129,29,"useEffect"],[1145,38,1129,38],[1145,39,1129,39],[1145,45,1129,43],[1146,6,1130,8,"window"],[1146,12,1130,14],[1146,13,1130,15,"requestAnimationFrame"],[1146,34,1130,36],[1146,35,1130,37],[1146,41,1130,41],[1147,8,1131,12,"shouldAnimate"],[1147,21,1131,25],[1147,22,1131,26,"current"],[1147,29,1131,33],[1147,32,1131,36],[1147,36,1131,40],[1148,6,1132,8],[1148,7,1132,9],[1148,8,1132,10],[1149,4,1133,4],[1149,5,1133,5],[1149,7,1133,7],[1149,9,1133,9],[1149,10,1133,10],[1150,4,1134,4,"React__namespace"],[1150,20,1134,20],[1150,21,1134,21,"default"],[1150,28,1134,28],[1150,29,1134,29,"useEffect"],[1150,38,1134,38],[1150,39,1134,39],[1150,45,1134,43],[1151,6,1135,8],[1151,10,1135,12,"_window_visualViewport"],[1151,32,1135,34],[1152,6,1136,8],[1152,15,1136,17,"onVisualViewportChange"],[1152,37,1136,39,"onVisualViewportChange"],[1152,38,1136,39],[1152,40,1136,42],[1153,8,1137,12],[1153,12,1137,16],[1153,13,1137,17,"drawerRef"],[1153,22,1137,26],[1153,23,1137,27,"current"],[1153,30,1137,34],[1153,34,1137,38],[1153,35,1137,39,"repositionInputs"],[1153,51,1137,55],[1153,53,1137,57],[1154,8,1138,12],[1154,14,1138,18,"focusedElement"],[1154,28,1138,32],[1154,31,1138,35,"document"],[1154,39,1138,43],[1154,40,1138,44,"activeElement"],[1154,53,1138,57],[1155,8,1139,12],[1155,12,1139,16,"isInput"],[1155,19,1139,23],[1155,20,1139,24,"focusedElement"],[1155,34,1139,38],[1155,35,1139,39],[1155,39,1139,43,"keyboardIsOpen"],[1155,53,1139,57],[1155,54,1139,58,"current"],[1155,61,1139,65],[1155,63,1139,67],[1156,10,1140,16],[1156,14,1140,20,"_window_visualViewport"],[1156,36,1140,42],[1157,10,1141,16],[1157,16,1141,22,"visualViewportHeight"],[1157,36,1141,42],[1157,39,1141,45],[1157,40,1141,46],[1157,41,1141,47,"_window_visualViewport"],[1157,63,1141,69],[1157,66,1141,72,"window"],[1157,72,1141,78],[1157,73,1141,79,"visualViewport"],[1157,87,1141,93],[1157,92,1141,98],[1157,96,1141,102],[1157,99,1141,105],[1157,104,1141,110],[1157,105,1141,111],[1157,108,1141,114,"_window_visualViewport"],[1157,130,1141,136],[1157,131,1141,137,"height"],[1157,137,1141,143],[1157,142,1141,148],[1157,143,1141,149],[1158,10,1142,16],[1158,16,1142,22,"totalHeight"],[1158,27,1142,33],[1158,30,1142,36,"window"],[1158,36,1142,42],[1158,37,1142,43,"innerHeight"],[1158,48,1142,54],[1159,10,1143,16],[1160,10,1144,16],[1160,14,1144,20,"diffFromInitial"],[1160,29,1144,35],[1160,32,1144,38,"totalHeight"],[1160,43,1144,49],[1160,46,1144,52,"visualViewportHeight"],[1160,66,1144,72],[1161,10,1145,16],[1161,16,1145,22,"drawerHeight"],[1161,28,1145,34],[1161,31,1145,37,"drawerRef"],[1161,40,1145,46],[1161,41,1145,47,"current"],[1161,48,1145,54],[1161,49,1145,55,"getBoundingClientRect"],[1161,70,1145,76],[1161,71,1145,77],[1161,72,1145,78],[1161,73,1145,79,"height"],[1161,79,1145,85],[1161,83,1145,89],[1161,84,1145,90],[1162,10,1146,16],[1163,10,1147,16],[1163,16,1147,22,"isTallEnough"],[1163,28,1147,34],[1163,31,1147,37,"drawerHeight"],[1163,43,1147,49],[1163,46,1147,52,"totalHeight"],[1163,57,1147,63],[1163,60,1147,66],[1163,63,1147,69],[1164,10,1148,16],[1164,14,1148,20],[1164,15,1148,21,"initialDrawerHeight"],[1164,34,1148,40],[1164,35,1148,41,"current"],[1164,42,1148,48],[1164,44,1148,50],[1165,12,1149,20,"initialDrawerHeight"],[1165,31,1149,39],[1165,32,1149,40,"current"],[1165,39,1149,47],[1165,42,1149,50,"drawerHeight"],[1165,54,1149,62],[1166,10,1150,16],[1167,10,1151,16],[1167,16,1151,22,"offsetFromTop"],[1167,29,1151,35],[1167,32,1151,38,"drawerRef"],[1167,41,1151,47],[1167,42,1151,48,"current"],[1167,49,1151,55],[1167,50,1151,56,"getBoundingClientRect"],[1167,71,1151,77],[1167,72,1151,78],[1167,73,1151,79],[1167,74,1151,80,"top"],[1167,77,1151,83],[1168,10,1152,16],[1169,10,1153,16],[1169,14,1153,20,"Math"],[1169,18,1153,24],[1169,19,1153,25,"abs"],[1169,22,1153,28],[1169,23,1153,29,"previousDiffFromInitial"],[1169,46,1153,52],[1169,47,1153,53,"current"],[1169,54,1153,60],[1169,57,1153,63,"diffFromInitial"],[1169,72,1153,78],[1169,73,1153,79],[1169,76,1153,82],[1169,78,1153,84],[1169,80,1153,86],[1170,12,1154,20,"keyboardIsOpen"],[1170,26,1154,34],[1170,27,1154,35,"current"],[1170,34,1154,42],[1170,37,1154,45],[1170,38,1154,46,"keyboardIsOpen"],[1170,52,1154,60],[1170,53,1154,61,"current"],[1170,60,1154,68],[1171,10,1155,16],[1172,10,1156,16],[1172,14,1156,20,"snapPoints"],[1172,24,1156,30],[1172,28,1156,34,"snapPoints"],[1172,38,1156,44],[1172,39,1156,45,"length"],[1172,45,1156,51],[1172,48,1156,54],[1172,49,1156,55],[1172,53,1156,59,"snapPointsOffset"],[1172,69,1156,75],[1172,73,1156,79,"activeSnapPointIndex"],[1172,93,1156,99],[1172,95,1156,101],[1173,12,1157,20],[1173,18,1157,26,"activeSnapPointHeight"],[1173,39,1157,47],[1173,42,1157,50,"snapPointsOffset"],[1173,58,1157,66],[1173,59,1157,67,"activeSnapPointIndex"],[1173,79,1157,87],[1173,80,1157,88],[1173,84,1157,92],[1173,85,1157,93],[1174,12,1158,20,"diffFromInitial"],[1174,27,1158,35],[1174,31,1158,39,"activeSnapPointHeight"],[1174,52,1158,60],[1175,10,1159,16],[1176,10,1160,16,"previousDiffFromInitial"],[1176,33,1160,39],[1176,34,1160,40,"current"],[1176,41,1160,47],[1176,44,1160,50,"diffFromInitial"],[1176,59,1160,65],[1177,10,1161,16],[1178,10,1162,16],[1178,14,1162,20,"drawerHeight"],[1178,26,1162,32],[1178,29,1162,35,"visualViewportHeight"],[1178,49,1162,55],[1178,53,1162,59,"keyboardIsOpen"],[1178,67,1162,73],[1178,68,1162,74,"current"],[1178,75,1162,81],[1178,77,1162,83],[1179,12,1163,20],[1179,18,1163,26,"height"],[1179,24,1163,32],[1179,27,1163,35,"drawerRef"],[1179,36,1163,44],[1179,37,1163,45,"current"],[1179,44,1163,52],[1179,45,1163,53,"getBoundingClientRect"],[1179,66,1163,74],[1179,67,1163,75],[1179,68,1163,76],[1179,69,1163,77,"height"],[1179,75,1163,83],[1180,12,1164,20],[1180,16,1164,24,"newDrawerHeight"],[1180,31,1164,39],[1180,34,1164,42,"height"],[1180,40,1164,48],[1181,12,1165,20],[1181,16,1165,24,"height"],[1181,22,1165,30],[1181,25,1165,33,"visualViewportHeight"],[1181,45,1165,53],[1181,47,1165,55],[1182,14,1166,24,"newDrawerHeight"],[1182,29,1166,39],[1182,32,1166,42,"visualViewportHeight"],[1182,52,1166,62],[1182,56,1166,66,"isTallEnough"],[1182,68,1166,78],[1182,71,1166,81,"offsetFromTop"],[1182,84,1166,94],[1182,87,1166,97,"WINDOW_TOP_OFFSET"],[1182,104,1166,114],[1182,105,1166,115],[1183,12,1167,20],[1184,12,1168,20],[1185,12,1169,20],[1185,16,1169,24,"fixed"],[1185,21,1169,29],[1185,23,1169,31],[1186,14,1170,24,"drawerRef"],[1186,23,1170,33],[1186,24,1170,34,"current"],[1186,31,1170,41],[1186,32,1170,42,"style"],[1186,37,1170,47],[1186,38,1170,48,"height"],[1186,44,1170,54],[1186,47,1170,57],[1186,50,1170,60,"height"],[1186,56,1170,66],[1186,59,1170,69,"Math"],[1186,63,1170,73],[1186,64,1170,74,"max"],[1186,67,1170,77],[1186,68,1170,78,"diffFromInitial"],[1186,83,1170,93],[1186,85,1170,95],[1186,86,1170,96],[1186,87,1170,97],[1186,91,1170,101],[1187,12,1171,20],[1187,13,1171,21],[1187,19,1171,27],[1188,14,1172,24,"drawerRef"],[1188,23,1172,33],[1188,24,1172,34,"current"],[1188,31,1172,41],[1188,32,1172,42,"style"],[1188,37,1172,47],[1188,38,1172,48,"height"],[1188,44,1172,54],[1188,47,1172,57],[1188,50,1172,60,"Math"],[1188,54,1172,64],[1188,55,1172,65,"max"],[1188,58,1172,68],[1188,59,1172,69,"newDrawerHeight"],[1188,74,1172,84],[1188,76,1172,86,"visualViewportHeight"],[1188,96,1172,106],[1188,99,1172,109,"offsetFromTop"],[1188,112,1172,122],[1188,113,1172,123],[1188,117,1172,127],[1189,12,1173,20],[1190,10,1174,16],[1190,11,1174,17],[1190,17,1174,23],[1190,21,1174,27],[1190,22,1174,28,"isMobileFirefox"],[1190,37,1174,43],[1190,38,1174,44],[1190,39,1174,45],[1190,41,1174,47],[1191,12,1175,20,"drawerRef"],[1191,21,1175,29],[1191,22,1175,30,"current"],[1191,29,1175,37],[1191,30,1175,38,"style"],[1191,35,1175,43],[1191,36,1175,44,"height"],[1191,42,1175,50],[1191,45,1175,53],[1191,48,1175,56,"initialDrawerHeight"],[1191,67,1175,75],[1191,68,1175,76,"current"],[1191,75,1175,83],[1191,79,1175,87],[1192,10,1176,16],[1193,10,1177,16],[1193,14,1177,20,"snapPoints"],[1193,24,1177,30],[1193,28,1177,34,"snapPoints"],[1193,38,1177,44],[1193,39,1177,45,"length"],[1193,45,1177,51],[1193,48,1177,54],[1193,49,1177,55],[1193,53,1177,59],[1193,54,1177,60,"keyboardIsOpen"],[1193,68,1177,74],[1193,69,1177,75,"current"],[1193,76,1177,82],[1193,78,1177,84],[1194,12,1178,20,"drawerRef"],[1194,21,1178,29],[1194,22,1178,30,"current"],[1194,29,1178,37],[1194,30,1178,38,"style"],[1194,35,1178,43],[1194,36,1178,44,"bottom"],[1194,42,1178,50],[1194,45,1178,53],[1194,50,1178,58],[1195,10,1179,16],[1195,11,1179,17],[1195,17,1179,23],[1196,12,1180,20],[1197,12,1181,20,"drawerRef"],[1197,21,1181,29],[1197,22,1181,30,"current"],[1197,29,1181,37],[1197,30,1181,38,"style"],[1197,35,1181,43],[1197,36,1181,44,"bottom"],[1197,42,1181,50],[1197,45,1181,53],[1197,48,1181,56,"Math"],[1197,52,1181,60],[1197,53,1181,61,"max"],[1197,56,1181,64],[1197,57,1181,65,"diffFromInitial"],[1197,72,1181,80],[1197,74,1181,82],[1197,75,1181,83],[1197,76,1181,84],[1197,80,1181,88],[1198,10,1182,16],[1199,8,1183,12],[1200,6,1184,8],[1201,6,1185,8],[1201,7,1185,9,"_window_visualViewport"],[1201,29,1185,31],[1201,32,1185,34,"window"],[1201,38,1185,40],[1201,39,1185,41,"visualViewport"],[1201,53,1185,55],[1201,58,1185,60],[1201,62,1185,64],[1201,65,1185,67],[1201,70,1185,72],[1201,71,1185,73],[1201,74,1185,76,"_window_visualViewport"],[1201,96,1185,98],[1201,97,1185,99,"addEventListener"],[1201,113,1185,115],[1201,114,1185,116],[1201,122,1185,124],[1201,124,1185,126,"onVisualViewportChange"],[1201,146,1185,148],[1201,147,1185,149],[1202,6,1186,8],[1202,13,1186,15],[1202,19,1186,19],[1203,8,1187,12],[1203,12,1187,16,"_window_visualViewport"],[1203,34,1187,38],[1204,8,1188,12],[1204,15,1188,19],[1204,16,1188,20,"_window_visualViewport"],[1204,38,1188,42],[1204,41,1188,45,"window"],[1204,47,1188,51],[1204,48,1188,52,"visualViewport"],[1204,62,1188,66],[1204,67,1188,71],[1204,71,1188,75],[1204,74,1188,78],[1204,79,1188,83],[1204,80,1188,84],[1204,83,1188,87,"_window_visualViewport"],[1204,105,1188,109],[1204,106,1188,110,"removeEventListener"],[1204,125,1188,129],[1204,126,1188,130],[1204,134,1188,138],[1204,136,1188,140,"onVisualViewportChange"],[1204,158,1188,162],[1204,159,1188,163],[1205,6,1189,8],[1205,7,1189,9],[1206,4,1190,4],[1206,5,1190,5],[1206,7,1190,7],[1206,8,1191,8,"activeSnapPointIndex"],[1206,28,1191,28],[1206,30,1192,8,"snapPoints"],[1206,40,1192,18],[1206,42,1193,8,"snapPointsOffset"],[1206,58,1193,24],[1206,59,1194,5],[1206,60,1194,6],[1207,4,1195,4],[1207,13,1195,13,"closeDrawer"],[1207,24,1195,24,"closeDrawer"],[1207,25,1195,25,"fromWithin"],[1207,35,1195,35],[1207,37,1195,37],[1208,6,1196,8,"cancelDrag"],[1208,16,1196,18],[1208,17,1196,19],[1208,18,1196,20],[1209,6,1197,8,"onClose"],[1209,13,1197,15],[1209,17,1197,19],[1209,21,1197,23],[1209,24,1197,26],[1209,29,1197,31],[1209,30,1197,32],[1209,33,1197,35,"onClose"],[1209,40,1197,42],[1209,41,1197,43],[1209,42,1197,44],[1210,6,1198,8],[1210,10,1198,12],[1210,11,1198,13,"fromWithin"],[1210,21,1198,23],[1210,23,1198,25],[1211,8,1199,12,"setIsOpen"],[1211,17,1199,21],[1211,18,1199,22],[1211,23,1199,27],[1211,24,1199,28],[1212,6,1200,8],[1213,6,1201,8,"setTimeout"],[1213,16,1201,18],[1213,17,1201,19],[1213,23,1201,23],[1214,8,1202,12],[1214,12,1202,16,"snapPoints"],[1214,22,1202,26],[1214,24,1202,28],[1215,10,1203,16,"setActiveSnapPoint"],[1215,28,1203,34],[1215,29,1203,35,"snapPoints"],[1215,39,1203,45],[1215,40,1203,46],[1215,41,1203,47],[1215,42,1203,48],[1215,43,1203,49],[1216,8,1204,12],[1217,6,1205,8],[1217,7,1205,9],[1217,9,1205,11,"TRANSITIONS"],[1217,20,1205,22],[1217,21,1205,23,"DURATION"],[1217,29,1205,31],[1217,32,1205,34],[1217,36,1205,38],[1217,37,1205,39],[1217,38,1205,40],[1217,39,1205,41],[1218,4,1206,4],[1219,4,1207,4],[1219,13,1207,13,"resetDrawer"],[1219,24,1207,24,"resetDrawer"],[1219,25,1207,24],[1219,27,1207,27],[1220,6,1208,8],[1220,10,1208,12],[1220,11,1208,13,"drawerRef"],[1220,20,1208,22],[1220,21,1208,23,"current"],[1220,28,1208,30],[1220,30,1208,32],[1221,6,1209,8],[1221,12,1209,14,"wrapper"],[1221,19,1209,21],[1221,22,1209,24,"document"],[1221,30,1209,32],[1221,31,1209,33,"querySelector"],[1221,44,1209,46],[1221,45,1209,47],[1221,73,1209,75],[1221,74,1209,76],[1222,6,1210,8],[1222,12,1210,14,"currentSwipeAmount"],[1222,30,1210,32],[1222,33,1210,35,"getTranslate"],[1222,45,1210,47],[1222,46,1210,48,"drawerRef"],[1222,55,1210,57],[1222,56,1210,58,"current"],[1222,63,1210,65],[1222,65,1210,67,"direction"],[1222,74,1210,76],[1222,75,1210,77],[1223,6,1211,8,"set"],[1223,9,1211,11],[1223,10,1211,12,"drawerRef"],[1223,19,1211,21],[1223,20,1211,22,"current"],[1223,27,1211,29],[1223,29,1211,31],[1224,8,1212,12,"transform"],[1224,17,1212,21],[1224,19,1212,23],[1224,41,1212,45],[1225,8,1213,12,"transition"],[1225,18,1213,22],[1225,20,1213,24],[1225,33,1213,37,"TRANSITIONS"],[1225,44,1213,48],[1225,45,1213,49,"DURATION"],[1225,53,1213,57],[1225,71,1213,75,"TRANSITIONS"],[1225,82,1213,86],[1225,83,1213,87,"EASE"],[1225,87,1213,91],[1225,88,1213,92,"join"],[1225,92,1213,96],[1225,93,1213,97],[1225,96,1213,100],[1225,97,1213,101],[1226,6,1214,8],[1226,7,1214,9],[1226,8,1214,10],[1227,6,1215,8,"set"],[1227,9,1215,11],[1227,10,1215,12,"overlayRef"],[1227,20,1215,22],[1227,21,1215,23,"current"],[1227,28,1215,30],[1227,30,1215,32],[1228,8,1216,12,"transition"],[1228,18,1216,22],[1228,20,1216,24],[1228,31,1216,35,"TRANSITIONS"],[1228,42,1216,46],[1228,43,1216,47,"DURATION"],[1228,51,1216,55],[1228,69,1216,73,"TRANSITIONS"],[1228,80,1216,84],[1228,81,1216,85,"EASE"],[1228,85,1216,89],[1228,86,1216,90,"join"],[1228,90,1216,94],[1228,91,1216,95],[1228,94,1216,98],[1228,95,1216,99],[1228,98,1216,102],[1229,8,1217,12,"opacity"],[1229,15,1217,19],[1229,17,1217,21],[1230,6,1218,8],[1230,7,1218,9],[1230,8,1218,10],[1231,6,1219,8],[1232,6,1220,8],[1232,10,1220,12,"shouldScaleBackground"],[1232,31,1220,33],[1232,35,1220,37,"currentSwipeAmount"],[1232,53,1220,55],[1232,57,1220,59,"currentSwipeAmount"],[1232,75,1220,77],[1232,78,1220,80],[1232,79,1220,81],[1232,83,1220,85,"isOpen"],[1232,89,1220,91],[1232,91,1220,93],[1233,8,1221,12,"set"],[1233,11,1221,15],[1233,12,1221,16,"wrapper"],[1233,19,1221,23],[1233,21,1221,23,"Object"],[1233,27,1221,23],[1233,28,1221,23,"assign"],[1233,34,1221,23],[1234,10,1222,16,"borderRadius"],[1234,22,1222,28],[1234,24,1222,30],[1234,27,1222,33,"BORDER_RADIUS"],[1234,40,1222,46],[1234,44,1222,50],[1235,10,1223,16,"overflow"],[1235,18,1223,24],[1235,20,1223,26],[1236,8,1223,34],[1236,11,1224,19,"isVertical"],[1236,21,1224,29],[1236,22,1224,30,"direction"],[1236,31,1224,39],[1236,32,1224,40],[1236,35,1224,43],[1237,10,1225,20,"transform"],[1237,19,1225,29],[1237,21,1225,31],[1237,30,1225,40,"getScale"],[1237,38,1225,48],[1237,39,1225,49],[1237,40,1225,50],[1237,100,1225,110],[1238,10,1226,20,"transformOrigin"],[1238,25,1226,35],[1238,27,1226,37],[1239,8,1227,16],[1239,9,1227,17],[1239,12,1227,20],[1240,10,1228,20,"transform"],[1240,19,1228,29],[1240,21,1228,31],[1240,30,1228,40,"getScale"],[1240,38,1228,48],[1240,39,1228,49],[1240,40,1228,50],[1240,100,1228,110],[1241,10,1229,20,"transformOrigin"],[1241,25,1229,35],[1241,27,1229,37],[1242,8,1230,16],[1242,9,1230,17],[1243,10,1231,16,"transitionProperty"],[1243,28,1231,34],[1243,30,1231,36],[1243,56,1231,62],[1244,10,1232,16,"transitionDuration"],[1244,28,1232,34],[1244,30,1232,36],[1244,33,1232,39,"TRANSITIONS"],[1244,44,1232,50],[1244,45,1232,51,"DURATION"],[1244,53,1232,59],[1244,56,1232,62],[1245,10,1233,16,"transitionTimingFunction"],[1245,34,1233,40],[1245,36,1233,42],[1245,52,1233,58,"TRANSITIONS"],[1245,63,1233,69],[1245,64,1233,70,"EASE"],[1245,68,1233,74],[1245,69,1233,75,"join"],[1245,73,1233,79],[1245,74,1233,80],[1245,77,1233,83],[1245,78,1233,84],[1246,8,1233,87],[1246,12,1234,15],[1246,16,1234,19],[1246,17,1234,20],[1247,6,1235,8],[1248,4,1236,4],[1249,4,1237,4],[1249,13,1237,13,"cancelDrag"],[1249,23,1237,23,"cancelDrag"],[1249,24,1237,23],[1249,26,1237,26],[1250,6,1238,8],[1250,10,1238,12],[1250,11,1238,13,"isDragging"],[1250,21,1238,23],[1250,25,1238,27],[1250,26,1238,28,"drawerRef"],[1250,35,1238,37],[1250,36,1238,38,"current"],[1250,43,1238,45],[1250,45,1238,47],[1251,6,1239,8,"drawerRef"],[1251,15,1239,17],[1251,16,1239,18,"current"],[1251,23,1239,25],[1251,24,1239,26,"classList"],[1251,33,1239,35],[1251,34,1239,36,"remove"],[1251,40,1239,42],[1251,41,1239,43,"DRAG_CLASS"],[1251,51,1239,53],[1251,52,1239,54],[1252,6,1240,8,"isAllowedToDrag"],[1252,21,1240,23],[1252,22,1240,24,"current"],[1252,29,1240,31],[1252,32,1240,34],[1252,37,1240,39],[1253,6,1241,8,"setIsDragging"],[1253,19,1241,21],[1253,20,1241,22],[1253,25,1241,27],[1253,26,1241,28],[1254,6,1242,8,"dragEndTime"],[1254,17,1242,19],[1254,18,1242,20,"current"],[1254,25,1242,27],[1254,28,1242,30],[1254,32,1242,34,"Date"],[1254,36,1242,38],[1254,37,1242,39],[1254,38,1242,40],[1255,4,1243,4],[1256,4,1244,4],[1256,13,1244,13,"onRelease"],[1256,22,1244,22,"onRelease"],[1256,23,1244,23,"event"],[1256,28,1244,28],[1256,30,1244,30],[1257,6,1245,8],[1257,10,1245,12],[1257,11,1245,13,"isDragging"],[1257,21,1245,23],[1257,25,1245,27],[1257,26,1245,28,"drawerRef"],[1257,35,1245,37],[1257,36,1245,38,"current"],[1257,43,1245,45],[1257,45,1245,47],[1258,6,1246,8,"drawerRef"],[1258,15,1246,17],[1258,16,1246,18,"current"],[1258,23,1246,25],[1258,24,1246,26,"classList"],[1258,33,1246,35],[1258,34,1246,36,"remove"],[1258,40,1246,42],[1258,41,1246,43,"DRAG_CLASS"],[1258,51,1246,53],[1258,52,1246,54],[1259,6,1247,8,"isAllowedToDrag"],[1259,21,1247,23],[1259,22,1247,24,"current"],[1259,29,1247,31],[1259,32,1247,34],[1259,37,1247,39],[1260,6,1248,8,"setIsDragging"],[1260,19,1248,21],[1260,20,1248,22],[1260,25,1248,27],[1260,26,1248,28],[1261,6,1249,8,"dragEndTime"],[1261,17,1249,19],[1261,18,1249,20,"current"],[1261,25,1249,27],[1261,28,1249,30],[1261,32,1249,34,"Date"],[1261,36,1249,38],[1261,37,1249,39],[1261,38,1249,40],[1262,6,1250,8],[1262,12,1250,14,"swipeAmount"],[1262,23,1250,25],[1262,26,1250,28,"getTranslate"],[1262,38,1250,40],[1262,39,1250,41,"drawerRef"],[1262,48,1250,50],[1262,49,1250,51,"current"],[1262,56,1250,58],[1262,58,1250,60,"direction"],[1262,67,1250,69],[1262,68,1250,70],[1263,6,1251,8],[1263,10,1251,12],[1263,11,1251,13,"event"],[1263,16,1251,18],[1263,20,1251,22],[1263,21,1251,23,"shouldDrag"],[1263,31,1251,33],[1263,32,1251,34,"event"],[1263,37,1251,39],[1263,38,1251,40,"target"],[1263,44,1251,46],[1263,46,1251,48],[1263,51,1251,53],[1263,52,1251,54],[1263,56,1251,58],[1263,57,1251,59,"swipeAmount"],[1263,68,1251,70],[1263,72,1251,74,"Number"],[1263,78,1251,80],[1263,79,1251,81,"isNaN"],[1263,84,1251,86],[1263,85,1251,87,"swipeAmount"],[1263,96,1251,98],[1263,97,1251,99],[1263,99,1251,101],[1264,6,1252,8],[1264,10,1252,12,"dragStartTime"],[1264,23,1252,25],[1264,24,1252,26,"current"],[1264,31,1252,33],[1264,36,1252,38],[1264,40,1252,42],[1264,42,1252,44],[1265,6,1253,8],[1265,12,1253,14,"timeTaken"],[1265,21,1253,23],[1265,24,1253,26,"dragEndTime"],[1265,35,1253,37],[1265,36,1253,38,"current"],[1265,43,1253,45],[1265,44,1253,46,"getTime"],[1265,51,1253,53],[1265,52,1253,54],[1265,53,1253,55],[1265,56,1253,58,"dragStartTime"],[1265,69,1253,71],[1265,70,1253,72,"current"],[1265,77,1253,79],[1265,78,1253,80,"getTime"],[1265,85,1253,87],[1265,86,1253,88],[1265,87,1253,89],[1266,6,1254,8],[1266,12,1254,14,"distMoved"],[1266,21,1254,23],[1266,24,1254,26,"pointerStart"],[1266,36,1254,38],[1266,37,1254,39,"current"],[1266,44,1254,46],[1266,48,1254,50,"isVertical"],[1266,58,1254,60],[1266,59,1254,61,"direction"],[1266,68,1254,70],[1266,69,1254,71],[1266,72,1254,74,"event"],[1266,77,1254,79],[1266,78,1254,80,"pageY"],[1266,83,1254,85],[1266,86,1254,88,"event"],[1266,91,1254,93],[1266,92,1254,94,"pageX"],[1266,97,1254,99],[1266,98,1254,100],[1267,6,1255,8],[1267,12,1255,14,"velocity"],[1267,20,1255,22],[1267,23,1255,25,"Math"],[1267,27,1255,29],[1267,28,1255,30,"abs"],[1267,31,1255,33],[1267,32,1255,34,"distMoved"],[1267,41,1255,43],[1267,42,1255,44],[1267,45,1255,47,"timeTaken"],[1267,54,1255,56],[1268,6,1256,8],[1268,10,1256,12,"velocity"],[1268,18,1256,20],[1268,21,1256,23],[1268,25,1256,27],[1268,27,1256,29],[1269,8,1257,12],[1270,8,1258,12,"setJustReleased"],[1270,23,1258,27],[1270,24,1258,28],[1270,28,1258,32],[1270,29,1258,33],[1271,8,1259,12,"setTimeout"],[1271,18,1259,22],[1271,19,1259,23],[1271,25,1259,27],[1272,10,1260,16,"setJustReleased"],[1272,25,1260,31],[1272,26,1260,32],[1272,31,1260,37],[1272,32,1260,38],[1273,8,1261,12],[1273,9,1261,13],[1273,11,1261,15],[1273,14,1261,18],[1273,15,1261,19],[1274,6,1262,8],[1275,6,1263,8],[1275,10,1263,12,"snapPoints"],[1275,20,1263,22],[1275,22,1263,24],[1276,8,1264,12],[1276,14,1264,18,"directionMultiplier"],[1276,33,1264,37],[1276,36,1264,40,"direction"],[1276,45,1264,49],[1276,50,1264,54],[1276,58,1264,62],[1276,62,1264,66,"direction"],[1276,71,1264,75],[1276,76,1264,80],[1276,83,1264,87],[1276,86,1264,90],[1276,87,1264,91],[1276,90,1264,94],[1276,91,1264,95],[1276,92,1264,96],[1277,8,1265,12,"onReleaseSnapPoints"],[1277,27,1265,31],[1277,28,1265,32],[1278,10,1266,16,"draggedDistance"],[1278,25,1266,31],[1278,27,1266,33,"distMoved"],[1278,36,1266,42],[1278,39,1266,45,"directionMultiplier"],[1278,58,1266,64],[1279,10,1267,16,"closeDrawer"],[1279,21,1267,27],[1280,10,1268,16,"velocity"],[1280,18,1268,24],[1281,10,1269,16,"dismissible"],[1282,8,1270,12],[1282,9,1270,13],[1282,10,1270,14],[1283,8,1271,12,"onReleaseProp"],[1283,21,1271,25],[1283,25,1271,29],[1283,29,1271,33],[1283,32,1271,36],[1283,37,1271,41],[1283,38,1271,42],[1283,41,1271,45,"onReleaseProp"],[1283,54,1271,58],[1283,55,1271,59,"event"],[1283,60,1271,64],[1283,62,1271,66],[1283,66,1271,70],[1283,67,1271,71],[1284,8,1272,12],[1285,6,1273,8],[1286,6,1274,8],[1287,6,1275,8],[1287,10,1275,12,"direction"],[1287,19,1275,21],[1287,24,1275,26],[1287,32,1275,34],[1287,36,1275,38,"direction"],[1287,45,1275,47],[1287,50,1275,52],[1287,57,1275,59],[1287,60,1275,62,"distMoved"],[1287,69,1275,71],[1287,72,1275,74],[1287,73,1275,75],[1287,76,1275,78,"distMoved"],[1287,85,1275,87],[1287,88,1275,90],[1287,89,1275,91],[1287,91,1275,93],[1288,8,1276,12,"resetDrawer"],[1288,19,1276,23],[1288,20,1276,24],[1288,21,1276,25],[1289,8,1277,12,"onReleaseProp"],[1289,21,1277,25],[1289,25,1277,29],[1289,29,1277,33],[1289,32,1277,36],[1289,37,1277,41],[1289,38,1277,42],[1289,41,1277,45,"onReleaseProp"],[1289,54,1277,58],[1289,55,1277,59,"event"],[1289,60,1277,64],[1289,62,1277,66],[1289,66,1277,70],[1289,67,1277,71],[1290,8,1278,12],[1291,6,1279,8],[1292,6,1280,8],[1292,10,1280,12,"velocity"],[1292,18,1280,20],[1292,21,1280,23,"VELOCITY_THRESHOLD"],[1292,39,1280,41],[1292,41,1280,43],[1293,8,1281,12,"closeDrawer"],[1293,19,1281,23],[1293,20,1281,24],[1293,21,1281,25],[1294,8,1282,12,"onReleaseProp"],[1294,21,1282,25],[1294,25,1282,29],[1294,29,1282,33],[1294,32,1282,36],[1294,37,1282,41],[1294,38,1282,42],[1294,41,1282,45,"onReleaseProp"],[1294,54,1282,58],[1294,55,1282,59,"event"],[1294,60,1282,64],[1294,62,1282,66],[1294,67,1282,71],[1294,68,1282,72],[1295,8,1283,12],[1296,6,1284,8],[1297,6,1285,8],[1297,10,1285,12,"_drawerRef_current_getBoundingClientRect_height"],[1297,57,1285,59],[1298,6,1286,8],[1298,12,1286,14,"visibleDrawerHeight"],[1298,31,1286,33],[1298,34,1286,36,"Math"],[1298,38,1286,40],[1298,39,1286,41,"min"],[1298,42,1286,44],[1298,43,1286,45],[1298,44,1286,46,"_drawerRef_current_getBoundingClientRect_height"],[1298,91,1286,93],[1298,94,1286,96,"drawerRef"],[1298,103,1286,105],[1298,104,1286,106,"current"],[1298,111,1286,113],[1298,112,1286,114,"getBoundingClientRect"],[1298,133,1286,135],[1298,134,1286,136],[1298,135,1286,137],[1298,136,1286,138,"height"],[1298,142,1286,144],[1298,147,1286,149],[1298,151,1286,153],[1298,154,1286,156,"_drawerRef_current_getBoundingClientRect_height"],[1298,201,1286,203],[1298,204,1286,206],[1298,205,1286,207],[1298,207,1286,209,"window"],[1298,213,1286,215],[1298,214,1286,216,"innerHeight"],[1298,225,1286,227],[1298,226,1286,228],[1299,6,1287,8],[1299,10,1287,12,"_drawerRef_current_getBoundingClientRect_width"],[1299,56,1287,58],[1300,6,1288,8],[1300,12,1288,14,"visibleDrawerWidth"],[1300,30,1288,32],[1300,33,1288,35,"Math"],[1300,37,1288,39],[1300,38,1288,40,"min"],[1300,41,1288,43],[1300,42,1288,44],[1300,43,1288,45,"_drawerRef_current_getBoundingClientRect_width"],[1300,89,1288,91],[1300,92,1288,94,"drawerRef"],[1300,101,1288,103],[1300,102,1288,104,"current"],[1300,109,1288,111],[1300,110,1288,112,"getBoundingClientRect"],[1300,131,1288,133],[1300,132,1288,134],[1300,133,1288,135],[1300,134,1288,136,"width"],[1300,139,1288,141],[1300,144,1288,146],[1300,148,1288,150],[1300,151,1288,153,"_drawerRef_current_getBoundingClientRect_width"],[1300,197,1288,199],[1300,200,1288,202],[1300,201,1288,203],[1300,203,1288,205,"window"],[1300,209,1288,211],[1300,210,1288,212,"innerWidth"],[1300,220,1288,222],[1300,221,1288,223],[1301,6,1289,8],[1301,12,1289,14,"isHorizontalSwipe"],[1301,29,1289,31],[1301,32,1289,34,"direction"],[1301,41,1289,43],[1301,46,1289,48],[1301,52,1289,54],[1301,56,1289,58,"direction"],[1301,65,1289,67],[1301,70,1289,72],[1301,77,1289,79],[1302,6,1290,8],[1302,10,1290,12,"Math"],[1302,14,1290,16],[1302,15,1290,17,"abs"],[1302,18,1290,20],[1302,19,1290,21,"swipeAmount"],[1302,30,1290,32],[1302,31,1290,33],[1302,35,1290,37],[1302,36,1290,38,"isHorizontalSwipe"],[1302,53,1290,55],[1302,56,1290,58,"visibleDrawerWidth"],[1302,74,1290,76],[1302,77,1290,79,"visibleDrawerHeight"],[1302,96,1290,98],[1302,100,1290,102,"closeThreshold"],[1302,114,1290,116],[1302,116,1290,118],[1303,8,1291,12,"closeDrawer"],[1303,19,1291,23],[1303,20,1291,24],[1303,21,1291,25],[1304,8,1292,12,"onReleaseProp"],[1304,21,1292,25],[1304,25,1292,29],[1304,29,1292,33],[1304,32,1292,36],[1304,37,1292,41],[1304,38,1292,42],[1304,41,1292,45,"onReleaseProp"],[1304,54,1292,58],[1304,55,1292,59,"event"],[1304,60,1292,64],[1304,62,1292,66],[1304,67,1292,71],[1304,68,1292,72],[1305,8,1293,12],[1306,6,1294,8],[1307,6,1295,8,"onReleaseProp"],[1307,19,1295,21],[1307,23,1295,25],[1307,27,1295,29],[1307,30,1295,32],[1307,35,1295,37],[1307,36,1295,38],[1307,39,1295,41,"onReleaseProp"],[1307,52,1295,54],[1307,53,1295,55,"event"],[1307,58,1295,60],[1307,60,1295,62],[1307,64,1295,66],[1307,65,1295,67],[1308,6,1296,8,"resetDrawer"],[1308,17,1296,19],[1308,18,1296,20],[1308,19,1296,21],[1309,4,1297,4],[1310,4,1298,4,"React__namespace"],[1310,20,1298,20],[1310,21,1298,21,"default"],[1310,28,1298,28],[1310,29,1298,29,"useEffect"],[1310,38,1298,38],[1310,39,1298,39],[1310,45,1298,43],[1311,6,1299,8],[1312,6,1300,8],[1312,10,1300,12,"isOpen"],[1312,16,1300,18],[1312,18,1300,20],[1313,8,1301,12,"set"],[1313,11,1301,15],[1313,12,1301,16,"document"],[1313,20,1301,24],[1313,21,1301,25,"documentElement"],[1313,36,1301,40],[1313,38,1301,42],[1314,10,1302,16,"scrollBehavior"],[1314,24,1302,30],[1314,26,1302,32],[1315,8,1303,12],[1315,9,1303,13],[1315,10,1303,14],[1316,8,1304,12,"openTime"],[1316,16,1304,20],[1316,17,1304,21,"current"],[1316,24,1304,28],[1316,27,1304,31],[1316,31,1304,35,"Date"],[1316,35,1304,39],[1316,36,1304,40],[1316,37,1304,41],[1317,6,1305,8],[1318,6,1306,8],[1318,13,1306,15],[1318,19,1306,19],[1319,8,1307,12,"reset"],[1319,13,1307,17],[1319,14,1307,18,"document"],[1319,22,1307,26],[1319,23,1307,27,"documentElement"],[1319,38,1307,42],[1319,40,1307,44],[1319,56,1307,60],[1319,57,1307,61],[1320,6,1308,8],[1320,7,1308,9],[1321,4,1309,4],[1321,5,1309,5],[1321,7,1309,7],[1321,8,1310,8,"isOpen"],[1321,14,1310,14],[1321,15,1311,5],[1321,16,1311,6],[1322,4,1312,4],[1322,13,1312,13,"onNestedOpenChange"],[1322,31,1312,31,"onNestedOpenChange"],[1322,32,1312,32,"o"],[1322,33,1312,33],[1322,35,1312,35],[1323,6,1313,8],[1323,12,1313,14,"scale"],[1323,17,1313,19],[1323,20,1313,22,"o"],[1323,21,1313,23],[1323,24,1313,26],[1323,25,1313,27,"window"],[1323,31,1313,33],[1323,32,1313,34,"innerWidth"],[1323,42,1313,44],[1323,45,1313,47,"NESTED_DISPLACEMENT"],[1323,64,1313,66],[1323,68,1313,70,"window"],[1323,74,1313,76],[1323,75,1313,77,"innerWidth"],[1323,85,1313,87],[1323,88,1313,90],[1323,89,1313,91],[1324,6,1314,8],[1324,12,1314,14,"initialTranslate"],[1324,28,1314,30],[1324,31,1314,33,"o"],[1324,32,1314,34],[1324,35,1314,37],[1324,36,1314,38,"NESTED_DISPLACEMENT"],[1324,55,1314,57],[1324,58,1314,60],[1324,59,1314,61],[1325,6,1315,8],[1325,10,1315,12,"nestedOpenChangeTimer"],[1325,31,1315,33],[1325,32,1315,34,"current"],[1325,39,1315,41],[1325,41,1315,43],[1326,8,1316,12,"window"],[1326,14,1316,18],[1326,15,1316,19,"clearTimeout"],[1326,27,1316,31],[1326,28,1316,32,"nestedOpenChangeTimer"],[1326,49,1316,53],[1326,50,1316,54,"current"],[1326,57,1316,61],[1326,58,1316,62],[1327,6,1317,8],[1328,6,1318,8,"set"],[1328,9,1318,11],[1328,10,1318,12,"drawerRef"],[1328,19,1318,21],[1328,20,1318,22,"current"],[1328,27,1318,29],[1328,29,1318,31],[1329,8,1319,12,"transition"],[1329,18,1319,22],[1329,20,1319,24],[1329,33,1319,37,"TRANSITIONS"],[1329,44,1319,48],[1329,45,1319,49,"DURATION"],[1329,53,1319,57],[1329,71,1319,75,"TRANSITIONS"],[1329,82,1319,86],[1329,83,1319,87,"EASE"],[1329,87,1319,91],[1329,88,1319,92,"join"],[1329,92,1319,96],[1329,93,1319,97],[1329,96,1319,100],[1329,97,1319,101],[1329,100,1319,104],[1330,8,1320,12,"transform"],[1330,17,1320,21],[1330,19,1320,23,"isVertical"],[1330,29,1320,33],[1330,30,1320,34,"direction"],[1330,39,1320,43],[1330,40,1320,44],[1330,43,1320,47],[1330,52,1320,56,"scale"],[1330,57,1320,61],[1330,77,1320,81,"initialTranslate"],[1330,93,1320,97],[1330,101,1320,105],[1330,104,1320,108],[1330,113,1320,117,"scale"],[1330,118,1320,122],[1330,135,1320,139,"initialTranslate"],[1330,151,1320,155],[1331,6,1321,8],[1331,7,1321,9],[1331,8,1321,10],[1332,6,1322,8],[1332,10,1322,12],[1332,11,1322,13,"o"],[1332,12,1322,14],[1332,16,1322,18,"drawerRef"],[1332,25,1322,27],[1332,26,1322,28,"current"],[1332,33,1322,35],[1332,35,1322,37],[1333,8,1323,12,"nestedOpenChangeTimer"],[1333,29,1323,33],[1333,30,1323,34,"current"],[1333,37,1323,41],[1333,40,1323,44,"setTimeout"],[1333,50,1323,54],[1333,51,1323,55],[1333,57,1323,59],[1334,10,1324,16],[1334,16,1324,22,"translateValue"],[1334,30,1324,36],[1334,33,1324,39,"getTranslate"],[1334,45,1324,51],[1334,46,1324,52,"drawerRef"],[1334,55,1324,61],[1334,56,1324,62,"current"],[1334,63,1324,69],[1334,65,1324,71,"direction"],[1334,74,1324,80],[1334,75,1324,81],[1335,10,1325,16,"set"],[1335,13,1325,19],[1335,14,1325,20,"drawerRef"],[1335,23,1325,29],[1335,24,1325,30,"current"],[1335,31,1325,37],[1335,33,1325,39],[1336,12,1326,20,"transition"],[1336,22,1326,30],[1336,24,1326,32],[1336,30,1326,38],[1337,12,1327,20,"transform"],[1337,21,1327,29],[1337,23,1327,31,"isVertical"],[1337,33,1327,41],[1337,34,1327,42,"direction"],[1337,43,1327,51],[1337,44,1327,52],[1337,47,1327,55],[1337,65,1327,73,"translateValue"],[1337,79,1327,87],[1337,87,1327,95],[1337,90,1327,98],[1337,105,1327,113,"translateValue"],[1337,119,1327,127],[1338,10,1328,16],[1338,11,1328,17],[1338,12,1328,18],[1339,8,1329,12],[1339,9,1329,13],[1339,11,1329,15],[1339,14,1329,18],[1339,15,1329,19],[1340,6,1330,8],[1341,4,1331,4],[1342,4,1332,4],[1342,13,1332,13,"onNestedDrag"],[1342,25,1332,25,"onNestedDrag"],[1342,26,1332,26,"_event"],[1342,32,1332,32],[1342,34,1332,34,"percentageDragged"],[1342,51,1332,51],[1342,53,1332,53],[1343,6,1333,8],[1343,10,1333,12,"percentageDragged"],[1343,27,1333,29],[1343,30,1333,32],[1343,31,1333,33],[1343,33,1333,35],[1344,6,1334,8],[1344,12,1334,14,"initialScale"],[1344,24,1334,26],[1344,27,1334,29],[1344,28,1334,30,"window"],[1344,34,1334,36],[1344,35,1334,37,"innerWidth"],[1344,45,1334,47],[1344,48,1334,50,"NESTED_DISPLACEMENT"],[1344,67,1334,69],[1344,71,1334,73,"window"],[1344,77,1334,79],[1344,78,1334,80,"innerWidth"],[1344,88,1334,90],[1345,6,1335,8],[1345,12,1335,14,"newScale"],[1345,20,1335,22],[1345,23,1335,25,"initialScale"],[1345,35,1335,37],[1345,38,1335,40,"percentageDragged"],[1345,55,1335,57],[1345,59,1335,61],[1345,60,1335,62],[1345,63,1335,65,"initialScale"],[1345,75,1335,77],[1345,76,1335,78],[1346,6,1336,8],[1346,12,1336,14,"newTranslate"],[1346,24,1336,26],[1346,27,1336,29],[1346,28,1336,30,"NESTED_DISPLACEMENT"],[1346,47,1336,49],[1346,50,1336,52,"percentageDragged"],[1346,67,1336,69],[1346,70,1336,72,"NESTED_DISPLACEMENT"],[1346,89,1336,91],[1347,6,1337,8,"set"],[1347,9,1337,11],[1347,10,1337,12,"drawerRef"],[1347,19,1337,21],[1347,20,1337,22,"current"],[1347,27,1337,29],[1347,29,1337,31],[1348,8,1338,12,"transform"],[1348,17,1338,21],[1348,19,1338,23,"isVertical"],[1348,29,1338,33],[1348,30,1338,34,"direction"],[1348,39,1338,43],[1348,40,1338,44],[1348,43,1338,47],[1348,52,1338,56,"newScale"],[1348,60,1338,64],[1348,80,1338,84,"newTranslate"],[1348,92,1338,96],[1348,100,1338,104],[1348,103,1338,107],[1348,112,1338,116,"newScale"],[1348,120,1338,124],[1348,137,1338,141,"newTranslate"],[1348,149,1338,153],[1348,160,1338,164],[1349,8,1339,12,"transition"],[1349,18,1339,22],[1349,20,1339,24],[1350,6,1340,8],[1350,7,1340,9],[1350,8,1340,10],[1351,4,1341,4],[1352,4,1342,4],[1352,13,1342,13,"onNestedRelease"],[1352,28,1342,28,"onNestedRelease"],[1352,29,1342,29,"_event"],[1352,35,1342,35],[1352,37,1342,37,"o"],[1352,38,1342,38],[1352,40,1342,40],[1353,6,1343,8],[1353,12,1343,14,"dim"],[1353,15,1343,17],[1353,18,1343,20,"isVertical"],[1353,28,1343,30],[1353,29,1343,31,"direction"],[1353,38,1343,40],[1353,39,1343,41],[1353,42,1343,44,"window"],[1353,48,1343,50],[1353,49,1343,51,"innerHeight"],[1353,60,1343,62],[1353,63,1343,65,"window"],[1353,69,1343,71],[1353,70,1343,72,"innerWidth"],[1353,80,1343,82],[1354,6,1344,8],[1354,12,1344,14,"scale"],[1354,17,1344,19],[1354,20,1344,22,"o"],[1354,21,1344,23],[1354,24,1344,26],[1354,25,1344,27,"dim"],[1354,28,1344,30],[1354,31,1344,33,"NESTED_DISPLACEMENT"],[1354,50,1344,52],[1354,54,1344,56,"dim"],[1354,57,1344,59],[1354,60,1344,62],[1354,61,1344,63],[1355,6,1345,8],[1355,12,1345,14,"translate"],[1355,21,1345,23],[1355,24,1345,26,"o"],[1355,25,1345,27],[1355,28,1345,30],[1355,29,1345,31,"NESTED_DISPLACEMENT"],[1355,48,1345,50],[1355,51,1345,53],[1355,52,1345,54],[1356,6,1346,8],[1356,10,1346,12,"o"],[1356,11,1346,13],[1356,13,1346,15],[1357,8,1347,12,"set"],[1357,11,1347,15],[1357,12,1347,16,"drawerRef"],[1357,21,1347,25],[1357,22,1347,26,"current"],[1357,29,1347,33],[1357,31,1347,35],[1358,10,1348,16,"transition"],[1358,20,1348,26],[1358,22,1348,28],[1358,35,1348,41,"TRANSITIONS"],[1358,46,1348,52],[1358,47,1348,53,"DURATION"],[1358,55,1348,61],[1358,73,1348,79,"TRANSITIONS"],[1358,84,1348,90],[1358,85,1348,91,"EASE"],[1358,89,1348,95],[1358,90,1348,96,"join"],[1358,94,1348,100],[1358,95,1348,101],[1358,98,1348,104],[1358,99,1348,105],[1358,102,1348,108],[1359,10,1349,16,"transform"],[1359,19,1349,25],[1359,21,1349,27,"isVertical"],[1359,31,1349,37],[1359,32,1349,38,"direction"],[1359,41,1349,47],[1359,42,1349,48],[1359,45,1349,51],[1359,54,1349,60,"scale"],[1359,59,1349,65],[1359,79,1349,85,"translate"],[1359,88,1349,94],[1359,96,1349,102],[1359,99,1349,105],[1359,108,1349,114,"scale"],[1359,113,1349,119],[1359,130,1349,136,"translate"],[1359,139,1349,145],[1360,8,1350,12],[1360,9,1350,13],[1360,10,1350,14],[1361,6,1351,8],[1362,4,1352,4],[1363,4,1353,4,"React__namespace"],[1363,20,1353,20],[1363,21,1353,21,"default"],[1363,28,1353,28],[1363,29,1353,29,"useEffect"],[1363,38,1353,38],[1363,39,1353,39],[1363,45,1353,43],[1364,6,1354,8],[1364,10,1354,12],[1364,11,1354,13,"modal"],[1364,16,1354,18],[1364,18,1354,20],[1365,8,1355,12],[1366,8,1356,12,"window"],[1366,14,1356,18],[1366,15,1356,19,"requestAnimationFrame"],[1366,36,1356,40],[1366,37,1356,41],[1366,43,1356,45],[1367,10,1357,16,"document"],[1367,18,1357,24],[1367,19,1357,25,"body"],[1367,23,1357,29],[1367,24,1357,30,"style"],[1367,29,1357,35],[1367,30,1357,36,"pointerEvents"],[1367,43,1357,49],[1367,46,1357,52],[1367,52,1357,58],[1368,8,1358,12],[1368,9,1358,13],[1368,10,1358,14],[1369,6,1359,8],[1370,4,1360,4],[1370,5,1360,5],[1370,7,1360,7],[1370,8,1361,8,"modal"],[1370,13,1361,13],[1370,14,1362,5],[1370,15,1362,6],[1371,4,1363,4],[1371,11,1363,11],[1371,24,1363,25,"React__namespace"],[1371,40,1363,41],[1371,41,1363,42,"default"],[1371,48,1363,49],[1371,49,1363,50,"createElement"],[1371,62,1363,63],[1371,63,1363,64,"DialogPrimitive__namespace"],[1371,89,1363,90],[1371,90,1363,91,"Root"],[1371,94,1363,95],[1371,96,1363,97],[1372,6,1364,8,"defaultOpen"],[1372,17,1364,19],[1372,19,1364,21,"defaultOpen"],[1372,30,1364,32],[1373,6,1365,8,"onOpenChange"],[1373,18,1365,20],[1373,20,1365,23,"open"],[1373,24,1365,27],[1373,28,1365,30],[1374,8,1366,12],[1374,12,1366,16],[1374,13,1366,17,"dismissible"],[1374,24,1366,28],[1374,28,1366,32],[1374,29,1366,33,"open"],[1374,33,1366,37],[1374,35,1366,39],[1375,8,1367,12],[1375,12,1367,16,"open"],[1375,16,1367,20],[1375,18,1367,22],[1376,10,1368,16,"setHasBeenOpened"],[1376,26,1368,32],[1376,27,1368,33],[1376,31,1368,37],[1376,32,1368,38],[1377,8,1369,12],[1377,9,1369,13],[1377,15,1369,19],[1378,10,1370,16,"closeDrawer"],[1378,21,1370,27],[1378,22,1370,28],[1378,26,1370,32],[1378,27,1370,33],[1379,8,1371,12],[1380,8,1372,12,"setIsOpen"],[1380,17,1372,21],[1380,18,1372,22,"open"],[1380,22,1372,26],[1380,23,1372,27],[1381,6,1373,8],[1381,7,1373,9],[1382,6,1374,8,"open"],[1382,10,1374,12],[1382,12,1374,14,"isOpen"],[1383,4,1375,4],[1383,5,1375,5],[1383,7,1375,7],[1383,20,1375,21,"React__namespace"],[1383,36,1375,37],[1383,37,1375,38,"default"],[1383,44,1375,45],[1383,45,1375,46,"createElement"],[1383,58,1375,59],[1383,59,1375,60,"DrawerContext"],[1383,72,1375,73],[1383,73,1375,74,"Provider"],[1383,81,1375,82],[1383,83,1375,84],[1384,6,1376,8,"value"],[1384,11,1376,13],[1384,13,1376,15],[1385,8,1377,12,"activeSnapPoint"],[1385,23,1377,27],[1386,8,1378,12,"snapPoints"],[1386,18,1378,22],[1387,8,1379,12,"setActiveSnapPoint"],[1387,26,1379,30],[1388,8,1380,12,"drawerRef"],[1388,17,1380,21],[1389,8,1381,12,"overlayRef"],[1389,18,1381,22],[1390,8,1382,12,"onOpenChange"],[1390,20,1382,24],[1391,8,1383,12,"onPress"],[1391,15,1383,19],[1392,8,1384,12,"onRelease"],[1392,17,1384,21],[1393,8,1385,12,"onDrag"],[1393,14,1385,18],[1394,8,1386,12,"dismissible"],[1394,19,1386,23],[1395,8,1387,12,"shouldAnimate"],[1395,21,1387,25],[1396,8,1388,12,"handleOnly"],[1396,18,1388,22],[1397,8,1389,12,"isOpen"],[1397,14,1389,18],[1398,8,1390,12,"isDragging"],[1398,18,1390,22],[1399,8,1391,12,"shouldFade"],[1399,18,1391,22],[1400,8,1392,12,"closeDrawer"],[1400,19,1392,23],[1401,8,1393,12,"onNestedDrag"],[1401,20,1393,24],[1402,8,1394,12,"onNestedOpenChange"],[1402,26,1394,30],[1403,8,1395,12,"onNestedRelease"],[1403,23,1395,27],[1404,8,1396,12,"keyboardIsOpen"],[1404,22,1396,26],[1405,8,1397,12,"modal"],[1405,13,1397,17],[1406,8,1398,12,"snapPointsOffset"],[1406,24,1398,28],[1407,8,1399,12,"activeSnapPointIndex"],[1407,28,1399,32],[1408,8,1400,12,"direction"],[1408,17,1400,21],[1409,8,1401,12,"shouldScaleBackground"],[1409,29,1401,33],[1410,8,1402,12,"setBackgroundColorOnScale"],[1410,33,1402,37],[1411,8,1403,12,"noBodyStyles"],[1411,20,1403,24],[1412,8,1404,12,"container"],[1412,17,1404,21],[1413,8,1405,12,"autoFocus"],[1414,6,1406,8],[1415,4,1407,4],[1415,5,1407,5],[1415,7,1407,7,"children"],[1415,15,1407,15],[1415,16,1407,16],[1415,17,1407,17],[1416,2,1408,0],[1417,2,1409,0],[1417,8,1409,6,"Overlay"],[1417,15,1409,13],[1417,18,1409,16],[1417,31,1409,30,"React__namespace"],[1417,47,1409,46],[1417,48,1409,47,"default"],[1417,55,1409,54],[1417,56,1409,55,"forwardRef"],[1417,66,1409,65],[1417,67,1409,66],[1417,77,1409,66,"_ref"],[1417,81,1409,66],[1417,83,1409,88,"ref"],[1417,86,1409,91],[1417,88,1409,93],[1418,4,1409,93],[1418,8,1409,80,"rest"],[1418,12,1409,84],[1418,15,1409,84,"Object"],[1418,21,1409,84],[1418,22,1409,84,"assign"],[1418,28,1409,84],[1418,34,1409,84,"_objectDestructuringEmpty"],[1418,59,1409,84],[1418,60,1409,84,"_ref"],[1418,64,1409,84],[1418,67,1409,84,"_ref"],[1418,71,1409,84],[1419,4,1410,4],[1419,10,1410,10],[1420,6,1410,12,"overlayRef"],[1420,16,1410,22],[1421,6,1410,24,"snapPoints"],[1421,16,1410,34],[1422,6,1410,36,"onRelease"],[1422,15,1410,45],[1423,6,1410,47,"shouldFade"],[1423,16,1410,57],[1424,6,1410,59,"isOpen"],[1424,12,1410,65],[1425,6,1410,67,"modal"],[1425,11,1410,72],[1426,6,1410,74,"shouldAnimate"],[1427,4,1410,88],[1427,5,1410,89],[1427,8,1410,92,"useDrawerContext"],[1427,24,1410,108],[1427,25,1410,109],[1427,26,1410,110],[1428,4,1411,4],[1428,10,1411,10,"composedRef"],[1428,21,1411,21],[1428,24,1411,24,"useComposedRefs"],[1428,39,1411,39],[1428,40,1411,40,"ref"],[1428,43,1411,43],[1428,45,1411,45,"overlayRef"],[1428,55,1411,55],[1428,56,1411,56],[1429,4,1412,4],[1429,10,1412,10,"hasSnapPoints"],[1429,23,1412,23],[1429,26,1412,26,"snapPoints"],[1429,36,1412,36],[1429,40,1412,40,"snapPoints"],[1429,50,1412,50],[1429,51,1412,51,"length"],[1429,57,1412,57],[1429,60,1412,60],[1429,61,1412,61],[1430,4,1413,4],[1431,4,1414,4],[1431,8,1414,8],[1431,9,1414,9,"modal"],[1431,14,1414,14],[1431,16,1414,16],[1432,6,1415,8],[1432,13,1415,15],[1432,17,1415,19],[1433,4,1416,4],[1434,4,1417,4],[1434,10,1417,10,"onMouseUp"],[1434,19,1417,19],[1434,22,1417,22,"React__namespace"],[1434,38,1417,38],[1434,39,1417,39,"default"],[1434,46,1417,46],[1434,47,1417,47,"useCallback"],[1434,58,1417,58],[1434,59,1417,60,"event"],[1434,64,1417,65],[1434,68,1417,68,"onRelease"],[1434,77,1417,77],[1434,78,1417,78,"event"],[1434,83,1417,83],[1434,84,1417,84],[1434,86,1417,86],[1434,87,1418,8,"onRelease"],[1434,96,1418,17],[1434,97,1419,5],[1434,98,1419,6],[1435,4,1420,4],[1435,11,1420,11],[1435,24,1420,25,"React__namespace"],[1435,40,1420,41],[1435,41,1420,42,"default"],[1435,48,1420,49],[1435,49,1420,50,"createElement"],[1435,62,1420,63],[1435,63,1420,64,"DialogPrimitive__namespace"],[1435,89,1420,90],[1435,90,1420,91,"Overlay"],[1435,97,1420,98],[1435,99,1420,98,"Object"],[1435,105,1420,98],[1435,106,1420,98,"assign"],[1435,112,1420,98],[1436,6,1421,8,"onMouseUp"],[1436,15,1421,17],[1436,17,1421,19,"onMouseUp"],[1436,26,1421,28],[1437,6,1422,8,"ref"],[1437,9,1422,11],[1437,11,1422,13,"composedRef"],[1437,22,1422,24],[1438,6,1423,8],[1438,25,1423,27],[1438,27,1423,29],[1438,29,1423,31],[1439,6,1424,8],[1439,29,1424,31],[1439,31,1424,33,"isOpen"],[1439,37,1424,39],[1439,41,1424,43,"hasSnapPoints"],[1439,54,1424,56],[1439,57,1424,59],[1439,63,1424,65],[1439,66,1424,68],[1439,73,1424,75],[1440,6,1425,8],[1440,37,1425,39],[1440,39,1425,41,"isOpen"],[1440,45,1425,47],[1440,49,1425,51,"shouldFade"],[1440,59,1425,61],[1440,62,1425,64],[1440,68,1425,70],[1440,71,1425,73],[1440,78,1425,80],[1441,6,1426,8],[1441,25,1426,27],[1441,27,1426,29],[1441,28,1426,30,"shouldAnimate"],[1441,41,1426,43],[1441,45,1426,47],[1441,49,1426,51],[1441,52,1426,54],[1441,57,1426,59],[1441,58,1426,60],[1441,61,1426,63,"shouldAnimate"],[1441,74,1426,76],[1441,75,1426,77,"current"],[1441,82,1426,84],[1441,86,1426,88],[1441,92,1426,94],[1441,95,1426,97],[1442,4,1426,104],[1442,7,1427,11,"rest"],[1442,11,1427,15],[1442,12,1428,5],[1442,13,1428,6],[1443,2,1429,0],[1443,3,1429,1],[1443,4,1429,2],[1444,2,1430,0,"Overlay"],[1444,9,1430,7],[1444,10,1430,8,"displayName"],[1444,21,1430,19],[1444,24,1430,22],[1444,40,1430,38],[1445,2,1431,0],[1445,8,1431,6,"Content"],[1445,15,1431,13],[1445,18,1431,16],[1445,31,1431,30,"React__namespace"],[1445,47,1431,46],[1445,48,1431,47,"default"],[1445,55,1431,54],[1445,56,1431,55,"forwardRef"],[1445,66,1431,65],[1445,67,1431,66],[1445,77,1431,66,"_ref2"],[1445,82,1431,66],[1445,84,1431,134,"ref"],[1445,87,1431,137],[1445,89,1431,139],[1446,4,1431,139],[1446,8,1431,75],[1447,8,1431,77,"onPointerDownOutside"],[1447,28,1431,97],[1448,8,1431,99,"style"],[1448,13,1431,104],[1449,8,1431,106,"onOpenAutoFocus"],[1450,6,1431,131],[1450,7,1431,132],[1450,10,1431,132,"_ref2"],[1450,15,1431,132],[1451,6,1431,126,"rest"],[1451,10,1431,130],[1451,13,1431,130,"_objectWithoutPropertiesLoose"],[1451,42,1431,130],[1451,43,1431,130,"_ref2"],[1451,48,1431,130],[1451,50,1431,130,"_excluded"],[1451,59,1431,130],[1452,4,1432,4],[1452,10,1432,10],[1453,6,1432,12,"drawerRef"],[1453,15,1432,21],[1454,6,1432,23,"onPress"],[1454,13,1432,30],[1455,6,1432,32,"onRelease"],[1455,15,1432,41],[1456,6,1432,43,"onDrag"],[1456,12,1432,49],[1457,6,1432,51,"keyboardIsOpen"],[1457,20,1432,65],[1458,6,1432,67,"snapPointsOffset"],[1458,22,1432,83],[1459,6,1432,85,"activeSnapPointIndex"],[1459,26,1432,105],[1460,6,1432,107,"modal"],[1460,11,1432,112],[1461,6,1432,114,"isOpen"],[1461,12,1432,120],[1462,6,1432,122,"direction"],[1462,15,1432,131],[1463,6,1432,133,"snapPoints"],[1463,16,1432,143],[1464,6,1432,145,"container"],[1464,15,1432,154],[1465,6,1432,156,"handleOnly"],[1465,16,1432,166],[1466,6,1432,168,"shouldAnimate"],[1466,19,1432,181],[1467,6,1432,183,"autoFocus"],[1468,4,1432,193],[1468,5,1432,194],[1468,8,1432,197,"useDrawerContext"],[1468,24,1432,213],[1468,25,1432,214],[1468,26,1432,215],[1469,4,1433,4],[1470,4,1434,4],[1470,10,1434,10],[1470,11,1434,11,"delayedSnapPoints"],[1470,28,1434,28],[1470,30,1434,30,"setDelayedSnapPoints"],[1470,50,1434,50],[1470,51,1434,51],[1470,54,1434,54,"React__namespace"],[1470,70,1434,70],[1470,71,1434,71,"default"],[1470,78,1434,78],[1470,79,1434,79,"useState"],[1470,87,1434,87],[1470,88,1434,88],[1470,93,1434,93],[1470,94,1434,94],[1471,4,1435,4],[1471,10,1435,10,"composedRef"],[1471,21,1435,21],[1471,24,1435,24,"useComposedRefs"],[1471,39,1435,39],[1471,40,1435,40,"ref"],[1471,43,1435,43],[1471,45,1435,45,"drawerRef"],[1471,54,1435,54],[1471,55,1435,55],[1472,4,1436,4],[1472,10,1436,10,"pointerStartRef"],[1472,25,1436,25],[1472,28,1436,28,"React__namespace"],[1472,44,1436,44],[1472,45,1436,45,"default"],[1472,52,1436,52],[1472,53,1436,53,"useRef"],[1472,59,1436,59],[1472,60,1436,60],[1472,64,1436,64],[1472,65,1436,65],[1473,4,1437,4],[1473,10,1437,10,"lastKnownPointerEventRef"],[1473,34,1437,34],[1473,37,1437,37,"React__namespace"],[1473,53,1437,53],[1473,54,1437,54,"default"],[1473,61,1437,61],[1473,62,1437,62,"useRef"],[1473,68,1437,68],[1473,69,1437,69],[1473,73,1437,73],[1473,74,1437,74],[1474,4,1438,4],[1474,10,1438,10,"wasBeyondThePointRef"],[1474,30,1438,30],[1474,33,1438,33,"React__namespace"],[1474,49,1438,49],[1474,50,1438,50,"default"],[1474,57,1438,57],[1474,58,1438,58,"useRef"],[1474,64,1438,64],[1474,65,1438,65],[1474,70,1438,70],[1474,71,1438,71],[1475,4,1439,4],[1475,10,1439,10,"hasSnapPoints"],[1475,23,1439,23],[1475,26,1439,26,"snapPoints"],[1475,36,1439,36],[1475,40,1439,40,"snapPoints"],[1475,50,1439,50],[1475,51,1439,51,"length"],[1475,57,1439,57],[1475,60,1439,60],[1475,61,1439,61],[1476,4,1440,4,"useScaleBackground"],[1476,22,1440,22],[1476,23,1440,23],[1476,24,1440,24],[1477,4,1441,4],[1477,10,1441,10,"isDeltaInDirection"],[1477,28,1441,28],[1477,31,1441,31,"isDeltaInDirection"],[1477,32,1441,32,"delta"],[1477,37,1441,37],[1477,39,1441,39,"direction"],[1477,48,1441,48],[1477,50,1441,50,"threshold"],[1477,59,1441,59],[1477,62,1441,62],[1477,63,1441,63],[1477,68,1441,66],[1478,6,1442,8],[1478,10,1442,12,"wasBeyondThePointRef"],[1478,30,1442,32],[1478,31,1442,33,"current"],[1478,38,1442,40],[1478,40,1442,42],[1478,47,1442,49],[1478,51,1442,53],[1479,6,1443,8],[1479,12,1443,14,"deltaY"],[1479,18,1443,20],[1479,21,1443,23,"Math"],[1479,25,1443,27],[1479,26,1443,28,"abs"],[1479,29,1443,31],[1479,30,1443,32,"delta"],[1479,35,1443,37],[1479,36,1443,38,"y"],[1479,37,1443,39],[1479,38,1443,40],[1480,6,1444,8],[1480,12,1444,14,"deltaX"],[1480,18,1444,20],[1480,21,1444,23,"Math"],[1480,25,1444,27],[1480,26,1444,28,"abs"],[1480,29,1444,31],[1480,30,1444,32,"delta"],[1480,35,1444,37],[1480,36,1444,38,"x"],[1480,37,1444,39],[1480,38,1444,40],[1481,6,1445,8],[1481,12,1445,14,"isDeltaX"],[1481,20,1445,22],[1481,23,1445,25,"deltaX"],[1481,29,1445,31],[1481,32,1445,34,"deltaY"],[1481,38,1445,40],[1482,6,1446,8],[1482,12,1446,14,"dFactor"],[1482,19,1446,21],[1482,22,1446,24],[1482,23,1447,12],[1482,31,1447,20],[1482,33,1448,12],[1482,40,1448,19],[1482,41,1449,9],[1482,42,1449,10,"includes"],[1482,50,1449,18],[1482,51,1449,19,"direction"],[1482,60,1449,28],[1482,61,1449,29],[1482,64,1449,32],[1482,65,1449,33],[1482,68,1449,36],[1482,69,1449,37],[1482,70,1449,38],[1483,6,1450,8],[1483,10,1450,12,"direction"],[1483,19,1450,21],[1483,24,1450,26],[1483,30,1450,32],[1483,34,1450,36,"direction"],[1483,43,1450,45],[1483,48,1450,50],[1483,55,1450,57],[1483,57,1450,59],[1484,8,1451,12],[1484,14,1451,18,"isReverseDirection"],[1484,32,1451,36],[1484,35,1451,39,"delta"],[1484,40,1451,44],[1484,41,1451,45,"x"],[1484,42,1451,46],[1484,45,1451,49,"dFactor"],[1484,52,1451,56],[1484,55,1451,59],[1484,56,1451,60],[1485,8,1452,12],[1485,12,1452,16],[1485,13,1452,17,"isReverseDirection"],[1485,31,1452,35],[1485,35,1452,39,"deltaX"],[1485,41,1452,45],[1485,45,1452,49],[1485,46,1452,50],[1485,50,1452,54,"deltaX"],[1485,56,1452,60],[1485,60,1452,64,"threshold"],[1485,69,1452,73],[1485,71,1452,75],[1486,10,1453,16],[1486,17,1453,23,"isDeltaX"],[1486,25,1453,31],[1487,8,1454,12],[1488,6,1455,8],[1488,7,1455,9],[1488,13,1455,15],[1489,8,1456,12],[1489,14,1456,18,"isReverseDirection"],[1489,32,1456,36],[1489,35,1456,39,"delta"],[1489,40,1456,44],[1489,41,1456,45,"y"],[1489,42,1456,46],[1489,45,1456,49,"dFactor"],[1489,52,1456,56],[1489,55,1456,59],[1489,56,1456,60],[1490,8,1457,12],[1490,12,1457,16],[1490,13,1457,17,"isReverseDirection"],[1490,31,1457,35],[1490,35,1457,39,"deltaY"],[1490,41,1457,45],[1490,45,1457,49],[1490,46,1457,50],[1490,50,1457,54,"deltaY"],[1490,56,1457,60],[1490,60,1457,64,"threshold"],[1490,69,1457,73],[1490,71,1457,75],[1491,10,1458,16],[1491,17,1458,23],[1491,18,1458,24,"isDeltaX"],[1491,26,1458,32],[1492,8,1459,12],[1493,6,1460,8],[1494,6,1461,8,"wasBeyondThePointRef"],[1494,26,1461,28],[1494,27,1461,29,"current"],[1494,34,1461,36],[1494,37,1461,39],[1494,41,1461,43],[1495,6,1462,8],[1495,13,1462,15],[1495,17,1462,19],[1496,4,1463,4],[1496,5,1463,5],[1497,4,1464,4,"React__namespace"],[1497,20,1464,20],[1497,21,1464,21,"default"],[1497,28,1464,28],[1497,29,1464,29,"useEffect"],[1497,38,1464,38],[1497,39,1464,39],[1497,45,1464,43],[1498,6,1465,8],[1498,10,1465,12,"hasSnapPoints"],[1498,23,1465,25],[1498,25,1465,27],[1499,8,1466,12,"window"],[1499,14,1466,18],[1499,15,1466,19,"requestAnimationFrame"],[1499,36,1466,40],[1499,37,1466,41],[1499,43,1466,45],[1500,10,1467,16,"setDelayedSnapPoints"],[1500,30,1467,36],[1500,31,1467,37],[1500,35,1467,41],[1500,36,1467,42],[1501,8,1468,12],[1501,9,1468,13],[1501,10,1468,14],[1502,6,1469,8],[1503,4,1470,4],[1503,5,1470,5],[1503,7,1470,7],[1503,9,1470,9],[1503,10,1470,10],[1504,4,1471,4],[1504,13,1471,13,"handleOnPointerUp"],[1504,30,1471,30,"handleOnPointerUp"],[1504,31,1471,31,"event"],[1504,36,1471,36],[1504,38,1471,38],[1505,6,1472,8,"pointerStartRef"],[1505,21,1472,23],[1505,22,1472,24,"current"],[1505,29,1472,31],[1505,32,1472,34],[1505,36,1472,38],[1506,6,1473,8,"wasBeyondThePointRef"],[1506,26,1473,28],[1506,27,1473,29,"current"],[1506,34,1473,36],[1506,37,1473,39],[1506,42,1473,44],[1507,6,1474,8,"onRelease"],[1507,15,1474,17],[1507,16,1474,18,"event"],[1507,21,1474,23],[1507,22,1474,24],[1508,4,1475,4],[1509,4,1476,4],[1509,11,1476,11],[1509,24,1476,25,"React__namespace"],[1509,40,1476,41],[1509,41,1476,42,"default"],[1509,48,1476,49],[1509,49,1476,50,"createElement"],[1509,62,1476,63],[1509,63,1476,64,"DialogPrimitive__namespace"],[1509,89,1476,90],[1509,90,1476,91,"Content"],[1509,97,1476,98],[1509,99,1476,98,"Object"],[1509,105,1476,98],[1509,106,1476,98,"assign"],[1509,112,1476,98],[1510,6,1477,8],[1510,34,1477,36],[1510,36,1477,38,"direction"],[1510,45,1477,47],[1511,6,1478,8],[1511,24,1478,26],[1511,26,1478,28],[1511,28,1478,30],[1512,6,1479,8],[1512,37,1479,39],[1512,39,1479,41,"delayedSnapPoints"],[1512,56,1479,58],[1512,59,1479,61],[1512,65,1479,67],[1512,68,1479,70],[1512,75,1479,77],[1513,6,1480,8],[1513,29,1480,31],[1513,31,1480,33,"isOpen"],[1513,37,1480,39],[1513,41,1480,43,"hasSnapPoints"],[1513,54,1480,56],[1513,57,1480,59],[1513,63,1480,65],[1513,66,1480,68],[1513,73,1480,75],[1514,6,1481,8],[1514,34,1481,36],[1514,36,1481,38,"container"],[1514,45,1481,47],[1514,48,1481,50],[1514,54,1481,56],[1514,57,1481,59],[1514,64,1481,66],[1515,6,1482,8],[1515,25,1482,27],[1515,27,1482,29],[1515,28,1482,30,"shouldAnimate"],[1515,41,1482,43],[1515,45,1482,47],[1515,49,1482,51],[1515,52,1482,54],[1515,57,1482,59],[1515,58,1482,60],[1515,61,1482,63,"shouldAnimate"],[1515,74,1482,76],[1515,75,1482,77,"current"],[1515,82,1482,84],[1515,86,1482,88],[1515,92,1482,94],[1515,95,1482,97],[1516,4,1482,104],[1516,7,1483,11,"rest"],[1516,11,1483,15],[1517,6,1484,8,"ref"],[1517,9,1484,11],[1517,11,1484,13,"composedRef"],[1517,22,1484,24],[1518,6,1485,8,"style"],[1518,11,1485,13],[1518,13,1485,15,"snapPointsOffset"],[1518,29,1485,31],[1518,33,1485,35,"snapPointsOffset"],[1518,49,1485,51],[1518,50,1485,52,"length"],[1518,56,1485,58],[1518,59,1485,61],[1518,60,1485,62],[1518,63,1485,62,"Object"],[1518,69,1485,62],[1518,70,1485,62,"assign"],[1518,76,1485,62],[1519,8,1486,12],[1519,29,1486,33],[1519,31,1486,35],[1519,34,1486,38,"snapPointsOffset"],[1519,50,1486,54],[1519,51,1486,55,"activeSnapPointIndex"],[1519,71,1486,75],[1519,75,1486,79],[1519,79,1486,83],[1519,82,1486,86,"activeSnapPointIndex"],[1519,102,1486,106],[1519,105,1486,109],[1519,106,1486,110],[1519,107,1486,111],[1520,6,1486,115],[1520,9,1487,15,"style"],[1520,14,1487,20],[1520,18,1488,12,"style"],[1520,23,1488,17],[1521,6,1489,8,"onPointerDown"],[1521,19,1489,21],[1521,21,1489,24,"event"],[1521,26,1489,29],[1521,30,1489,32],[1522,8,1490,12],[1522,12,1490,16,"handleOnly"],[1522,22,1490,26],[1522,24,1490,28],[1523,8,1491,12,"rest"],[1523,12,1491,16],[1523,13,1491,17,"onPointerDown"],[1523,26,1491,30],[1523,30,1491,34],[1523,34,1491,38],[1523,37,1491,41],[1523,42,1491,46],[1523,43,1491,47],[1523,46,1491,50,"rest"],[1523,50,1491,54],[1523,51,1491,55,"onPointerDown"],[1523,64,1491,68],[1523,65,1491,69,"call"],[1523,69,1491,73],[1523,70,1491,74,"rest"],[1523,74,1491,78],[1523,76,1491,80,"event"],[1523,81,1491,85],[1523,82,1491,86],[1524,8,1492,12,"pointerStartRef"],[1524,23,1492,27],[1524,24,1492,28,"current"],[1524,31,1492,35],[1524,34,1492,38],[1525,10,1493,16,"x"],[1525,11,1493,17],[1525,13,1493,19,"event"],[1525,18,1493,24],[1525,19,1493,25,"pageX"],[1525,24,1493,30],[1526,10,1494,16,"y"],[1526,11,1494,17],[1526,13,1494,19,"event"],[1526,18,1494,24],[1526,19,1494,25,"pageY"],[1527,8,1495,12],[1527,9,1495,13],[1528,8,1496,12,"onPress"],[1528,15,1496,19],[1528,16,1496,20,"event"],[1528,21,1496,25],[1528,22,1496,26],[1529,6,1497,8],[1529,7,1497,9],[1530,6,1498,8,"onOpenAutoFocus"],[1530,21,1498,23],[1530,23,1498,26,"e"],[1530,24,1498,27],[1530,28,1498,30],[1531,8,1499,12,"onOpenAutoFocus"],[1531,23,1499,27],[1531,27,1499,31],[1531,31,1499,35],[1531,34,1499,38],[1531,39,1499,43],[1531,40,1499,44],[1531,43,1499,47,"onOpenAutoFocus"],[1531,58,1499,62],[1531,59,1499,63,"e"],[1531,60,1499,64],[1531,61,1499,65],[1532,8,1500,12],[1532,12,1500,16],[1532,13,1500,17,"autoFocus"],[1532,22,1500,26],[1532,24,1500,28],[1533,10,1501,16,"e"],[1533,11,1501,17],[1533,12,1501,18,"preventDefault"],[1533,26,1501,32],[1533,27,1501,33],[1533,28,1501,34],[1534,8,1502,12],[1535,6,1503,8],[1535,7,1503,9],[1536,6,1504,8,"onPointerDownOutside"],[1536,26,1504,28],[1536,28,1504,31,"e"],[1536,29,1504,32],[1536,33,1504,35],[1537,8,1505,12,"onPointerDownOutside"],[1537,28,1505,32],[1537,32,1505,36],[1537,36,1505,40],[1537,39,1505,43],[1537,44,1505,48],[1537,45,1505,49],[1537,48,1505,52,"onPointerDownOutside"],[1537,68,1505,72],[1537,69,1505,73,"e"],[1537,70,1505,74],[1537,71,1505,75],[1538,8,1506,12],[1538,12,1506,16],[1538,13,1506,17,"modal"],[1538,18,1506,22],[1538,22,1506,26,"e"],[1538,23,1506,27],[1538,24,1506,28,"defaultPrevented"],[1538,40,1506,44],[1538,42,1506,46],[1539,10,1507,16,"e"],[1539,11,1507,17],[1539,12,1507,18,"preventDefault"],[1539,26,1507,32],[1539,27,1507,33],[1539,28,1507,34],[1540,10,1508,16],[1541,8,1509,12],[1542,8,1510,12],[1542,12,1510,16,"keyboardIsOpen"],[1542,26,1510,30],[1542,27,1510,31,"current"],[1542,34,1510,38],[1542,36,1510,40],[1543,10,1511,16,"keyboardIsOpen"],[1543,24,1511,30],[1543,25,1511,31,"current"],[1543,32,1511,38],[1543,35,1511,41],[1543,40,1511,46],[1544,8,1512,12],[1545,6,1513,8],[1545,7,1513,9],[1546,6,1514,8,"onFocusOutside"],[1546,20,1514,22],[1546,22,1514,25,"e"],[1546,23,1514,26],[1546,27,1514,29],[1547,8,1515,12],[1547,12,1515,16],[1547,13,1515,17,"modal"],[1547,18,1515,22],[1547,20,1515,24],[1548,10,1516,16,"e"],[1548,11,1516,17],[1548,12,1516,18,"preventDefault"],[1548,26,1516,32],[1548,27,1516,33],[1548,28,1516,34],[1549,10,1517,16],[1550,8,1518,12],[1551,6,1519,8],[1551,7,1519,9],[1552,6,1520,8,"onPointerMove"],[1552,19,1520,21],[1552,21,1520,24,"event"],[1552,26,1520,29],[1552,30,1520,32],[1553,8,1521,12,"lastKnownPointerEventRef"],[1553,32,1521,36],[1553,33,1521,37,"current"],[1553,40,1521,44],[1553,43,1521,47,"event"],[1553,48,1521,52],[1554,8,1522,12],[1554,12,1522,16,"handleOnly"],[1554,22,1522,26],[1554,24,1522,28],[1555,8,1523,12,"rest"],[1555,12,1523,16],[1555,13,1523,17,"onPointerMove"],[1555,26,1523,30],[1555,30,1523,34],[1555,34,1523,38],[1555,37,1523,41],[1555,42,1523,46],[1555,43,1523,47],[1555,46,1523,50,"rest"],[1555,50,1523,54],[1555,51,1523,55,"onPointerMove"],[1555,64,1523,68],[1555,65,1523,69,"call"],[1555,69,1523,73],[1555,70,1523,74,"rest"],[1555,74,1523,78],[1555,76,1523,80,"event"],[1555,81,1523,85],[1555,82,1523,86],[1556,8,1524,12],[1556,12,1524,16],[1556,13,1524,17,"pointerStartRef"],[1556,28,1524,32],[1556,29,1524,33,"current"],[1556,36,1524,40],[1556,38,1524,42],[1557,8,1525,12],[1557,14,1525,18,"yPosition"],[1557,23,1525,27],[1557,26,1525,30,"event"],[1557,31,1525,35],[1557,32,1525,36,"pageY"],[1557,37,1525,41],[1557,40,1525,44,"pointerStartRef"],[1557,55,1525,59],[1557,56,1525,60,"current"],[1557,63,1525,67],[1557,64,1525,68,"y"],[1557,65,1525,69],[1558,8,1526,12],[1558,14,1526,18,"xPosition"],[1558,23,1526,27],[1558,26,1526,30,"event"],[1558,31,1526,35],[1558,32,1526,36,"pageX"],[1558,37,1526,41],[1558,40,1526,44,"pointerStartRef"],[1558,55,1526,59],[1558,56,1526,60,"current"],[1558,63,1526,67],[1558,64,1526,68,"x"],[1558,65,1526,69],[1559,8,1527,12],[1559,14,1527,18,"swipeStartThreshold"],[1559,33,1527,37],[1559,36,1527,40,"event"],[1559,41,1527,45],[1559,42,1527,46,"pointerType"],[1559,53,1527,57],[1559,58,1527,62],[1559,65,1527,69],[1559,68,1527,72],[1559,70,1527,74],[1559,73,1527,77],[1559,74,1527,78],[1560,8,1528,12],[1560,14,1528,18,"delta"],[1560,19,1528,23],[1560,22,1528,26],[1561,10,1529,16,"x"],[1561,11,1529,17],[1561,13,1529,19,"xPosition"],[1561,22,1529,28],[1562,10,1530,16,"y"],[1562,11,1530,17],[1562,13,1530,19,"yPosition"],[1563,8,1531,12],[1563,9,1531,13],[1564,8,1532,12],[1564,14,1532,18,"isAllowedToSwipe"],[1564,30,1532,34],[1564,33,1532,37,"isDeltaInDirection"],[1564,51,1532,55],[1564,52,1532,56,"delta"],[1564,57,1532,61],[1564,59,1532,63,"direction"],[1564,68,1532,72],[1564,70,1532,74,"swipeStartThreshold"],[1564,89,1532,93],[1564,90,1532,94],[1565,8,1533,12],[1565,12,1533,16,"isAllowedToSwipe"],[1565,28,1533,32],[1565,30,1533,34,"onDrag"],[1565,36,1533,40],[1565,37,1533,41,"event"],[1565,42,1533,46],[1565,43,1533,47],[1565,44,1533,48],[1565,49,1534,17],[1565,53,1534,21,"Math"],[1565,57,1534,25],[1565,58,1534,26,"abs"],[1565,61,1534,29],[1565,62,1534,30,"xPosition"],[1565,71,1534,39],[1565,72,1534,40],[1565,75,1534,43,"swipeStartThreshold"],[1565,94,1534,62],[1565,98,1534,66,"Math"],[1565,102,1534,70],[1565,103,1534,71,"abs"],[1565,106,1534,74],[1565,107,1534,75,"yPosition"],[1565,116,1534,84],[1565,117,1534,85],[1565,120,1534,88,"swipeStartThreshold"],[1565,139,1534,107],[1565,141,1534,109],[1566,10,1535,16,"pointerStartRef"],[1566,25,1535,31],[1566,26,1535,32,"current"],[1566,33,1535,39],[1566,36,1535,42],[1566,40,1535,46],[1567,8,1536,12],[1568,6,1537,8],[1568,7,1537,9],[1569,6,1538,8,"onPointerUp"],[1569,17,1538,19],[1569,19,1538,22,"event"],[1569,24,1538,27],[1569,28,1538,30],[1570,8,1539,12,"rest"],[1570,12,1539,16],[1570,13,1539,17,"onPointerUp"],[1570,24,1539,28],[1570,28,1539,32],[1570,32,1539,36],[1570,35,1539,39],[1570,40,1539,44],[1570,41,1539,45],[1570,44,1539,48,"rest"],[1570,48,1539,52],[1570,49,1539,53,"onPointerUp"],[1570,60,1539,64],[1570,61,1539,65,"call"],[1570,65,1539,69],[1570,66,1539,70,"rest"],[1570,70,1539,74],[1570,72,1539,76,"event"],[1570,77,1539,81],[1570,78,1539,82],[1571,8,1540,12,"pointerStartRef"],[1571,23,1540,27],[1571,24,1540,28,"current"],[1571,31,1540,35],[1571,34,1540,38],[1571,38,1540,42],[1572,8,1541,12,"wasBeyondThePointRef"],[1572,28,1541,32],[1572,29,1541,33,"current"],[1572,36,1541,40],[1572,39,1541,43],[1572,44,1541,48],[1573,8,1542,12,"onRelease"],[1573,17,1542,21],[1573,18,1542,22,"event"],[1573,23,1542,27],[1573,24,1542,28],[1574,6,1543,8],[1574,7,1543,9],[1575,6,1544,8,"onPointerOut"],[1575,18,1544,20],[1575,20,1544,23,"event"],[1575,25,1544,28],[1575,29,1544,31],[1576,8,1545,12,"rest"],[1576,12,1545,16],[1576,13,1545,17,"onPointerOut"],[1576,25,1545,29],[1576,29,1545,33],[1576,33,1545,37],[1576,36,1545,40],[1576,41,1545,45],[1576,42,1545,46],[1576,45,1545,49,"rest"],[1576,49,1545,53],[1576,50,1545,54,"onPointerOut"],[1576,62,1545,66],[1576,63,1545,67,"call"],[1576,67,1545,71],[1576,68,1545,72,"rest"],[1576,72,1545,76],[1576,74,1545,78,"event"],[1576,79,1545,83],[1576,80,1545,84],[1577,8,1546,12,"handleOnPointerUp"],[1577,25,1546,29],[1577,26,1546,30,"lastKnownPointerEventRef"],[1577,50,1546,54],[1577,51,1546,55,"current"],[1577,58,1546,62],[1577,59,1546,63],[1578,6,1547,8],[1578,7,1547,9],[1579,6,1548,8,"onContextMenu"],[1579,19,1548,21],[1579,21,1548,24,"event"],[1579,26,1548,29],[1579,30,1548,32],[1580,8,1549,12,"rest"],[1580,12,1549,16],[1580,13,1549,17,"onContextMenu"],[1580,26,1549,30],[1580,30,1549,34],[1580,34,1549,38],[1580,37,1549,41],[1580,42,1549,46],[1580,43,1549,47],[1580,46,1549,50,"rest"],[1580,50,1549,54],[1580,51,1549,55,"onContextMenu"],[1580,64,1549,68],[1580,65,1549,69,"call"],[1580,69,1549,73],[1580,70,1549,74,"rest"],[1580,74,1549,78],[1580,76,1549,80,"event"],[1580,81,1549,85],[1580,82,1549,86],[1581,8,1550,12],[1581,12,1550,16,"lastKnownPointerEventRef"],[1581,36,1550,40],[1581,37,1550,41,"current"],[1581,44,1550,48],[1581,46,1550,50],[1582,10,1551,16,"handleOnPointerUp"],[1582,27,1551,33],[1582,28,1551,34,"lastKnownPointerEventRef"],[1582,52,1551,58],[1582,53,1551,59,"current"],[1582,60,1551,66],[1582,61,1551,67],[1583,8,1552,12],[1584,6,1553,8],[1585,4,1553,9],[1585,6,1554,5],[1585,7,1554,6],[1586,2,1555,0],[1586,3,1555,1],[1586,4,1555,2],[1587,2,1556,0,"Content"],[1587,9,1556,7],[1587,10,1556,8,"displayName"],[1587,21,1556,19],[1587,24,1556,22],[1587,40,1556,38],[1588,2,1557,0],[1588,8,1557,6,"LONG_HANDLE_PRESS_TIMEOUT"],[1588,33,1557,31],[1588,36,1557,34],[1588,39,1557,37],[1589,2,1558,0],[1589,8,1558,6,"DOUBLE_TAP_TIMEOUT"],[1589,26,1558,24],[1589,29,1558,27],[1589,32,1558,30],[1590,2,1559,0],[1590,8,1559,6,"Handle"],[1590,14,1559,12],[1590,17,1559,15],[1590,30,1559,29,"React__namespace"],[1590,46,1559,45],[1590,47,1559,46,"default"],[1590,54,1559,53],[1590,55,1559,54,"forwardRef"],[1590,65,1559,64],[1590,66,1559,65],[1590,76,1559,65,"_ref3"],[1590,81,1559,65],[1590,83,1559,119,"ref"],[1590,86,1559,122],[1590,88,1559,124],[1591,4,1559,124],[1591,8,1559,74],[1592,8,1559,76,"preventCycle"],[1592,20,1559,88],[1592,23,1559,91],[1592,28,1559,96],[1593,8,1559,98,"children"],[1594,6,1559,116],[1594,7,1559,117],[1594,10,1559,117,"_ref3"],[1594,15,1559,117],[1595,6,1559,111,"rest"],[1595,10,1559,115],[1595,13,1559,115,"_objectWithoutPropertiesLoose"],[1595,42,1559,115],[1595,43,1559,115,"_ref3"],[1595,48,1559,115],[1595,50,1559,115,"_excluded2"],[1595,60,1559,115],[1596,4,1560,4],[1596,10,1560,10],[1597,6,1560,12,"closeDrawer"],[1597,17,1560,23],[1598,6,1560,25,"isDragging"],[1598,16,1560,35],[1599,6,1560,37,"snapPoints"],[1599,16,1560,47],[1600,6,1560,49,"activeSnapPoint"],[1600,21,1560,64],[1601,6,1560,66,"setActiveSnapPoint"],[1601,24,1560,84],[1602,6,1560,86,"dismissible"],[1602,17,1560,97],[1603,6,1560,99,"handleOnly"],[1603,16,1560,109],[1604,6,1560,111,"isOpen"],[1604,12,1560,117],[1605,6,1560,119,"onPress"],[1605,13,1560,126],[1606,6,1560,128,"onDrag"],[1607,4,1560,135],[1607,5,1560,136],[1607,8,1560,139,"useDrawerContext"],[1607,24,1560,155],[1607,25,1560,156],[1607,26,1560,157],[1608,4,1561,4],[1608,10,1561,10,"closeTimeoutIdRef"],[1608,27,1561,27],[1608,30,1561,30,"React__namespace"],[1608,46,1561,46],[1608,47,1561,47,"default"],[1608,54,1561,54],[1608,55,1561,55,"useRef"],[1608,61,1561,61],[1608,62,1561,62],[1608,66,1561,66],[1608,67,1561,67],[1609,4,1562,4],[1609,10,1562,10,"shouldCancelInteractionRef"],[1609,36,1562,36],[1609,39,1562,39,"React__namespace"],[1609,55,1562,55],[1609,56,1562,56,"default"],[1609,63,1562,63],[1609,64,1562,64,"useRef"],[1609,70,1562,70],[1609,71,1562,71],[1609,76,1562,76],[1609,77,1562,77],[1610,4,1563,4],[1610,13,1563,13,"handleStartCycle"],[1610,29,1563,29,"handleStartCycle"],[1610,30,1563,29],[1610,32,1563,32],[1611,6,1564,8],[1612,6,1565,8],[1612,10,1565,12,"shouldCancelInteractionRef"],[1612,36,1565,38],[1612,37,1565,39,"current"],[1612,44,1565,46],[1612,46,1565,48],[1613,8,1566,12,"handleCancelInteraction"],[1613,31,1566,35],[1613,32,1566,36],[1613,33,1566,37],[1614,8,1567,12],[1615,6,1568,8],[1616,6,1569,8,"window"],[1616,12,1569,14],[1616,13,1569,15,"setTimeout"],[1616,23,1569,25],[1616,24,1569,26],[1616,30,1569,30],[1617,8,1570,12,"handleCycleSnapPoints"],[1617,29,1570,33],[1617,30,1570,34],[1617,31,1570,35],[1618,6,1571,8],[1618,7,1571,9],[1618,9,1571,11,"DOUBLE_TAP_TIMEOUT"],[1618,27,1571,29],[1618,28,1571,30],[1619,4,1572,4],[1620,4,1573,4],[1620,13,1573,13,"handleCycleSnapPoints"],[1620,34,1573,34,"handleCycleSnapPoints"],[1620,35,1573,34],[1620,37,1573,37],[1621,6,1574,8],[1622,6,1575,8],[1622,10,1575,12,"isDragging"],[1622,20,1575,22],[1622,24,1575,26,"preventCycle"],[1622,36,1575,38],[1622,40,1575,42,"shouldCancelInteractionRef"],[1622,66,1575,68],[1622,67,1575,69,"current"],[1622,74,1575,76],[1622,76,1575,78],[1623,8,1576,12,"handleCancelInteraction"],[1623,31,1576,35],[1623,32,1576,36],[1623,33,1576,37],[1624,8,1577,12],[1625,6,1578,8],[1626,6,1579,8],[1627,6,1580,8,"handleCancelInteraction"],[1627,29,1580,31],[1627,30,1580,32],[1627,31,1580,33],[1628,6,1581,8],[1628,10,1581,12],[1628,11,1581,13,"snapPoints"],[1628,21,1581,23],[1628,25,1581,27,"snapPoints"],[1628,35,1581,37],[1628,36,1581,38,"length"],[1628,42,1581,44],[1628,47,1581,49],[1628,48,1581,50],[1628,50,1581,52],[1629,8,1582,12],[1629,12,1582,16],[1629,13,1582,17,"dismissible"],[1629,24,1582,28],[1629,26,1582,30],[1630,10,1583,16,"closeDrawer"],[1630,21,1583,27],[1630,22,1583,28],[1630,23,1583,29],[1631,8,1584,12],[1632,8,1585,12],[1633,6,1586,8],[1634,6,1587,8],[1634,12,1587,14,"isLastSnapPoint"],[1634,27,1587,29],[1634,30,1587,32,"activeSnapPoint"],[1634,45,1587,47],[1634,50,1587,52,"snapPoints"],[1634,60,1587,62],[1634,61,1587,63,"snapPoints"],[1634,71,1587,73],[1634,72,1587,74,"length"],[1634,78,1587,80],[1634,81,1587,83],[1634,82,1587,84],[1634,83,1587,85],[1635,6,1588,8],[1635,10,1588,12,"isLastSnapPoint"],[1635,25,1588,27],[1635,29,1588,31,"dismissible"],[1635,40,1588,42],[1635,42,1588,44],[1636,8,1589,12,"closeDrawer"],[1636,19,1589,23],[1636,20,1589,24],[1636,21,1589,25],[1637,8,1590,12],[1638,6,1591,8],[1639,6,1592,8],[1639,12,1592,14,"currentSnapIndex"],[1639,28,1592,30],[1639,31,1592,33,"snapPoints"],[1639,41,1592,43],[1639,42,1592,44,"findIndex"],[1639,51,1592,53],[1639,52,1592,55,"point"],[1639,57,1592,60],[1639,61,1592,63,"point"],[1639,66,1592,68],[1639,71,1592,73,"activeSnapPoint"],[1639,86,1592,88],[1639,87,1592,89],[1640,6,1593,8],[1640,10,1593,12,"currentSnapIndex"],[1640,26,1593,28],[1640,31,1593,33],[1640,32,1593,34],[1640,33,1593,35],[1640,35,1593,37],[1640,42,1593,44],[1640,43,1593,45],[1641,6,1594,8],[1641,12,1594,14,"nextSnapPoint"],[1641,25,1594,27],[1641,28,1594,30,"snapPoints"],[1641,38,1594,40],[1641,39,1594,41,"currentSnapIndex"],[1641,55,1594,57],[1641,58,1594,60],[1641,59,1594,61],[1641,60,1594,62],[1642,6,1595,8,"setActiveSnapPoint"],[1642,24,1595,26],[1642,25,1595,27,"nextSnapPoint"],[1642,38,1595,40],[1642,39,1595,41],[1643,4,1596,4],[1644,4,1597,4],[1644,13,1597,13,"handleStartInteraction"],[1644,35,1597,35,"handleStartInteraction"],[1644,36,1597,35],[1644,38,1597,38],[1645,6,1598,8,"closeTimeoutIdRef"],[1645,23,1598,25],[1645,24,1598,26,"current"],[1645,31,1598,33],[1645,34,1598,36,"window"],[1645,40,1598,42],[1645,41,1598,43,"setTimeout"],[1645,51,1598,53],[1645,52,1598,54],[1645,58,1598,58],[1646,8,1599,12],[1647,8,1600,12,"shouldCancelInteractionRef"],[1647,34,1600,38],[1647,35,1600,39,"current"],[1647,42,1600,46],[1647,45,1600,49],[1647,49,1600,53],[1648,6,1601,8],[1648,7,1601,9],[1648,9,1601,11,"LONG_HANDLE_PRESS_TIMEOUT"],[1648,34,1601,36],[1648,35,1601,37],[1649,4,1602,4],[1650,4,1603,4],[1650,13,1603,13,"handleCancelInteraction"],[1650,36,1603,36,"handleCancelInteraction"],[1650,37,1603,36],[1650,39,1603,39],[1651,6,1604,8],[1651,10,1604,12,"closeTimeoutIdRef"],[1651,27,1604,29],[1651,28,1604,30,"current"],[1651,35,1604,37],[1651,37,1604,39],[1652,8,1605,12,"window"],[1652,14,1605,18],[1652,15,1605,19,"clearTimeout"],[1652,27,1605,31],[1652,28,1605,32,"closeTimeoutIdRef"],[1652,45,1605,49],[1652,46,1605,50,"current"],[1652,53,1605,57],[1652,54,1605,58],[1653,6,1606,8],[1654,6,1607,8,"shouldCancelInteractionRef"],[1654,32,1607,34],[1654,33,1607,35,"current"],[1654,40,1607,42],[1654,43,1607,45],[1654,48,1607,50],[1655,4,1608,4],[1656,4,1609,4],[1656,11,1609,11],[1656,24,1609,25,"React__namespace"],[1656,40,1609,41],[1656,41,1609,42,"default"],[1656,48,1609,49],[1656,49,1609,50,"createElement"],[1656,62,1609,63],[1656,63,1609,64],[1656,68,1609,69],[1656,70,1609,69,"Object"],[1656,76,1609,69],[1656,77,1609,69,"assign"],[1656,83,1609,69],[1657,6,1610,8,"onClick"],[1657,13,1610,15],[1657,15,1610,17,"handleStartCycle"],[1657,31,1610,33],[1658,6,1611,8,"onPointerCancel"],[1658,21,1611,23],[1658,23,1611,25,"handleCancelInteraction"],[1658,46,1611,48],[1659,6,1612,8,"onPointerDown"],[1659,19,1612,21],[1659,21,1612,24,"e"],[1659,22,1612,25],[1659,26,1612,28],[1660,8,1613,12],[1660,12,1613,16,"handleOnly"],[1660,22,1613,26],[1660,24,1613,28,"onPress"],[1660,31,1613,35],[1660,32,1613,36,"e"],[1660,33,1613,37],[1660,34,1613,38],[1661,8,1614,12,"handleStartInteraction"],[1661,30,1614,34],[1661,31,1614,35],[1661,32,1614,36],[1662,6,1615,8],[1662,7,1615,9],[1663,6,1616,8,"onPointerMove"],[1663,19,1616,21],[1663,21,1616,24,"e"],[1663,22,1616,25],[1663,26,1616,28],[1664,8,1617,12],[1664,12,1617,16,"handleOnly"],[1664,22,1617,26],[1664,24,1617,28,"onDrag"],[1664,30,1617,34],[1664,31,1617,35,"e"],[1664,32,1617,36],[1664,33,1617,37],[1665,6,1618,8],[1665,7,1618,9],[1666,6,1619,8],[1667,6,1620,8,"ref"],[1667,9,1620,11],[1667,11,1620,13,"ref"],[1667,14,1620,16],[1668,6,1621,8],[1668,32,1621,34],[1668,34,1621,36,"isOpen"],[1668,40,1621,42],[1668,43,1621,45],[1668,49,1621,51],[1668,52,1621,54],[1668,59,1621,61],[1669,6,1622,8],[1669,24,1622,26],[1669,26,1622,28],[1669,28,1622,30],[1670,6,1623,8],[1670,19,1623,21],[1670,21,1623,23],[1671,4,1623,29],[1671,7,1624,11,"rest"],[1671,11,1624,15],[1671,14,1625,7],[1671,27,1625,21,"React__namespace"],[1671,43,1625,37],[1671,44,1625,38,"default"],[1671,51,1625,45],[1671,52,1625,46,"createElement"],[1671,65,1625,59],[1671,66,1625,60],[1671,72,1625,66],[1671,74,1625,68],[1672,6,1626,8],[1672,32,1626,34],[1672,34,1626,36],[1672,36,1626,38],[1673,6,1627,8],[1673,19,1627,21],[1673,21,1627,23],[1674,4,1628,4],[1674,5,1628,5],[1674,7,1628,7,"children"],[1674,15,1628,15],[1674,16,1628,16],[1674,17,1628,17],[1675,2,1629,0],[1675,3,1629,1],[1675,4,1629,2],[1676,2,1630,0,"Handle"],[1676,8,1630,6],[1676,9,1630,7,"displayName"],[1676,20,1630,18],[1676,23,1630,21],[1676,38,1630,36],[1677,2,1631,0],[1677,11,1631,9,"NestedRoot"],[1677,21,1631,19,"NestedRoot"],[1677,22,1631,19,"_ref4"],[1677,27,1631,19],[1677,29,1631,75],[1678,4,1631,75],[1678,8,1631,20],[1679,8,1631,22,"onDrag"],[1679,14,1631,28],[1680,8,1631,30,"onOpenChange"],[1680,20,1631,42],[1681,8,1631,44,"open"],[1681,12,1631,48],[1681,14,1631,50,"nestedIsOpen"],[1682,6,1631,72],[1682,7,1631,73],[1682,10,1631,73,"_ref4"],[1682,15,1631,73],[1683,6,1631,67,"rest"],[1683,10,1631,71],[1683,13,1631,71,"_objectWithoutPropertiesLoose"],[1683,42,1631,71],[1683,43,1631,71,"_ref4"],[1683,48,1631,71],[1683,50,1631,71,"_excluded3"],[1683,60,1631,71],[1684,4,1632,4],[1684,10,1632,10],[1685,6,1632,12,"onNestedDrag"],[1685,18,1632,24],[1686,6,1632,26,"onNestedOpenChange"],[1686,24,1632,44],[1687,6,1632,46,"onNestedRelease"],[1688,4,1632,62],[1688,5,1632,63],[1688,8,1632,66,"useDrawerContext"],[1688,24,1632,82],[1688,25,1632,83],[1688,26,1632,84],[1689,4,1633,4],[1689,8,1633,8],[1689,9,1633,9,"onNestedDrag"],[1689,21,1633,21],[1689,23,1633,23],[1690,6,1634,8],[1690,12,1634,14],[1690,16,1634,18,"Error"],[1690,21,1634,23],[1690,22,1634,24],[1690,74,1634,76],[1690,75,1634,77],[1691,4,1635,4],[1692,4,1636,4],[1692,11,1636,11],[1692,24,1636,25,"React__namespace"],[1692,40,1636,41],[1692,41,1636,42,"default"],[1692,48,1636,49],[1692,49,1636,50,"createElement"],[1692,62,1636,63],[1692,63,1636,64,"Root"],[1692,67,1636,68],[1692,69,1636,68,"Object"],[1692,75,1636,68],[1692,76,1636,68,"assign"],[1692,82,1636,68],[1693,6,1637,8,"nested"],[1693,12,1637,14],[1693,14,1637,16],[1693,18,1637,20],[1694,6,1638,8,"open"],[1694,10,1638,12],[1694,12,1638,14,"nestedIsOpen"],[1694,24,1638,26],[1695,6,1639,8,"onClose"],[1695,13,1639,15],[1695,15,1639,17,"onClose"],[1695,16,1639,17],[1695,21,1639,21],[1696,8,1640,12,"onNestedOpenChange"],[1696,26,1640,30],[1696,27,1640,31],[1696,32,1640,36],[1696,33,1640,37],[1697,6,1641,8],[1697,7,1641,9],[1698,6,1642,8,"onDrag"],[1698,12,1642,14],[1698,14,1642,16,"onDrag"],[1698,15,1642,17,"e"],[1698,16,1642,18],[1698,18,1642,20,"p"],[1698,19,1642,21],[1698,24,1642,24],[1699,8,1643,12,"onNestedDrag"],[1699,20,1643,24],[1699,21,1643,25,"e"],[1699,22,1643,26],[1699,24,1643,28,"p"],[1699,25,1643,29],[1699,26,1643,30],[1700,8,1644,12,"onDrag"],[1700,14,1644,18],[1700,18,1644,22],[1700,22,1644,26],[1700,25,1644,29],[1700,30,1644,34],[1700,31,1644,35],[1700,34,1644,38,"onDrag"],[1700,40,1644,44],[1700,41,1644,45,"e"],[1700,42,1644,46],[1700,44,1644,48,"p"],[1700,45,1644,49],[1700,46,1644,50],[1701,6,1645,8],[1701,7,1645,9],[1702,6,1646,8,"onOpenChange"],[1702,18,1646,20],[1702,20,1646,23,"o"],[1702,21,1646,24],[1702,25,1646,27],[1703,8,1647,12],[1703,12,1647,16,"o"],[1703,13,1647,17],[1703,15,1647,19],[1704,10,1648,16,"onNestedOpenChange"],[1704,28,1648,34],[1704,29,1648,35,"o"],[1704,30,1648,36],[1704,31,1648,37],[1705,8,1649,12],[1706,8,1650,12,"onOpenChange"],[1706,20,1650,24],[1706,24,1650,28],[1706,28,1650,32],[1706,31,1650,35],[1706,36,1650,40],[1706,37,1650,41],[1706,40,1650,44,"onOpenChange"],[1706,52,1650,56],[1706,53,1650,57,"o"],[1706,54,1650,58],[1706,55,1650,59],[1707,6,1651,8],[1707,7,1651,9],[1708,6,1652,8,"onRelease"],[1708,15,1652,17],[1708,17,1652,19,"onNestedRelease"],[1709,4,1652,34],[1709,7,1653,11,"rest"],[1709,11,1653,15],[1709,12,1654,5],[1709,13,1654,6],[1710,2,1655,0],[1711,2,1656,0],[1711,11,1656,9,"Portal"],[1711,17,1656,15,"Portal"],[1711,18,1656,16,"props"],[1711,23,1656,21],[1711,25,1656,23],[1712,4,1657,4],[1712,10,1657,10,"context"],[1712,17,1657,17],[1712,20,1657,20,"useDrawerContext"],[1712,36,1657,36],[1712,37,1657,37],[1712,38,1657,38],[1713,4,1658,4],[1713,10,1658,10],[1714,8,1658,12,"container"],[1714,17,1658,21],[1714,20,1658,24,"context"],[1714,27,1658,31],[1714,28,1658,32,"container"],[1715,6,1658,58],[1715,7,1658,59],[1715,10,1658,62,"props"],[1715,15,1658,67],[1716,6,1658,46,"portalProps"],[1716,17,1658,57],[1716,20,1658,57,"_objectWithoutPropertiesLoose"],[1716,49,1658,57],[1716,50,1658,62,"props"],[1716,55,1658,67],[1716,57,1658,67,"_excluded4"],[1716,67,1658,67],[1717,4,1659,4],[1717,11,1659,11],[1717,24,1659,25,"React__namespace"],[1717,40,1659,41],[1717,41,1659,42,"default"],[1717,48,1659,49],[1717,49,1659,50,"createElement"],[1717,62,1659,63],[1717,63,1659,64,"DialogPrimitive__namespace"],[1717,89,1659,90],[1717,90,1659,91,"Portal"],[1717,96,1659,97],[1717,98,1659,97,"Object"],[1717,104,1659,97],[1717,105,1659,97,"assign"],[1717,111,1659,97],[1718,6,1660,8,"container"],[1718,15,1660,17],[1718,17,1660,19,"container"],[1719,4,1660,28],[1719,7,1661,11,"portalProps"],[1719,18,1661,22],[1719,19,1662,5],[1719,20,1662,6],[1720,2,1663,0],[1721,2,1664,0],[1721,8,1664,6,"Drawer"],[1721,14,1664,12],[1721,17,1664,15],[1722,4,1665,4,"Root"],[1722,8,1665,8],[1723,4,1666,4,"NestedRoot"],[1723,14,1666,14],[1724,4,1667,4,"Content"],[1724,11,1667,11],[1725,4,1668,4,"Overlay"],[1725,11,1668,11],[1726,4,1669,4,"Trigger"],[1726,11,1669,11],[1726,13,1669,13,"DialogPrimitive__namespace"],[1726,39,1669,39],[1726,40,1669,40,"Trigger"],[1726,47,1669,47],[1727,4,1670,4,"Portal"],[1727,10,1670,10],[1728,4,1671,4,"Handle"],[1728,10,1671,10],[1729,4,1672,4,"Close"],[1729,9,1672,9],[1729,11,1672,11,"DialogPrimitive__namespace"],[1729,37,1672,37],[1729,38,1672,38,"Close"],[1729,43,1672,43],[1730,4,1673,4,"Title"],[1730,9,1673,9],[1730,11,1673,11,"DialogPrimitive__namespace"],[1730,37,1673,37],[1730,38,1673,38,"Title"],[1730,43,1673,43],[1731,4,1674,4,"Description"],[1731,15,1674,15],[1731,17,1674,17,"DialogPrimitive__namespace"],[1731,43,1674,43],[1731,44,1674,44,"Description"],[1732,2,1675,0],[1732,3,1675,1],[1733,2,1677,0,"exports"],[1733,9,1677,7],[1733,10,1677,8,"Content"],[1733,17,1677,15],[1733,20,1677,18,"Content"],[1733,27,1677,25],[1734,2,1678,0,"exports"],[1734,9,1678,7],[1734,10,1678,8,"Drawer"],[1734,16,1678,14],[1734,19,1678,17,"Drawer"],[1734,25,1678,23],[1735,2,1679,0,"exports"],[1735,9,1679,7],[1735,10,1679,8,"Handle"],[1735,16,1679,14],[1735,19,1679,17,"Handle"],[1735,25,1679,23],[1736,2,1680,0,"exports"],[1736,9,1680,7],[1736,10,1680,8,"NestedRoot"],[1736,20,1680,18],[1736,23,1680,21,"NestedRoot"],[1736,33,1680,31],[1737,2,1681,0,"exports"],[1737,9,1681,7],[1737,10,1681,8,"Overlay"],[1737,17,1681,15],[1737,20,1681,18,"Overlay"],[1737,27,1681,25],[1738,2,1682,0,"exports"],[1738,9,1682,7],[1738,10,1682,8,"Portal"],[1738,16,1682,14],[1738,19,1682,17,"Portal"],[1738,25,1682,23],[1739,2,1683,0,"exports"],[1739,9,1683,7],[1739,10,1683,8,"Root"],[1739,14,1683,12],[1739,17,1683,15,"Root"],[1739,21,1683,19],[1740,0,1683,20],[1740,3]],"functionMap":{"names":["<global>","__insertCSS","_interopNamespace","Object.keys.forEach$argument_0","get","React__namespace._default.createContext$argument_0.onPress","React__namespace._default.createContext$argument_0.onRelease","React__namespace._default.createContext$argument_0.onDrag","React__namespace._default.createContext$argument_0.onNestedDrag","React__namespace._default.createContext$argument_0.onNestedOpenChange","React__namespace._default.createContext$argument_0.onNestedRelease","React__namespace._default.createContext$argument_0.onOpenChange","React__namespace._default.createContext$argument_0.setActiveSnapPoint","React__namespace._default.createContext$argument_0.closeDrawer","useDrawerContext","isMobileFirefox","isMac","isIPhone","isSafari","isIPad","isIOS","testPlatform","chain$1","<anonymous>","isScrollable","getScrollParent","usePreventScroll","useIsomorphicLayoutEffect$argument_0","preventScrollMobileSafari","onTouchStart","onTouchMove","onTouchEnd","requestAnimationFrame$argument_0","onFocus","visualViewport.addEventListener$argument_1","onWindowScroll","setStyle","addEvent","scrollIntoView","isInput","setRef","composeRefs","refs.forEach$argument_0","useComposedRefs","set","Object.entries.forEach$argument_0","reset","isVertical","getTranslate","dampenValue","assignStyle","chain","useCallbackRef","React__namespace._default.useEffect$argument_0","React__namespace._default.useMemo$argument_0","useUncontrolledState","useControllableState","React__namespace._default.useCallback$argument_0","useSnapPoints","onResize","snapPoints.findIndex$argument_0","snapPoints.map$argument_0","snapPointsOffset.findIndex$argument_0","onRelease","snapPointsOffset.reduce$argument_0","onDrag","getPercentageDragged","noop","useScaleBackground","React.useMemo$argument_0","getScale","window.setTimeout$argument_0","usePositionFixed","React__namespace._default.useState$argument_0","window.requestAnimationFrame$argument_0","onScroll","Root","useControllableState$argument_0.onChange","setTimeout$argument_0","onPress","window.addEventListener$argument_1","shouldDrag","onVisualViewportChange","closeDrawer","resetDrawer","cancelDrag","onNestedOpenChange","onNestedDrag","onNestedRelease","React__namespace._default.createElement$argument_1.onOpenChange","React__namespace._default.forwardRef$argument_0","isDeltaInDirection","handleOnPointerUp","React__namespace._default.createElement$argument_1.onPointerDown","React__namespace._default.createElement$argument_1.onOpenAutoFocus","React__namespace._default.createElement$argument_1.onPointerDownOutside","React__namespace._default.createElement$argument_1.onFocusOutside","React__namespace._default.createElement$argument_1.onPointerMove","React__namespace._default.createElement$argument_1.onPointerUp","React__namespace._default.createElement$argument_1.onPointerOut","React__namespace._default.createElement$argument_1.onContextMenu","handleStartCycle","handleCycleSnapPoints","handleStartInteraction","handleCancelInteraction","NestedRoot","React__namespace._default.createElement$argument_1.onClose","React__namespace._default.createElement$argument_1.onDrag","Portal"],"mappings":"AAA;ACC;CDO;AEO;2BCI;eCK,4BD;KDG;CFI;aKY,ML;eMC,MN;YOC,MP;kBQC,MR;wBSC,MT;qBUC,MV;kBWc,MX;wBYC,MZ;iBaC,Mb;yBcW;CdM;AeI;CfK;AgBC;ChBE;AiBC;CjBE;AkBC;ClBE;AmBC;CnBG;AoBC;CpBE;AqBC;CrBE;AsBK;WCC;KDM;CtBC;AwBG;CxBG;AyBC;CzBQ;I0BoB;8BCE;eJU;SIK;KDC;C1BG;A4B2B;uBCG;KDO;sBEC;KFoB;qBGC;kCCU;aDE;KHE;kBKC;kCDQ;kEEc,0BF;aCK;KLE;yBOC;KPI;WLmB;KKK;C5BC;AoCE;WbM;KaG;CpCC;AqCE;WdG;KcG;CrCC;AsCC;CtCkB;AuCC;CvCE;IwCM;CxCM;IyCI;WlBC,qBmB,wBnB,CkB;CzCC;I2CI;C3CG;A4CG;mCCG;KDO;C5CG;A8CC;C9CS;mB+CC;C/CW;AgDC;ChDe;AiDC;CjDE;AkDC;yB3BC,M2B;W3BG;K2BE;ClDC;ImDG;W5BC;K4BO;CnDC;AoDoB;uCCE;KDE;4CEE,I/B,gG6B;CpDC;AuDC;uCFK;KEK;CvDM;AwDC,8DjC,MiC;0DCQ;KDQ;CxDU;A0DE;uCLU;QMC;SNK;e9BE,kD8B;KKC;6DJC,iGI;kEJI;2FME,0CN;KIC;8DJK;+EOY;SPkB;KIC;mEJK,qHI;6DDI;gIKE,0CL;KCkB;uCLQ;yGOG,+EP;KKK;IKO;6FCqB;SDG;KLiB;IOC;KPa;IQC;KRqB;C1DY;amEE,I5C,MvB;AoEC;iDCG,uCD;IEC;KFE;uCfC;mB9BsB;yDgDE;iBhDM;a8BC;KeE;CpEK;IwEU;wECC,6DD;kEfE;8BcqB,iCG;iBHO,Cd;KeE;wEfG;yCiBS;ajBM;KeG;uCnBG;QsBC;StBE;e9BG;S8BE;KmBC;uCnBC;e9BE;S8BM;KmBC;uCnBI;kCkBQ;iBlBE;KmBK;CxEY;A4EE;kBCK;uBCK;aDE;iDHG;qBGE;SDO;mEnBoB;KmBG;INwB;KME;IGC;gDCU,mCD;KHO;IKC;KLyD;IXC;KW6E;uCvBC;qCqBC;SrBE;KuBC;uCvBC;Q6BE;S7BgD;e9BE;S8BG;KuBC;IOK;mBLM;SKI;KPC;IQC;KR6B;ISC;KTM;IbC;uBee;afE;KaoC;uCvBC;e9BQ;S8BE;KuBC;IUG;uDRW;aQM;KVE;IWC;KXS;IYC;KZU;uCvBC;yCqBG;arBE;KuBE;sBaK;SbQ;C5EmC;kE0FC;2DjCQ,yBiC;C1FY;kE0FE;+BCU;KDsB;uCrCC;yCqBE;arBE;KqCE;IEC;KFI;uBGc;SHQ;yBIC;SJK;8BKC;SLS;wBMC;SNK;uBOC;SPiB;qBQC;SRK;sBSC;STG;uBUC;SVK;C1FE;iE0FI;IWI;0B9BM;S8BE;KXC;IYC;sD1CmB,kC0C;KZI;IaC;sDhCC;SgCG;KbC;IcC;KdK;uBGI;SHG;uBOC;SPE;C1FW;AyGE;iBCQ;SDE;gBEC;SFG;sBhBC;SgBK;CzGI;A4GC;C5GO"},"hasCjsExports":true},"type":"js/module"}]}