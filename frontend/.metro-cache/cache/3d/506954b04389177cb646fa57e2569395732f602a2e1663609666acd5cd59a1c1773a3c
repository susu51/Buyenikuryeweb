{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":300},"end":{"line":8,"column":52,"index":335}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":353},"end":{"line":9,"column":32,"index":369}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./NativeTabsTriggerTabBar","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":34,"index":405},"end":{"line":10,"column":70,"index":441}}],"key":"WVwnFVa4tbZlC8q45AzhMA62QpY=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":459},"end":{"line":11,"column":34,"index":477}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"../../link/preview/PreviewRouteContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":30,"index":509},"end":{"line":12,"column":79,"index":558}}],"key":"RjOiGG3bmFq3DQhcV/pBDiHQb00=","exportNames":["*"],"imports":1}},{"name":"../../views/useSafeLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":30,"index":590},"end":{"line":13,"column":72,"index":632}}],"key":"+Bqbcz5xwcnBwCK/TVf05V4tLZ8=","exportNames":["*"],"imports":1}},{"name":"../common/elements","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":653},"end":{"line":14,"column":48,"index":682}}],"key":"1RFkZDeCNqyJBPS3jQJ086fMimI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeTabTrigger = void 0;\n  exports.convertTabPropsToOptions = convertTabPropsToOptions;\n  exports.appendIconOptions = appendIconOptions;\n  exports.isNativeTabTrigger = isNativeTabTrigger;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = require(_dependencyMap[1], \"react\");\n  const NativeTabsTriggerTabBar_1 = require(_dependencyMap[2], \"./NativeTabsTriggerTabBar\");\n  const utils_1 = require(_dependencyMap[3], \"./utils\");\n  const PreviewRouteContext_1 = require(_dependencyMap[4], \"../../link/preview/PreviewRouteContext\");\n  const useSafeLayoutEffect_1 = require(_dependencyMap[5], \"../../views/useSafeLayoutEffect\");\n  const elements_1 = require(_dependencyMap[6], \"../common/elements\");\n  /**\n   * The component used to customize the native tab options both in the _layout file and from the tab screen.\n   *\n   * When used in the _layout file, you need to provide a `name` prop.\n   * When used in the tab screen, the `name` prop takes no effect.\n   *\n   * @example\n   * ```tsx\n   * // In _layout file\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function Layout() {\n   *   return (\n   *     <NativeTabs>\n   *       <NativeTabs.Trigger name=\"home\" />\n   *       <NativeTabs.Trigger name=\"settings\" />\n   *     </NativeTabs>\n   *   );\n   * }\n   * ```\n   *\n   * @example\n   * ```tsx\n   * // In a tab screen\n   * import { NativeTabs } from 'expo-router/unstable-native-tabs';\n   *\n   * export default function HomeScreen() {\n   *   return (\n   *     <View>\n   *       <NativeTabs.Trigger>\n   *         <Label>Home</Label>\n   *       </NativeTabs.Trigger>\n   *       <Text>This is home screen!</Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * > **Note:** You can use the alias `NativeTabs.Trigger` for this component.\n   */\n  function NativeTabTriggerImpl(props) {\n    const route = (0, native_1.useRoute)();\n    const navigation = (0, native_1.useNavigation)();\n    const isFocused = navigation.isFocused();\n    const isInPreview = (0, PreviewRouteContext_1.useIsPreview)();\n    (0, useSafeLayoutEffect_1.useSafeLayoutEffect)(() => {\n      // This will cause the tab to update only when it is focused.\n      // As long as all tabs are loaded at the start, we don't need this check.\n      // It is here to ensure similar behavior to stack\n      if (isFocused && !isInPreview) {\n        if (navigation.getState()?.type !== 'tab') {\n          throw new Error(`Trigger component can only be used in the tab screen. Current route: ${route.name}`);\n        }\n        const options = convertTabPropsToOptions(props, true);\n        navigation.setOptions(options);\n      }\n    }, [isFocused, props, isInPreview]);\n    return null;\n  }\n  exports.NativeTabTrigger = Object.assign(NativeTabTriggerImpl, {\n    TabBar: NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar\n  });\n  function convertTabPropsToOptions({\n    options,\n    hidden,\n    children,\n    role,\n    disablePopToTop,\n    disableScrollToTop\n  }, isDynamic = false) {\n    const initialOptions = isDynamic ? Object.assign({}, options) : Object.assign({}, options, {\n      hidden: !!hidden,\n      specialEffects: {\n        repeatedTabSelection: {\n          popToRoot: !disablePopToTop,\n          scrollToTop: !disableScrollToTop\n        }\n      },\n      role: role ?? options?.role\n    });\n    const allowedChildren = (0, utils_1.filterAllowedChildrenElements)(children, [elements_1.Badge, elements_1.Label, elements_1.Icon, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar]);\n    return allowedChildren.reduce((acc, child) => {\n      if ((0, utils_1.isChildOfType)(child, elements_1.Badge)) {\n        appendBadgeOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Label)) {\n        appendLabelOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, elements_1.Icon)) {\n        appendIconOptions(acc, child.props);\n      } else if ((0, utils_1.isChildOfType)(child, NativeTabsTriggerTabBar_1.NativeTabsTriggerTabBar)) {\n        appendTabBarOptions(acc, child.props);\n      }\n      return acc;\n    }, Object.assign({}, initialOptions));\n  }\n  function appendBadgeOptions(options, props) {\n    if (props.children) {\n      options.badgeValue = String(props.children);\n      options.selectedBadgeBackgroundColor = props.selectedBackgroundColor;\n    } else if (!props.hidden) {\n      // If no value is provided, we set it to a space to show the badge\n      // Otherwise, the `react-native-screens` will interpret it as a hidden badge\n      // https://github.com/software-mansion/react-native-screens/blob/b4358fd95dd0736fc54df6bb97f210dc89edf24c/ios/bottom-tabs/RNSBottomTabsScreenComponentView.mm#L172\n      options.badgeValue = ' ';\n    }\n  }\n  function appendLabelOptions(options, props) {\n    if (props.hidden) {\n      options.title = '';\n    } else {\n      options.title = props.children;\n      options.selectedLabelStyle = props.selectedStyle;\n    }\n  }\n  function appendIconOptions(options, props) {\n    if ('src' in props && props.src) {\n      const icon = convertIconSrcToIconOption(props);\n      options.icon = icon?.icon;\n      options.selectedIcon = icon?.selectedIcon;\n    } else if ('sf' in props && false) {\n      if (typeof props.sf === 'string') {\n        options.icon = props.sf ? {\n          sf: props.sf\n        } : undefined;\n        options.selectedIcon = undefined;\n      } else if (props.sf) {\n        options.icon = props.sf.default ? {\n          sf: props.sf.default\n        } : undefined;\n        options.selectedIcon = props.sf.selected ? {\n          sf: props.sf.selected\n        } : undefined;\n      }\n    } else if ('drawable' in props && false) {\n      options.icon = {\n        drawable: props.drawable\n      };\n      options.selectedIcon = undefined;\n    }\n    options.selectedIconColor = props.selectedColor;\n  }\n  function convertIconSrcToIconOption(icon) {\n    if (icon && icon.src) {\n      const {\n        defaultIcon,\n        selected\n      } = typeof icon.src === 'object' && 'selected' in icon.src ? {\n        defaultIcon: icon.src.default,\n        selected: icon.src.selected\n      } : {\n        defaultIcon: icon.src\n      };\n      const options = {};\n      options.icon = convertSrcOrComponentToSrc(defaultIcon);\n      options.selectedIcon = convertSrcOrComponentToSrc(selected);\n      return options;\n    }\n    return undefined;\n  }\n  function convertSrcOrComponentToSrc(src) {\n    if (src) {\n      if ((0, react_1.isValidElement)(src)) {\n        if (src.type === elements_1.VectorIcon) {\n          const props = src.props;\n          return {\n            src: props.family.getImageSource(props.name, 24, 'white')\n          };\n        } else {\n          console.warn('Only VectorIcon is supported as a React element in Icon.src');\n        }\n      } else {\n        return {\n          src\n        };\n      }\n    }\n    return undefined;\n  }\n  function appendTabBarOptions(options, props) {\n    const {\n      backgroundColor,\n      blurEffect,\n      iconColor,\n      disableTransparentOnScrollEdge,\n      badgeBackgroundColor,\n      badgeTextColor,\n      indicatorColor,\n      labelStyle,\n      shadowColor\n    } = props;\n    if (backgroundColor) {\n      options.backgroundColor = backgroundColor;\n    }\n    // We need better native integration of this on Android\n    // Simulating from JS side creates ugly transitions\n    if (true) {\n      if (blurEffect) {\n        options.blurEffect = blurEffect;\n      }\n      if (shadowColor) {\n        options.shadowColor = shadowColor;\n      }\n      if (iconColor) {\n        options.iconColor = iconColor;\n      }\n      if (disableTransparentOnScrollEdge !== undefined) {\n        options.disableTransparentOnScrollEdge = disableTransparentOnScrollEdge;\n      }\n      if (badgeBackgroundColor) {\n        options.badgeBackgroundColor = badgeBackgroundColor;\n      }\n      if (badgeTextColor) {\n        options.badgeTextColor = badgeTextColor;\n      }\n      if (indicatorColor) {\n        options.indicatorColor = indicatorColor;\n      }\n      if (labelStyle) {\n        options.labelStyle = labelStyle;\n      }\n    }\n  }\n  function isNativeTabTrigger(child, contextKey) {\n    if ((0, react_1.isValidElement)(child) && child && child.type === exports.NativeTabTrigger) {\n      if (typeof child.props === 'object' && child.props && 'name' in child.props && !child.props.name) {\n        throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        if (['component', 'getComponent'].some(key => child.props && typeof child.props === 'object' && key in child.props)) {\n          throw new Error(`<Trigger /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`component\\` or \\`getComponent\\` prop when used as a child of a Layout Route`);\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n});","lineCount":254,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"NativeTabTrigger"],[8,26,4,24],[8,29,4,27],[8,34,4,32],[8,35,4,33],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"convertTabPropsToOptions"],[9,34,5,32],[9,37,5,35,"convertTabPropsToOptions"],[9,61,5,59],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"appendIconOptions"],[10,27,6,25],[10,30,6,28,"appendIconOptions"],[10,47,6,45],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"isNativeTabTrigger"],[11,28,7,26],[11,31,7,29,"isNativeTabTrigger"],[11,49,7,47],[12,2,8,0],[12,8,8,6,"native_1"],[12,16,8,14],[12,19,8,17,"require"],[12,26,8,24],[12,27,8,24,"_dependencyMap"],[12,41,8,24],[12,72,8,51],[12,73,8,52],[13,2,9,0],[13,8,9,6,"react_1"],[13,15,9,13],[13,18,9,16,"require"],[13,25,9,23],[13,26,9,23,"_dependencyMap"],[13,40,9,23],[13,52,9,31],[13,53,9,32],[14,2,10,0],[14,8,10,6,"NativeTabsTriggerTabBar_1"],[14,33,10,31],[14,36,10,34,"require"],[14,43,10,41],[14,44,10,41,"_dependencyMap"],[14,58,10,41],[14,90,10,69],[14,91,10,70],[15,2,11,0],[15,8,11,6,"utils_1"],[15,15,11,13],[15,18,11,16,"require"],[15,25,11,23],[15,26,11,23,"_dependencyMap"],[15,40,11,23],[15,54,11,33],[15,55,11,34],[16,2,12,0],[16,8,12,6,"PreviewRouteContext_1"],[16,29,12,27],[16,32,12,30,"require"],[16,39,12,37],[16,40,12,37,"_dependencyMap"],[16,54,12,37],[16,99,12,78],[16,100,12,79],[17,2,13,0],[17,8,13,6,"useSafeLayoutEffect_1"],[17,29,13,27],[17,32,13,30,"require"],[17,39,13,37],[17,40,13,37,"_dependencyMap"],[17,54,13,37],[17,92,13,71],[17,93,13,72],[18,2,14,0],[18,8,14,6,"elements_1"],[18,18,14,16],[18,21,14,19,"require"],[18,28,14,26],[18,29,14,26,"_dependencyMap"],[18,43,14,26],[18,68,14,47],[18,69,14,48],[19,2,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,0,32,0],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,0,36,0],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,0,41,0],[46,0,42,0],[47,0,43,0],[48,0,44,0],[49,0,45,0],[50,0,46,0],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,0,51,0],[56,0,52,0],[57,0,53,0],[58,0,54,0],[59,2,55,0],[59,11,55,9,"NativeTabTriggerImpl"],[59,31,55,29,"NativeTabTriggerImpl"],[59,32,55,30,"props"],[59,37,55,35],[59,39,55,37],[60,4,56,4],[60,10,56,10,"route"],[60,15,56,15],[60,18,56,18],[60,19,56,19],[60,20,56,20],[60,22,56,22,"native_1"],[60,30,56,30],[60,31,56,31,"useRoute"],[60,39,56,39],[60,41,56,41],[60,42,56,42],[61,4,57,4],[61,10,57,10,"navigation"],[61,20,57,20],[61,23,57,23],[61,24,57,24],[61,25,57,25],[61,27,57,27,"native_1"],[61,35,57,35],[61,36,57,36,"useNavigation"],[61,49,57,49],[61,51,57,51],[61,52,57,52],[62,4,58,4],[62,10,58,10,"isFocused"],[62,19,58,19],[62,22,58,22,"navigation"],[62,32,58,32],[62,33,58,33,"isFocused"],[62,42,58,42],[62,43,58,43],[62,44,58,44],[63,4,59,4],[63,10,59,10,"isInPreview"],[63,21,59,21],[63,24,59,24],[63,25,59,25],[63,26,59,26],[63,28,59,28,"PreviewRouteContext_1"],[63,49,59,49],[63,50,59,50,"useIsPreview"],[63,62,59,62],[63,64,59,64],[63,65,59,65],[64,4,60,4],[64,5,60,5],[64,6,60,6],[64,8,60,8,"useSafeLayoutEffect_1"],[64,29,60,29],[64,30,60,30,"useSafeLayoutEffect"],[64,49,60,49],[64,51,60,51],[64,57,60,57],[65,6,61,8],[66,6,62,8],[67,6,63,8],[68,6,64,8],[68,10,64,12,"isFocused"],[68,19,64,21],[68,23,64,25],[68,24,64,26,"isInPreview"],[68,35,64,37],[68,37,64,39],[69,8,65,12],[69,12,65,16,"navigation"],[69,22,65,26],[69,23,65,27,"getState"],[69,31,65,35],[69,32,65,36],[69,33,65,37],[69,35,65,39,"type"],[69,39,65,43],[69,44,65,48],[69,49,65,53],[69,51,65,55],[70,10,66,16],[70,16,66,22],[70,20,66,26,"Error"],[70,25,66,31],[70,26,66,32],[70,98,66,104,"route"],[70,103,66,109],[70,104,66,110,"name"],[70,108,66,114],[70,110,66,116],[70,111,66,117],[71,8,67,12],[72,8,68,12],[72,14,68,18,"options"],[72,21,68,25],[72,24,68,28,"convertTabPropsToOptions"],[72,48,68,52],[72,49,68,53,"props"],[72,54,68,58],[72,56,68,60],[72,60,68,64],[72,61,68,65],[73,8,69,12,"navigation"],[73,18,69,22],[73,19,69,23,"setOptions"],[73,29,69,33],[73,30,69,34,"options"],[73,37,69,41],[73,38,69,42],[74,6,70,8],[75,4,71,4],[75,5,71,5],[75,7,71,7],[75,8,71,8,"isFocused"],[75,17,71,17],[75,19,71,19,"props"],[75,24,71,24],[75,26,71,26,"isInPreview"],[75,37,71,37],[75,38,71,38],[75,39,71,39],[76,4,72,4],[76,11,72,11],[76,15,72,15],[77,2,73,0],[78,2,74,0,"exports"],[78,9,74,7],[78,10,74,8,"NativeTabTrigger"],[78,26,74,24],[78,29,74,27,"Object"],[78,35,74,33],[78,36,74,34,"assign"],[78,42,74,40],[78,43,74,41,"NativeTabTriggerImpl"],[78,63,74,61],[78,65,74,63],[79,4,75,4,"TabBar"],[79,10,75,10],[79,12,75,12,"NativeTabsTriggerTabBar_1"],[79,37,75,37],[79,38,75,38,"NativeTabsTriggerTabBar"],[80,2,76,0],[80,3,76,1],[80,4,76,2],[81,2,77,0],[81,11,77,9,"convertTabPropsToOptions"],[81,35,77,33,"convertTabPropsToOptions"],[81,36,77,34],[82,4,77,36,"options"],[82,11,77,43],[83,4,77,45,"hidden"],[83,10,77,51],[84,4,77,53,"children"],[84,12,77,61],[85,4,77,63,"role"],[85,8,77,67],[86,4,77,69,"disablePopToTop"],[86,19,77,84],[87,4,77,86,"disableScrollToTop"],[88,2,77,105],[88,3,77,106],[88,5,77,108,"isDynamic"],[88,14,77,117],[88,17,77,120],[88,22,77,125],[88,24,77,127],[89,4,78,4],[89,10,78,10,"initialOptions"],[89,24,78,24],[89,27,78,27,"isDynamic"],[89,36,78,36],[89,39,78,36,"Object"],[89,45,78,36],[89,46,78,36,"assign"],[89,52,78,36],[89,57,79,15,"options"],[89,64,79,22],[89,68,79,22,"Object"],[89,74,79,22],[89,75,79,22,"assign"],[89,81,79,22],[89,86,81,15,"options"],[89,93,81,22],[90,6,82,12,"hidden"],[90,12,82,18],[90,14,82,20],[90,15,82,21],[90,16,82,22,"hidden"],[90,22,82,28],[91,6,83,12,"specialEffects"],[91,20,83,26],[91,22,83,28],[92,8,84,16,"repeatedTabSelection"],[92,28,84,36],[92,30,84,38],[93,10,85,20,"popToRoot"],[93,19,85,29],[93,21,85,31],[93,22,85,32,"disablePopToTop"],[93,37,85,47],[94,10,86,20,"scrollToTop"],[94,21,86,31],[94,23,86,33],[94,24,86,34,"disableScrollToTop"],[95,8,87,16],[96,6,88,12],[96,7,88,13],[97,6,89,12,"role"],[97,10,89,16],[97,12,89,18,"role"],[97,16,89,22],[97,20,89,26,"options"],[97,27,89,33],[97,29,89,35,"role"],[98,4,89,39],[98,6,90,9],[99,4,91,4],[99,10,91,10,"allowedChildren"],[99,25,91,25],[99,28,91,28],[99,29,91,29],[99,30,91,30],[99,32,91,32,"utils_1"],[99,39,91,39],[99,40,91,40,"filterAllowedChildrenElements"],[99,69,91,69],[99,71,91,71,"children"],[99,79,91,79],[99,81,91,81],[99,82,92,8,"elements_1"],[99,92,92,18],[99,93,92,19,"Badge"],[99,98,92,24],[99,100,93,8,"elements_1"],[99,110,93,18],[99,111,93,19,"Label"],[99,116,93,24],[99,118,94,8,"elements_1"],[99,128,94,18],[99,129,94,19,"Icon"],[99,133,94,23],[99,135,95,8,"NativeTabsTriggerTabBar_1"],[99,160,95,33],[99,161,95,34,"NativeTabsTriggerTabBar"],[99,184,95,57],[99,185,96,5],[99,186,96,6],[100,4,97,4],[100,11,97,11,"allowedChildren"],[100,26,97,26],[100,27,97,27,"reduce"],[100,33,97,33],[100,34,97,34],[100,35,97,35,"acc"],[100,38,97,38],[100,40,97,40,"child"],[100,45,97,45],[100,50,97,50],[101,6,98,8],[101,10,98,12],[101,11,98,13],[101,12,98,14],[101,14,98,16,"utils_1"],[101,21,98,23],[101,22,98,24,"isChildOfType"],[101,35,98,37],[101,37,98,39,"child"],[101,42,98,44],[101,44,98,46,"elements_1"],[101,54,98,56],[101,55,98,57,"Badge"],[101,60,98,62],[101,61,98,63],[101,63,98,65],[102,8,99,12,"appendBadgeOptions"],[102,26,99,30],[102,27,99,31,"acc"],[102,30,99,34],[102,32,99,36,"child"],[102,37,99,41],[102,38,99,42,"props"],[102,43,99,47],[102,44,99,48],[103,6,100,8],[103,7,100,9],[103,13,101,13],[103,17,101,17],[103,18,101,18],[103,19,101,19],[103,21,101,21,"utils_1"],[103,28,101,28],[103,29,101,29,"isChildOfType"],[103,42,101,42],[103,44,101,44,"child"],[103,49,101,49],[103,51,101,51,"elements_1"],[103,61,101,61],[103,62,101,62,"Label"],[103,67,101,67],[103,68,101,68],[103,70,101,70],[104,8,102,12,"appendLabelOptions"],[104,26,102,30],[104,27,102,31,"acc"],[104,30,102,34],[104,32,102,36,"child"],[104,37,102,41],[104,38,102,42,"props"],[104,43,102,47],[104,44,102,48],[105,6,103,8],[105,7,103,9],[105,13,104,13],[105,17,104,17],[105,18,104,18],[105,19,104,19],[105,21,104,21,"utils_1"],[105,28,104,28],[105,29,104,29,"isChildOfType"],[105,42,104,42],[105,44,104,44,"child"],[105,49,104,49],[105,51,104,51,"elements_1"],[105,61,104,61],[105,62,104,62,"Icon"],[105,66,104,66],[105,67,104,67],[105,69,104,69],[106,8,105,12,"appendIconOptions"],[106,25,105,29],[106,26,105,30,"acc"],[106,29,105,33],[106,31,105,35,"child"],[106,36,105,40],[106,37,105,41,"props"],[106,42,105,46],[106,43,105,47],[107,6,106,8],[107,7,106,9],[107,13,107,13],[107,17,107,17],[107,18,107,18],[107,19,107,19],[107,21,107,21,"utils_1"],[107,28,107,28],[107,29,107,29,"isChildOfType"],[107,42,107,42],[107,44,107,44,"child"],[107,49,107,49],[107,51,107,51,"NativeTabsTriggerTabBar_1"],[107,76,107,76],[107,77,107,77,"NativeTabsTriggerTabBar"],[107,100,107,100],[107,101,107,101],[107,103,107,103],[108,8,108,12,"appendTabBarOptions"],[108,27,108,31],[108,28,108,32,"acc"],[108,31,108,35],[108,33,108,37,"child"],[108,38,108,42],[108,39,108,43,"props"],[108,44,108,48],[108,45,108,49],[109,6,109,8],[110,6,110,8],[110,13,110,15,"acc"],[110,16,110,18],[111,4,111,4],[111,5,111,5],[111,7,111,5,"Object"],[111,13,111,5],[111,14,111,5,"assign"],[111,20,111,5],[111,25,111,12,"initialOptions"],[111,39,111,26],[111,40,111,28],[111,41,111,29],[112,2,112,0],[113,2,113,0],[113,11,113,9,"appendBadgeOptions"],[113,29,113,27,"appendBadgeOptions"],[113,30,113,28,"options"],[113,37,113,35],[113,39,113,37,"props"],[113,44,113,42],[113,46,113,44],[114,4,114,4],[114,8,114,8,"props"],[114,13,114,13],[114,14,114,14,"children"],[114,22,114,22],[114,24,114,24],[115,6,115,8,"options"],[115,13,115,15],[115,14,115,16,"badgeValue"],[115,24,115,26],[115,27,115,29,"String"],[115,33,115,35],[115,34,115,36,"props"],[115,39,115,41],[115,40,115,42,"children"],[115,48,115,50],[115,49,115,51],[116,6,116,8,"options"],[116,13,116,15],[116,14,116,16,"selectedBadgeBackgroundColor"],[116,42,116,44],[116,45,116,47,"props"],[116,50,116,52],[116,51,116,53,"selectedBackgroundColor"],[116,74,116,76],[117,4,117,4],[117,5,117,5],[117,11,118,9],[117,15,118,13],[117,16,118,14,"props"],[117,21,118,19],[117,22,118,20,"hidden"],[117,28,118,26],[117,30,118,28],[118,6,119,8],[119,6,120,8],[120,6,121,8],[121,6,122,8,"options"],[121,13,122,15],[121,14,122,16,"badgeValue"],[121,24,122,26],[121,27,122,29],[121,30,122,32],[122,4,123,4],[123,2,124,0],[124,2,125,0],[124,11,125,9,"appendLabelOptions"],[124,29,125,27,"appendLabelOptions"],[124,30,125,28,"options"],[124,37,125,35],[124,39,125,37,"props"],[124,44,125,42],[124,46,125,44],[125,4,126,4],[125,8,126,8,"props"],[125,13,126,13],[125,14,126,14,"hidden"],[125,20,126,20],[125,22,126,22],[126,6,127,8,"options"],[126,13,127,15],[126,14,127,16,"title"],[126,19,127,21],[126,22,127,24],[126,24,127,26],[127,4,128,4],[127,5,128,5],[127,11,129,9],[128,6,130,8,"options"],[128,13,130,15],[128,14,130,16,"title"],[128,19,130,21],[128,22,130,24,"props"],[128,27,130,29],[128,28,130,30,"children"],[128,36,130,38],[129,6,131,8,"options"],[129,13,131,15],[129,14,131,16,"selectedLabelStyle"],[129,32,131,34],[129,35,131,37,"props"],[129,40,131,42],[129,41,131,43,"selectedStyle"],[129,54,131,56],[130,4,132,4],[131,2,133,0],[132,2,134,0],[132,11,134,9,"appendIconOptions"],[132,28,134,26,"appendIconOptions"],[132,29,134,27,"options"],[132,36,134,34],[132,38,134,36,"props"],[132,43,134,41],[132,45,134,43],[133,4,135,4],[133,8,135,8],[133,13,135,13],[133,17,135,17,"props"],[133,22,135,22],[133,26,135,26,"props"],[133,31,135,31],[133,32,135,32,"src"],[133,35,135,35],[133,37,135,37],[134,6,136,8],[134,12,136,14,"icon"],[134,16,136,18],[134,19,136,21,"convertIconSrcToIconOption"],[134,45,136,47],[134,46,136,48,"props"],[134,51,136,53],[134,52,136,54],[135,6,137,8,"options"],[135,13,137,15],[135,14,137,16,"icon"],[135,18,137,20],[135,21,137,23,"icon"],[135,25,137,27],[135,27,137,29,"icon"],[135,31,137,33],[136,6,138,8,"options"],[136,13,138,15],[136,14,138,16,"selectedIcon"],[136,26,138,28],[136,29,138,31,"icon"],[136,33,138,35],[136,35,138,37,"selectedIcon"],[136,47,138,49],[137,4,139,4],[137,5,139,5],[137,11,140,9],[137,15,140,13],[137,19,140,17],[137,23,140,21,"props"],[137,28,140,26],[137,37,140,59],[137,39,140,61],[138,6,141,8],[138,10,141,12],[138,17,141,19,"props"],[138,22,141,24],[138,23,141,25,"sf"],[138,25,141,27],[138,30,141,32],[138,38,141,40],[138,40,141,42],[139,8,142,12,"options"],[139,15,142,19],[139,16,142,20,"icon"],[139,20,142,24],[139,23,142,27,"props"],[139,28,142,32],[139,29,142,33,"sf"],[139,31,142,35],[139,34,143,18],[140,10,144,20,"sf"],[140,12,144,22],[140,14,144,24,"props"],[140,19,144,29],[140,20,144,30,"sf"],[141,8,145,16],[141,9,145,17],[141,12,146,18,"undefined"],[141,21,146,27],[142,8,147,12,"options"],[142,15,147,19],[142,16,147,20,"selectedIcon"],[142,28,147,32],[142,31,147,35,"undefined"],[142,40,147,44],[143,6,148,8],[143,7,148,9],[143,13,149,13],[143,17,149,17,"props"],[143,22,149,22],[143,23,149,23,"sf"],[143,25,149,25],[143,27,149,27],[144,8,150,12,"options"],[144,15,150,19],[144,16,150,20,"icon"],[144,20,150,24],[144,23,150,27,"props"],[144,28,150,32],[144,29,150,33,"sf"],[144,31,150,35],[144,32,150,36,"default"],[144,39,150,43],[144,42,151,18],[145,10,152,20,"sf"],[145,12,152,22],[145,14,152,24,"props"],[145,19,152,29],[145,20,152,30,"sf"],[145,22,152,32],[145,23,152,33,"default"],[146,8,153,16],[146,9,153,17],[146,12,154,18,"undefined"],[146,21,154,27],[147,8,155,12,"options"],[147,15,155,19],[147,16,155,20,"selectedIcon"],[147,28,155,32],[147,31,155,35,"props"],[147,36,155,40],[147,37,155,41,"sf"],[147,39,155,43],[147,40,155,44,"selected"],[147,48,155,52],[147,51,156,18],[148,10,157,20,"sf"],[148,12,157,22],[148,14,157,24,"props"],[148,19,157,29],[148,20,157,30,"sf"],[148,22,157,32],[148,23,157,33,"selected"],[149,8,158,16],[149,9,158,17],[149,12,159,18,"undefined"],[149,21,159,27],[150,6,160,8],[151,4,161,4],[151,5,161,5],[151,11,162,9],[151,15,162,13],[151,25,162,23],[151,29,162,27,"props"],[151,34,162,32],[151,43,162,69],[151,45,162,71],[152,6,163,8,"options"],[152,13,163,15],[152,14,163,16,"icon"],[152,18,163,20],[152,21,163,23],[153,8,163,25,"drawable"],[153,16,163,33],[153,18,163,35,"props"],[153,23,163,40],[153,24,163,41,"drawable"],[154,6,163,50],[154,7,163,51],[155,6,164,8,"options"],[155,13,164,15],[155,14,164,16,"selectedIcon"],[155,26,164,28],[155,29,164,31,"undefined"],[155,38,164,40],[156,4,165,4],[157,4,166,4,"options"],[157,11,166,11],[157,12,166,12,"selectedIconColor"],[157,29,166,29],[157,32,166,32,"props"],[157,37,166,37],[157,38,166,38,"selectedColor"],[157,51,166,51],[158,2,167,0],[159,2,168,0],[159,11,168,9,"convertIconSrcToIconOption"],[159,37,168,35,"convertIconSrcToIconOption"],[159,38,168,36,"icon"],[159,42,168,40],[159,44,168,42],[160,4,169,4],[160,8,169,8,"icon"],[160,12,169,12],[160,16,169,16,"icon"],[160,20,169,20],[160,21,169,21,"src"],[160,24,169,24],[160,26,169,26],[161,6,170,8],[161,12,170,14],[162,8,170,16,"defaultIcon"],[162,19,170,27],[163,8,170,29,"selected"],[164,6,170,38],[164,7,170,39],[164,10,170,42],[164,17,170,49,"icon"],[164,21,170,53],[164,22,170,54,"src"],[164,25,170,57],[164,30,170,62],[164,38,170,70],[164,42,170,74],[164,52,170,84],[164,56,170,88,"icon"],[164,60,170,92],[164,61,170,93,"src"],[164,64,170,96],[164,67,171,14],[165,8,171,16,"defaultIcon"],[165,19,171,27],[165,21,171,29,"icon"],[165,25,171,33],[165,26,171,34,"src"],[165,29,171,37],[165,30,171,38,"default"],[165,37,171,45],[166,8,171,47,"selected"],[166,16,171,55],[166,18,171,57,"icon"],[166,22,171,61],[166,23,171,62,"src"],[166,26,171,65],[166,27,171,66,"selected"],[167,6,171,75],[167,7,171,76],[167,10,172,14],[168,8,172,16,"defaultIcon"],[168,19,172,27],[168,21,172,29,"icon"],[168,25,172,33],[168,26,172,34,"src"],[169,6,172,38],[169,7,172,39],[170,6,173,8],[170,12,173,14,"options"],[170,19,173,21],[170,22,173,24],[170,23,173,25],[170,24,173,26],[171,6,174,8,"options"],[171,13,174,15],[171,14,174,16,"icon"],[171,18,174,20],[171,21,174,23,"convertSrcOrComponentToSrc"],[171,47,174,49],[171,48,174,50,"defaultIcon"],[171,59,174,61],[171,60,174,62],[172,6,175,8,"options"],[172,13,175,15],[172,14,175,16,"selectedIcon"],[172,26,175,28],[172,29,175,31,"convertSrcOrComponentToSrc"],[172,55,175,57],[172,56,175,58,"selected"],[172,64,175,66],[172,65,175,67],[173,6,176,8],[173,13,176,15,"options"],[173,20,176,22],[174,4,177,4],[175,4,178,4],[175,11,178,11,"undefined"],[175,20,178,20],[176,2,179,0],[177,2,180,0],[177,11,180,9,"convertSrcOrComponentToSrc"],[177,37,180,35,"convertSrcOrComponentToSrc"],[177,38,180,36,"src"],[177,41,180,39],[177,43,180,41],[178,4,181,4],[178,8,181,8,"src"],[178,11,181,11],[178,13,181,13],[179,6,182,8],[179,10,182,12],[179,11,182,13],[179,12,182,14],[179,14,182,16,"react_1"],[179,21,182,23],[179,22,182,24,"isValidElement"],[179,36,182,38],[179,38,182,40,"src"],[179,41,182,43],[179,42,182,44],[179,44,182,46],[180,8,183,12],[180,12,183,16,"src"],[180,15,183,19],[180,16,183,20,"type"],[180,20,183,24],[180,25,183,29,"elements_1"],[180,35,183,39],[180,36,183,40,"VectorIcon"],[180,46,183,50],[180,48,183,52],[181,10,184,16],[181,16,184,22,"props"],[181,21,184,27],[181,24,184,30,"src"],[181,27,184,33],[181,28,184,34,"props"],[181,33,184,39],[182,10,185,16],[182,17,185,23],[183,12,185,25,"src"],[183,15,185,28],[183,17,185,30,"props"],[183,22,185,35],[183,23,185,36,"family"],[183,29,185,42],[183,30,185,43,"getImageSource"],[183,44,185,57],[183,45,185,58,"props"],[183,50,185,63],[183,51,185,64,"name"],[183,55,185,68],[183,57,185,70],[183,59,185,72],[183,61,185,74],[183,68,185,81],[184,10,185,83],[184,11,185,84],[185,8,186,12],[185,9,186,13],[185,15,187,17],[186,10,188,16,"console"],[186,17,188,23],[186,18,188,24,"warn"],[186,22,188,28],[186,23,188,29],[186,84,188,90],[186,85,188,91],[187,8,189,12],[188,6,190,8],[188,7,190,9],[188,13,191,13],[189,8,192,12],[189,15,192,19],[190,10,192,21,"src"],[191,8,192,25],[191,9,192,26],[192,6,193,8],[193,4,194,4],[194,4,195,4],[194,11,195,11,"undefined"],[194,20,195,20],[195,2,196,0],[196,2,197,0],[196,11,197,9,"appendTabBarOptions"],[196,30,197,28,"appendTabBarOptions"],[196,31,197,29,"options"],[196,38,197,36],[196,40,197,38,"props"],[196,45,197,43],[196,47,197,45],[197,4,198,4],[197,10,198,10],[198,6,198,12,"backgroundColor"],[198,21,198,27],[199,6,198,29,"blurEffect"],[199,16,198,39],[200,6,198,41,"iconColor"],[200,15,198,50],[201,6,198,52,"disableTransparentOnScrollEdge"],[201,36,198,82],[202,6,198,84,"badgeBackgroundColor"],[202,26,198,104],[203,6,198,106,"badgeTextColor"],[203,20,198,120],[204,6,198,122,"indicatorColor"],[204,20,198,136],[205,6,198,138,"labelStyle"],[205,16,198,148],[206,6,198,150,"shadowColor"],[207,4,198,163],[207,5,198,164],[207,8,198,167,"props"],[207,13,198,172],[208,4,199,4],[208,8,199,8,"backgroundColor"],[208,23,199,23],[208,25,199,25],[209,6,200,8,"options"],[209,13,200,15],[209,14,200,16,"backgroundColor"],[209,29,200,31],[209,32,200,34,"backgroundColor"],[209,47,200,49],[210,4,201,4],[211,4,202,4],[212,4,203,4],[213,4,204,4],[213,14,204,43],[214,6,205,8],[214,10,205,12,"blurEffect"],[214,20,205,22],[214,22,205,24],[215,8,206,12,"options"],[215,15,206,19],[215,16,206,20,"blurEffect"],[215,26,206,30],[215,29,206,33,"blurEffect"],[215,39,206,43],[216,6,207,8],[217,6,208,8],[217,10,208,12,"shadowColor"],[217,21,208,23],[217,23,208,25],[218,8,209,12,"options"],[218,15,209,19],[218,16,209,20,"shadowColor"],[218,27,209,31],[218,30,209,34,"shadowColor"],[218,41,209,45],[219,6,210,8],[220,6,211,8],[220,10,211,12,"iconColor"],[220,19,211,21],[220,21,211,23],[221,8,212,12,"options"],[221,15,212,19],[221,16,212,20,"iconColor"],[221,25,212,29],[221,28,212,32,"iconColor"],[221,37,212,41],[222,6,213,8],[223,6,214,8],[223,10,214,12,"disableTransparentOnScrollEdge"],[223,40,214,42],[223,45,214,47,"undefined"],[223,54,214,56],[223,56,214,58],[224,8,215,12,"options"],[224,15,215,19],[224,16,215,20,"disableTransparentOnScrollEdge"],[224,46,215,50],[224,49,215,53,"disableTransparentOnScrollEdge"],[224,79,215,83],[225,6,216,8],[226,6,217,8],[226,10,217,12,"badgeBackgroundColor"],[226,30,217,32],[226,32,217,34],[227,8,218,12,"options"],[227,15,218,19],[227,16,218,20,"badgeBackgroundColor"],[227,36,218,40],[227,39,218,43,"badgeBackgroundColor"],[227,59,218,63],[228,6,219,8],[229,6,220,8],[229,10,220,12,"badgeTextColor"],[229,24,220,26],[229,26,220,28],[230,8,221,12,"options"],[230,15,221,19],[230,16,221,20,"badgeTextColor"],[230,30,221,34],[230,33,221,37,"badgeTextColor"],[230,47,221,51],[231,6,222,8],[232,6,223,8],[232,10,223,12,"indicatorColor"],[232,24,223,26],[232,26,223,28],[233,8,224,12,"options"],[233,15,224,19],[233,16,224,20,"indicatorColor"],[233,30,224,34],[233,33,224,37,"indicatorColor"],[233,47,224,51],[234,6,225,8],[235,6,226,8],[235,10,226,12,"labelStyle"],[235,20,226,22],[235,22,226,24],[236,8,227,12,"options"],[236,15,227,19],[236,16,227,20,"labelStyle"],[236,26,227,30],[236,29,227,33,"labelStyle"],[236,39,227,43],[237,6,228,8],[238,4,229,4],[239,2,230,0],[240,2,231,0],[240,11,231,9,"isNativeTabTrigger"],[240,29,231,27,"isNativeTabTrigger"],[240,30,231,28,"child"],[240,35,231,33],[240,37,231,35,"contextKey"],[240,47,231,45],[240,49,231,47],[241,4,232,4],[241,8,232,8],[241,9,232,9],[241,10,232,10],[241,12,232,12,"react_1"],[241,19,232,19],[241,20,232,20,"isValidElement"],[241,34,232,34],[241,36,232,36,"child"],[241,41,232,41],[241,42,232,42],[241,46,232,46,"child"],[241,51,232,51],[241,55,232,55,"child"],[241,60,232,60],[241,61,232,61,"type"],[241,65,232,65],[241,70,232,70,"exports"],[241,77,232,77],[241,78,232,78,"NativeTabTrigger"],[241,94,232,94],[241,96,232,96],[242,6,233,8],[242,10,233,12],[242,17,233,19,"child"],[242,22,233,24],[242,23,233,25,"props"],[242,28,233,30],[242,33,233,35],[242,41,233,43],[242,45,234,12,"child"],[242,50,234,17],[242,51,234,18,"props"],[242,56,234,23],[242,60,235,12],[242,66,235,18],[242,70,235,22,"child"],[242,75,235,27],[242,76,235,28,"props"],[242,81,235,33],[242,85,236,12],[242,86,236,13,"child"],[242,91,236,18],[242,92,236,19,"props"],[242,97,236,24],[242,98,236,25,"name"],[242,102,236,29],[242,104,236,31],[243,8,237,12],[243,14,237,18],[243,18,237,22,"Error"],[243,23,237,27],[243,24,237,28],[243,79,237,83,"contextKey"],[243,89,237,93],[243,167,237,171],[243,168,237,172],[244,6,238,8],[245,6,239,8],[245,10,239,12,"process"],[245,17,239,19],[245,18,239,20,"env"],[245,21,239,23],[245,22,239,24,"NODE_ENV"],[245,30,239,32],[245,35,239,37],[245,47,239,49],[245,49,239,51],[246,8,240,12],[246,12,240,16],[246,13,240,17],[246,24,240,28],[246,26,240,30],[246,40,240,44],[246,41,240,45],[246,42,240,46,"some"],[246,46,240,50],[246,47,240,52,"key"],[246,50,240,55],[246,54,240,60,"child"],[246,59,240,65],[246,60,240,66,"props"],[246,65,240,71],[246,69,240,75],[246,76,240,82,"child"],[246,81,240,87],[246,82,240,88,"props"],[246,87,240,93],[246,92,240,98],[246,100,240,106],[246,104,240,110,"key"],[246,107,240,113],[246,111,240,117,"child"],[246,116,240,122],[246,117,240,123,"props"],[246,122,240,128],[246,123,240,129],[246,125,240,131],[247,10,241,16],[247,16,241,22],[247,20,241,26,"Error"],[247,25,241,31],[247,26,241,32],[247,81,241,87,"contextKey"],[247,91,241,97],[247,197,241,203],[247,198,241,204],[248,8,242,12],[249,6,243,8],[250,6,244,8],[250,13,244,15],[250,17,244,19],[251,4,245,4],[252,4,246,4],[252,11,246,11],[252,16,246,16],[253,2,247,0],[254,0,247,1],[254,3]],"functionMap":{"names":["<global>","NativeTabTriggerImpl","<anonymous>","convertTabPropsToOptions","allowedChildren.reduce$argument_0","appendBadgeOptions","appendLabelOptions","appendIconOptions","convertIconSrcToIconOption","convertSrcOrComponentToSrc","appendTabBarOptions","isNativeTabTrigger","some$argument_0"],"mappings":"AAA;ACsD;mDCK;KDW;CDE;AGI;kCCoB;KDc;CHC;AKC;CLW;AMC;CNQ;AOC;CPiC;AQC;CRW;ASC;CTgB;AUC;CViC;AWC;mDCS,6ED;CXO"},"hasCjsExports":true},"type":"js/module"}]}