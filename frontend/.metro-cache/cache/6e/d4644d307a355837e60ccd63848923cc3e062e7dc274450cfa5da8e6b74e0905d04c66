{"dependencies":[{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI=","exportNames":["*"],"imports":1}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":168},"end":{"line":5,"column":52,"index":203}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":21,"index":226},"end":{"line":6,"column":49,"index":254}}],"key":"JdWyQHWvvi7kws4n0MhZWUpiB2c=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":272},"end":{"line":7,"column":32,"index":288}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./withLayoutContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":28,"index":318},"end":{"line":8,"column":58,"index":348}}],"key":"uI8DQ+0pBl5vWiQx60egJpSWI0Q=","exportNames":["*"],"imports":1}},{"name":"../fork/native-stack/createNativeStackNavigator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":37,"index":387},"end":{"line":9,"column":95,"index":445}}],"key":"RHp/c21WVHqsHHhJDMS04wvWTG0=","exportNames":["*"],"imports":1}},{"name":"../link/preview/LinkPreviewContext","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":29,"index":476},"end":{"line":10,"column":74,"index":521}}],"key":"XkVRz5U0xvqSwEsOtfEUIaEk8Lg=","exportNames":["*"],"imports":1}},{"name":"../navigationParams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":27,"index":550},"end":{"line":11,"column":57,"index":580}}],"key":"KeDGhIQYe7bEwtueZKPQrXQYcV0=","exportNames":["*"],"imports":1}},{"name":"../useScreens","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":21,"index":603},"end":{"line":12,"column":45,"index":627}}],"key":"8gimF/GgYNRJ+ojtiVDaShLJVrk=","exportNames":["*"],"imports":1}},{"name":"../views/Protected","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":649},"end":{"line":13,"column":49,"index":678}}],"key":"k1+uDYZ/MvJqE4WVPvI1cbQswMs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  var _reactJsxDevRuntime = require(_dependencyMap[0], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"/app/frontend/node_modules/expo-router/build/layouts/StackClient.js\";\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.StackRouter = exports.stackRouterOverride = void 0;\n  const native_1 = require(_dependencyMap[1], \"@react-navigation/native\");\n  const non_secure_1 = require(_dependencyMap[2], \"nanoid/non-secure\");\n  const react_1 = require(_dependencyMap[3], \"react\");\n  const withLayoutContext_1 = require(_dependencyMap[4], \"./withLayoutContext\");\n  const createNativeStackNavigator_1 = require(_dependencyMap[5], \"../fork/native-stack/createNativeStackNavigator\");\n  const LinkPreviewContext_1 = require(_dependencyMap[6], \"../link/preview/LinkPreviewContext\");\n  const navigationParams_1 = require(_dependencyMap[7], \"../navigationParams\");\n  const useScreens_1 = require(_dependencyMap[8], \"../useScreens\");\n  const Protected_1 = require(_dependencyMap[9], \"../views/Protected\");\n  const NativeStackNavigator = (0, createNativeStackNavigator_1.createNativeStackNavigator)().Navigator;\n  const RNStack = (0, withLayoutContext_1.withLayoutContext)(NativeStackNavigator);\n  function isStackAction(action) {\n    return action.type === 'PUSH' || action.type === 'NAVIGATE' || action.type === 'POP' || action.type === 'POP_TO_TOP' || action.type === 'REPLACE' || action.type === 'PRELOAD';\n  }\n  const isPreviewAction = action => !!action.payload && 'params' in action.payload && typeof action.payload.params === 'object' && !!(0, navigationParams_1.getInternalExpoRouterParams)(action.payload?.params ?? undefined)['__internal__expo_router_is_preview_navigation'];\n  /**\n   * React Navigation matches a screen by its name or a 'getID' function that uniquely identifies a screen.\n   * When a screen has been uniquely identified, the Stack can only have one instance of that screen.\n   *\n   * Expo Router allows for a screen to be matched by name and path params, a 'getID' function or a singular id.\n   *\n   * Instead of reimplementing the entire StackRouter, we can override the getStateForAction method to handle the singular screen logic.\n   *\n   */\n  const stackRouterOverride = original => {\n    return {\n      getStateForAction: (state, action, options) => {\n        if (action.target && action.target !== state.key) {\n          return null;\n        }\n        if (!isStackAction(action)) {\n          return original.getStateForAction(state, action, options);\n        }\n        // The dynamic getId added to an action, `router.push('screen', { singular: true })`\n        const actionSingularOptions = action.payload && 'singular' in action.payload ? action.payload.singular : undefined;\n        // Handle if 'getID' or 'singular' is set.\n        function getIdFunction() {\n          // Actions can be fired by the user, so we do need to validate their structure.\n          if (!('payload' in action) || !action.payload || !('name' in action.payload) || typeof action.payload.name !== 'string') {\n            return;\n          }\n          const actionName = action.payload.name;\n          return (\n            // The dynamic singular added to an action, `router.push('screen', { singular: () => 'id' })`\n            getActionSingularIdFn(actionSingularOptions, actionName) ||\n            // The static getId added as a prop to `<Screen singular />` or `<Screen getId={} />`\n            options.routeGetIdList[actionName]\n          );\n        }\n        const {\n          routeParamList\n        } = options;\n        switch (action.type) {\n          case 'PUSH':\n          case 'NAVIGATE':\n            {\n              if (!state.routeNames.includes(action.payload.name)) {\n                return null;\n              }\n              // START FORK\n              const getId = getIdFunction();\n              // const getId = options.routeGetIdList[action.payload.name];\n              // END FORK\n              const id = getId?.({\n                params: action.payload.params\n              });\n              let route;\n              if (id !== undefined) {\n                route = state.routes.findLast(route => route.name === action.payload.name && id === getId?.({\n                  params: route.params\n                }));\n              } else if (action.type === 'NAVIGATE') {\n                const currentRoute = state.routes[state.index];\n                // If the route matches the current one, then navigate to it\n                if (action.payload.name === currentRoute.name && !isPreviewAction(action)) {\n                  route = currentRoute;\n                } else if (action.payload.pop) {\n                  route = state.routes.findLast(route => route.name === action.payload.name);\n                }\n              }\n              // START FORK\n              if (isPreviewAction(action) && !route) {\n                route = state.preloadedRoutes.find(route => route.name === action.payload.name && id === route.key);\n              }\n              // END FORK\n              if (!route) {\n                route = state.preloadedRoutes.find(route => route.name === action.payload.name && id === getId?.({\n                  params: route.params\n                }));\n              }\n              let params;\n              if (action.type === 'NAVIGATE' && action.payload.merge && route) {\n                params = action.payload.params !== undefined || routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], route.params, action.payload.params) : route.params;\n              } else {\n                params = routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params;\n              }\n              let routes;\n              if (route) {\n                if (action.type === 'NAVIGATE' && action.payload.pop) {\n                  routes = [];\n                  // Get all routes until the matching one\n                  for (const r of state.routes) {\n                    if (r.key === route.key) {\n                      routes.push(Object.assign({}, route, {\n                        path: action.payload.path !== undefined ? action.payload.path : route.path,\n                        params\n                      }));\n                      break;\n                    }\n                    routes.push(r);\n                  }\n                } else {\n                  // START FORK\n                  // If there is an id, then filter out the existing route with the same id.\n                  // THIS ACTION IS DANGEROUS. This can cause React Native Screens to freeze\n                  if (id !== undefined) {\n                    routes = state.routes.filter(r => r.key !== route.key);\n                  } else if (action.type === 'NAVIGATE' && state.routes.length > 0) {\n                    // The navigation action should only replace the last route if it has the same name and path params.\n                    const lastRoute = state.routes[state.routes.length - 1];\n                    if ((0, useScreens_1.getSingularId)(lastRoute.name, {\n                      params: lastRoute.params\n                    }) === (0, useScreens_1.getSingularId)(route.name, {\n                      params\n                    })) {\n                      routes = state.routes.slice(0, -1);\n                    } else {\n                      routes = [...state.routes];\n                    }\n                  } else {\n                    routes = [...state.routes];\n                  }\n                  // If the routes length is the same as the state routes length, then we are navigating to a new route.\n                  // Otherwise we are replacing an existing route.\n                  const key = routes.length === state.routes.length && !isPreviewAction(action) ? `${action.payload.name}-${(0, non_secure_1.nanoid)()}` : route.key;\n                  routes.push(Object.assign({}, route, {\n                    key,\n                    path: action.type === 'NAVIGATE' && action.payload.path !== undefined ? action.payload.path : route.path,\n                    params\n                  }));\n                  // routes = state.routes.filter((r) => r.key !== route.key);\n                  // routes.push({\n                  //   ...route,\n                  //   path:\n                  //     action.type === 'NAVIGATE' && action.payload.path !== undefined\n                  //       ? action.payload.path\n                  //       : route.path,\n                  //   params,\n                  // });\n                  // END FORK\n                }\n              } else {\n                routes = [...state.routes, {\n                  key: `${action.payload.name}-${(0, non_secure_1.nanoid)()}`,\n                  name: action.payload.name,\n                  path: action.type === 'NAVIGATE' ? action.payload.path : undefined,\n                  params\n                }];\n              }\n              // START FORK\n              // return filterSingular(\n              const result = Object.assign({}, state, {\n                index: routes.length - 1,\n                preloadedRoutes: state.preloadedRoutes.filter(route => routes[routes.length - 1].key !== route.key),\n                routes\n              });\n              if (actionSingularOptions) {\n                return filterSingular(result, getId);\n              }\n              return result;\n              // return {\n              //   ...state,\n              //   index: routes.length - 1,\n              //   preloadedRoutes: state.preloadedRoutes.filter(\n              //     (route) => routes[routes.length - 1].key !== route.key\n              //   ),\n              //   routes,\n              // };\n              // END FORK\n            }\n          case 'PRELOAD':\n            {\n              // START FORK\n              // This will be the case for example for protected route\n              if (!state.routeNames.includes(action.payload.name)) {\n                return null;\n              }\n              // END FORK\n              const getId = options.routeGetIdList[action.payload.name];\n              const id = getId?.({\n                params: action.payload.params\n              });\n              let route;\n              if (id !== undefined) {\n                route = state.routes.find(route => route.name === action.payload.name && id === getId?.({\n                  params: route.params\n                }));\n              }\n              if (route) {\n                return Object.assign({}, state, {\n                  routes: state.routes.map(r => {\n                    if (r.key !== route?.key) {\n                      return r;\n                    }\n                    return Object.assign({}, r, {\n                      params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n                    });\n                  })\n                });\n              } else {\n                // START FORK\n                const currentPreloadedRoute = {\n                  key: `${action.payload.name}-${(0, non_secure_1.nanoid)()}`,\n                  name: action.payload.name,\n                  params: routeParamList[action.payload.name] !== undefined ? Object.assign({}, routeParamList[action.payload.name], action.payload.params) : action.payload.params\n                };\n                // END FORK\n                return Object.assign({}, state, {\n                  // START FORK\n                  // Adding the current preloaded route to the beginning of the preloadedRoutes array\n                  // This ensures that the preloaded route will be the next one after the visible route\n                  // and when navigation will happen, there will be no reshuffling\n                  // This is a workaround for the link preview navigation issue, when screen would freeze after navigation from native side\n                  // and reshuffling from react-navigation\n                  preloadedRoutes: [currentPreloadedRoute].concat(state.preloadedRoutes.filter(r => r.name !== action.payload.name || id !== getId?.({\n                    params: r.params\n                  })))\n                  // preloadedRoutes: state.preloadedRoutes\n                  //   .filter(\n                  //     (r) =>\n                  //       r.name !== action.payload.name ||\n                  //       id !== getId?.({ params: r.params })\n                  //   )\n                  //   .concat({\n                  //     key: `${action.payload.name}-${nanoid()}`,\n                  //     name: action.payload.name,\n                  //     params:\n                  //       routeParamList[action.payload.name] !== undefined\n                  //         ? {\n                  //             ...routeParamList[action.payload.name],\n                  //             ...action.payload.params,\n                  //           }\n                  //         : action.payload.params,\n                  //   }),\n                  // END FORK\n                });\n              }\n            }\n          default:\n            {\n              return original.getStateForAction(state, action, options);\n            }\n        }\n      }\n    };\n  };\n  exports.stackRouterOverride = stackRouterOverride;\n  function getActionSingularIdFn(actionGetId, name) {\n    if (typeof actionGetId === 'function') {\n      return options => actionGetId(name, options.params ?? {});\n    } else if (actionGetId === true) {\n      return options => (0, useScreens_1.getSingularId)(name, options);\n    }\n    return undefined;\n  }\n  /**\n   * If there is a dynamic singular on an action, then we need to filter the state to only have singular screens.\n   * As multiples may have been added before we did the singular navigation.\n   */\n  function filterSingular(state, getId) {\n    if (!state) {\n      return state;\n    }\n    if (!state.routes) {\n      return state;\n    }\n    const currentIndex = state.index || state.routes.length - 1;\n    const current = state.routes[currentIndex];\n    const name = current.name;\n    const id = getId?.({\n      params: current.params\n    });\n    if (!id) {\n      return state;\n    }\n    // TypeScript needs a type assertion here for the filter to work.\n    let routes = state.routes;\n    routes = routes.filter((route, index) => {\n      // If the route is the current route, keep it.\n      if (index === currentIndex) {\n        return true;\n      }\n      // Remove all other routes with the same name and id.\n      return name !== route.name || id !== getId?.({\n        params: route.params\n      });\n    });\n    return Object.assign({}, state, {\n      index: routes.length - 1,\n      routes\n    });\n  }\n  const Stack = Object.assign(props => {\n    const {\n      isStackAnimationDisabled\n    } = (0, LinkPreviewContext_1.useLinkPreviewContext)();\n    const screenOptions = (0, react_1.useMemo)(() => {\n      const condition = isStackAnimationDisabled ? () => true : shouldDisableAnimationBasedOnParams;\n      return disableAnimationInScreenOptions(props.screenOptions, condition);\n    }, [props.screenOptions, isStackAnimationDisabled]);\n    return /*#__PURE__*/_reactJsxDevRuntime.jsxDEV(RNStack, Object.assign({}, props, {\n      screenOptions: screenOptions,\n      UNSTABLE_router: exports.stackRouterOverride\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 13\n    }, this);\n  }, {\n    Screen: RNStack.Screen,\n    Protected: Protected_1.Protected\n  });\n  function disableAnimationInScreenOptions(options, condition) {\n    if (options && typeof options === 'function') {\n      return props => {\n        const oldOptions = options(props);\n        if (condition(props.route)) {\n          return Object.assign({}, oldOptions, {\n            animation: 'none'\n          });\n        }\n        return oldOptions ?? {};\n      };\n    }\n    return props => {\n      if (condition(props.route)) {\n        return Object.assign({}, options ?? {}, {\n          animation: 'none'\n        });\n      }\n      return options ?? {};\n    };\n  }\n  function shouldDisableAnimationBasedOnParams(route) {\n    const expoParams = (0, navigationParams_1.getInternalExpoRouterParams)(route.params);\n    return !!expoParams.__internal_expo_router_no_animation;\n  }\n  exports.default = Stack;\n  const StackRouter = options => {\n    const router = (0, native_1.StackRouter)(options);\n    return Object.assign({}, router, (0, exports.stackRouterOverride)(router));\n  };\n  exports.StackRouter = StackRouter;\n});","lineCount":364,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,2,13],[5,6,2,13,"_reactJsxDevRuntime"],[5,25,2,13],[5,28,2,13,"require"],[5,35,2,13],[5,36,2,13,"_dependencyMap"],[5,50,2,13],[6,2,2,13],[6,6,2,13,"_jsxFileName"],[6,18,2,13],[7,2,3,0,"Object"],[7,8,3,6],[7,9,3,7,"defineProperty"],[7,23,3,21],[7,24,3,22,"exports"],[7,31,3,29],[7,33,3,31],[7,45,3,43],[7,47,3,45],[8,4,3,47,"value"],[8,9,3,52],[8,11,3,54],[9,2,3,59],[9,3,3,60],[9,4,3,61],[10,2,4,0,"exports"],[10,9,4,7],[10,10,4,8,"StackRouter"],[10,21,4,19],[10,24,4,22,"exports"],[10,31,4,29],[10,32,4,30,"stackRouterOverride"],[10,51,4,49],[10,54,4,52],[10,59,4,57],[10,60,4,58],[11,2,5,0],[11,8,5,6,"native_1"],[11,16,5,14],[11,19,5,17,"require"],[11,26,5,24],[11,27,5,24,"_dependencyMap"],[11,41,5,24],[11,72,5,51],[11,73,5,52],[12,2,6,0],[12,8,6,6,"non_secure_1"],[12,20,6,18],[12,23,6,21,"require"],[12,30,6,28],[12,31,6,28,"_dependencyMap"],[12,45,6,28],[12,69,6,48],[12,70,6,49],[13,2,7,0],[13,8,7,6,"react_1"],[13,15,7,13],[13,18,7,16,"require"],[13,25,7,23],[13,26,7,23,"_dependencyMap"],[13,40,7,23],[13,52,7,31],[13,53,7,32],[14,2,8,0],[14,8,8,6,"withLayoutContext_1"],[14,27,8,25],[14,30,8,28,"require"],[14,37,8,35],[14,38,8,35,"_dependencyMap"],[14,52,8,35],[14,78,8,57],[14,79,8,58],[15,2,9,0],[15,8,9,6,"createNativeStackNavigator_1"],[15,36,9,34],[15,39,9,37,"require"],[15,46,9,44],[15,47,9,44,"_dependencyMap"],[15,61,9,44],[15,115,9,94],[15,116,9,95],[16,2,10,0],[16,8,10,6,"LinkPreviewContext_1"],[16,28,10,26],[16,31,10,29,"require"],[16,38,10,36],[16,39,10,36,"_dependencyMap"],[16,53,10,36],[16,94,10,73],[16,95,10,74],[17,2,11,0],[17,8,11,6,"navigationParams_1"],[17,26,11,24],[17,29,11,27,"require"],[17,36,11,34],[17,37,11,34,"_dependencyMap"],[17,51,11,34],[17,77,11,56],[17,78,11,57],[18,2,12,0],[18,8,12,6,"useScreens_1"],[18,20,12,18],[18,23,12,21,"require"],[18,30,12,28],[18,31,12,28,"_dependencyMap"],[18,45,12,28],[18,65,12,44],[18,66,12,45],[19,2,13,0],[19,8,13,6,"Protected_1"],[19,19,13,17],[19,22,13,20,"require"],[19,29,13,27],[19,30,13,27,"_dependencyMap"],[19,44,13,27],[19,69,13,48],[19,70,13,49],[20,2,14,0],[20,8,14,6,"NativeStackNavigator"],[20,28,14,26],[20,31,14,29],[20,32,14,30],[20,33,14,31],[20,35,14,33,"createNativeStackNavigator_1"],[20,63,14,61],[20,64,14,62,"createNativeStackNavigator"],[20,90,14,88],[20,92,14,90],[20,93,14,91],[20,94,14,92,"Navigator"],[20,103,14,101],[21,2,15,0],[21,8,15,6,"RNStack"],[21,15,15,13],[21,18,15,16],[21,19,15,17],[21,20,15,18],[21,22,15,20,"withLayoutContext_1"],[21,41,15,39],[21,42,15,40,"withLayoutContext"],[21,59,15,57],[21,61,15,59,"NativeStackNavigator"],[21,81,15,79],[21,82,15,80],[22,2,16,0],[22,11,16,9,"isStackAction"],[22,24,16,22,"isStackAction"],[22,25,16,23,"action"],[22,31,16,29],[22,33,16,31],[23,4,17,4],[23,11,17,12,"action"],[23,17,17,18],[23,18,17,19,"type"],[23,22,17,23],[23,27,17,28],[23,33,17,34],[23,37,18,8,"action"],[23,43,18,14],[23,44,18,15,"type"],[23,48,18,19],[23,53,18,24],[23,63,18,34],[23,67,19,8,"action"],[23,73,19,14],[23,74,19,15,"type"],[23,78,19,19],[23,83,19,24],[23,88,19,29],[23,92,20,8,"action"],[23,98,20,14],[23,99,20,15,"type"],[23,103,20,19],[23,108,20,24],[23,120,20,36],[23,124,21,8,"action"],[23,130,21,14],[23,131,21,15,"type"],[23,135,21,19],[23,140,21,24],[23,149,21,33],[23,153,22,8,"action"],[23,159,22,14],[23,160,22,15,"type"],[23,164,22,19],[23,169,22,24],[23,178,22,33],[24,2,23,0],[25,2,24,0],[25,8,24,6,"isPreviewAction"],[25,23,24,21],[25,26,24,25,"action"],[25,32,24,31],[25,36,24,36],[25,37,24,37],[25,38,24,38,"action"],[25,44,24,44],[25,45,24,45,"payload"],[25,52,24,52],[25,56,25,4],[25,64,25,12],[25,68,25,16,"action"],[25,74,25,22],[25,75,25,23,"payload"],[25,82,25,30],[25,86,26,4],[25,93,26,11,"action"],[25,99,26,17],[25,100,26,18,"payload"],[25,107,26,25],[25,108,26,26,"params"],[25,114,26,32],[25,119,26,37],[25,127,26,45],[25,131,27,4],[25,132,27,5],[25,133,27,6],[25,134,27,7],[25,135,27,8],[25,137,27,10,"navigationParams_1"],[25,155,27,28],[25,156,27,29,"getInternalExpoRouterParams"],[25,183,27,56],[25,185,27,58,"action"],[25,191,27,64],[25,192,27,65,"payload"],[25,199,27,72],[25,201,27,74,"params"],[25,207,27,80],[25,211,27,84,"undefined"],[25,220,27,93],[25,221,27,94],[25,222,27,95],[25,269,27,142],[25,270,27,143],[26,2,28,0],[27,0,29,0],[28,0,30,0],[29,0,31,0],[30,0,32,0],[31,0,33,0],[32,0,34,0],[33,0,35,0],[34,0,36,0],[35,2,37,0],[35,8,37,6,"stackRouterOverride"],[35,27,37,25],[35,30,37,29,"original"],[35,38,37,37],[35,42,37,42],[36,4,38,4],[36,11,38,11],[37,6,39,8,"getStateForAction"],[37,23,39,25],[37,25,39,27,"getStateForAction"],[37,26,39,28,"state"],[37,31,39,33],[37,33,39,35,"action"],[37,39,39,41],[37,41,39,43,"options"],[37,48,39,50],[37,53,39,55],[38,8,40,12],[38,12,40,16,"action"],[38,18,40,22],[38,19,40,23,"target"],[38,25,40,29],[38,29,40,33,"action"],[38,35,40,39],[38,36,40,40,"target"],[38,42,40,46],[38,47,40,51,"state"],[38,52,40,56],[38,53,40,57,"key"],[38,56,40,60],[38,58,40,62],[39,10,41,16],[39,17,41,23],[39,21,41,27],[40,8,42,12],[41,8,43,12],[41,12,43,16],[41,13,43,17,"isStackAction"],[41,26,43,30],[41,27,43,31,"action"],[41,33,43,37],[41,34,43,38],[41,36,43,40],[42,10,44,16],[42,17,44,23,"original"],[42,25,44,31],[42,26,44,32,"getStateForAction"],[42,43,44,49],[42,44,44,50,"state"],[42,49,44,55],[42,51,44,57,"action"],[42,57,44,63],[42,59,44,65,"options"],[42,66,44,72],[42,67,44,73],[43,8,45,12],[44,8,46,12],[45,8,47,12],[45,14,47,18,"actionSingularOptions"],[45,35,47,39],[45,38,47,42,"action"],[45,44,47,48],[45,45,47,49,"payload"],[45,52,47,56],[45,56,47,60],[45,66,47,70],[45,70,47,74,"action"],[45,76,47,80],[45,77,47,81,"payload"],[45,84,47,88],[45,87,48,18,"action"],[45,93,48,24],[45,94,48,25,"payload"],[45,101,48,32],[45,102,48,33,"singular"],[45,110,48,41],[45,113,49,18,"undefined"],[45,122,49,27],[46,8,50,12],[47,8,51,12],[47,17,51,21,"getIdFunction"],[47,30,51,34,"getIdFunction"],[47,31,51,34],[47,33,51,37],[48,10,52,16],[49,10,53,16],[49,14,53,20],[49,16,53,22],[49,25,53,31],[49,29,53,35,"action"],[49,35,53,41],[49,36,53,42],[49,40,54,20],[49,41,54,21,"action"],[49,47,54,27],[49,48,54,28,"payload"],[49,55,54,35],[49,59,55,20],[49,61,55,22],[49,67,55,28],[49,71,55,32,"action"],[49,77,55,38],[49,78,55,39,"payload"],[49,85,55,46],[49,86,55,47],[49,90,56,20],[49,97,56,27,"action"],[49,103,56,33],[49,104,56,34,"payload"],[49,111,56,41],[49,112,56,42,"name"],[49,116,56,46],[49,121,56,51],[49,129,56,59],[49,131,56,61],[50,12,57,20],[51,10,58,16],[52,10,59,16],[52,16,59,22,"actionName"],[52,26,59,32],[52,29,59,35,"action"],[52,35,59,41],[52,36,59,42,"payload"],[52,43,59,49],[52,44,59,50,"name"],[52,48,59,54],[53,10,60,16],[54,12,61,16],[55,12,62,16,"getActionSingularIdFn"],[55,33,62,37],[55,34,62,38,"actionSingularOptions"],[55,55,62,59],[55,57,62,61,"actionName"],[55,67,62,71],[55,68,62,72],[56,12,63,20],[57,12,64,20,"options"],[57,19,64,27],[57,20,64,28,"routeGetIdList"],[57,34,64,42],[57,35,64,43,"actionName"],[57,45,64,53],[58,10,64,54],[59,8,65,12],[60,8,66,12],[60,14,66,18],[61,10,66,20,"routeParamList"],[62,8,66,35],[62,9,66,36],[62,12,66,39,"options"],[62,19,66,46],[63,8,67,12],[63,16,67,20,"action"],[63,22,67,26],[63,23,67,27,"type"],[63,27,67,31],[64,10,68,16],[64,15,68,21],[64,21,68,27],[65,10,69,16],[65,15,69,21],[65,25,69,31],[66,12,69,33],[67,14,70,20],[67,18,70,24],[67,19,70,25,"state"],[67,24,70,30],[67,25,70,31,"routeNames"],[67,35,70,41],[67,36,70,42,"includes"],[67,44,70,50],[67,45,70,51,"action"],[67,51,70,57],[67,52,70,58,"payload"],[67,59,70,65],[67,60,70,66,"name"],[67,64,70,70],[67,65,70,71],[67,67,70,73],[68,16,71,24],[68,23,71,31],[68,27,71,35],[69,14,72,20],[70,14,73,20],[71,14,74,20],[71,20,74,26,"getId"],[71,25,74,31],[71,28,74,34,"getIdFunction"],[71,41,74,47],[71,42,74,48],[71,43,74,49],[72,14,75,20],[73,14,76,20],[74,14,77,20],[74,20,77,26,"id"],[74,22,77,28],[74,25,77,31,"getId"],[74,30,77,36],[74,33,77,39],[75,16,77,41,"params"],[75,22,77,47],[75,24,77,49,"action"],[75,30,77,55],[75,31,77,56,"payload"],[75,38,77,63],[75,39,77,64,"params"],[76,14,77,71],[76,15,77,72],[76,16,77,73],[77,14,78,20],[77,18,78,24,"route"],[77,23,78,29],[78,14,79,20],[78,18,79,24,"id"],[78,20,79,26],[78,25,79,31,"undefined"],[78,34,79,40],[78,36,79,42],[79,16,80,24,"route"],[79,21,80,29],[79,24,80,32,"state"],[79,29,80,37],[79,30,80,38,"routes"],[79,36,80,44],[79,37,80,45,"findLast"],[79,45,80,53],[79,46,80,55,"route"],[79,51,80,60],[79,55,80,65,"route"],[79,60,80,70],[79,61,80,71,"name"],[79,65,80,75],[79,70,80,80,"action"],[79,76,80,86],[79,77,80,87,"payload"],[79,84,80,94],[79,85,80,95,"name"],[79,89,80,99],[79,93,80,103,"id"],[79,95,80,105],[79,100,80,110,"getId"],[79,105,80,115],[79,108,80,118],[80,18,80,120,"params"],[80,24,80,126],[80,26,80,128,"route"],[80,31,80,133],[80,32,80,134,"params"],[81,16,80,141],[81,17,80,142],[81,18,80,143],[81,19,80,144],[82,14,81,20],[82,15,81,21],[82,21,82,25],[82,25,82,29,"action"],[82,31,82,35],[82,32,82,36,"type"],[82,36,82,40],[82,41,82,45],[82,51,82,55],[82,53,82,57],[83,16,83,24],[83,22,83,30,"currentRoute"],[83,34,83,42],[83,37,83,45,"state"],[83,42,83,50],[83,43,83,51,"routes"],[83,49,83,57],[83,50,83,58,"state"],[83,55,83,63],[83,56,83,64,"index"],[83,61,83,69],[83,62,83,70],[84,16,84,24],[85,16,85,24],[85,20,85,28,"action"],[85,26,85,34],[85,27,85,35,"payload"],[85,34,85,42],[85,35,85,43,"name"],[85,39,85,47],[85,44,85,52,"currentRoute"],[85,56,85,64],[85,57,85,65,"name"],[85,61,85,69],[85,65,85,73],[85,66,85,74,"isPreviewAction"],[85,81,85,89],[85,82,85,90,"action"],[85,88,85,96],[85,89,85,97],[85,91,85,99],[86,18,86,28,"route"],[86,23,86,33],[86,26,86,36,"currentRoute"],[86,38,86,48],[87,16,87,24],[87,17,87,25],[87,23,88,29],[87,27,88,33,"action"],[87,33,88,39],[87,34,88,40,"payload"],[87,41,88,47],[87,42,88,48,"pop"],[87,45,88,51],[87,47,88,53],[88,18,89,28,"route"],[88,23,89,33],[88,26,89,36,"state"],[88,31,89,41],[88,32,89,42,"routes"],[88,38,89,48],[88,39,89,49,"findLast"],[88,47,89,57],[88,48,89,59,"route"],[88,53,89,64],[88,57,89,69,"route"],[88,62,89,74],[88,63,89,75,"name"],[88,67,89,79],[88,72,89,84,"action"],[88,78,89,90],[88,79,89,91,"payload"],[88,86,89,98],[88,87,89,99,"name"],[88,91,89,103],[88,92,89,104],[89,16,90,24],[90,14,91,20],[91,14,92,20],[92,14,93,20],[92,18,93,24,"isPreviewAction"],[92,33,93,39],[92,34,93,40,"action"],[92,40,93,46],[92,41,93,47],[92,45,93,51],[92,46,93,52,"route"],[92,51,93,57],[92,53,93,59],[93,16,94,24,"route"],[93,21,94,29],[93,24,94,32,"state"],[93,29,94,37],[93,30,94,38,"preloadedRoutes"],[93,45,94,53],[93,46,94,54,"find"],[93,50,94,58],[93,51,94,60,"route"],[93,56,94,65],[93,60,94,70,"route"],[93,65,94,75],[93,66,94,76,"name"],[93,70,94,80],[93,75,94,85,"action"],[93,81,94,91],[93,82,94,92,"payload"],[93,89,94,99],[93,90,94,100,"name"],[93,94,94,104],[93,98,94,108,"id"],[93,100,94,110],[93,105,94,115,"route"],[93,110,94,120],[93,111,94,121,"key"],[93,114,94,124],[93,115,94,125],[94,14,95,20],[95,14,96,20],[96,14,97,20],[96,18,97,24],[96,19,97,25,"route"],[96,24,97,30],[96,26,97,32],[97,16,98,24,"route"],[97,21,98,29],[97,24,98,32,"state"],[97,29,98,37],[97,30,98,38,"preloadedRoutes"],[97,45,98,53],[97,46,98,54,"find"],[97,50,98,58],[97,51,98,60,"route"],[97,56,98,65],[97,60,98,70,"route"],[97,65,98,75],[97,66,98,76,"name"],[97,70,98,80],[97,75,98,85,"action"],[97,81,98,91],[97,82,98,92,"payload"],[97,89,98,99],[97,90,98,100,"name"],[97,94,98,104],[97,98,98,108,"id"],[97,100,98,110],[97,105,98,115,"getId"],[97,110,98,120],[97,113,98,123],[98,18,98,125,"params"],[98,24,98,131],[98,26,98,133,"route"],[98,31,98,138],[98,32,98,139,"params"],[99,16,98,146],[99,17,98,147],[99,18,98,148],[99,19,98,149],[100,14,99,20],[101,14,100,20],[101,18,100,24,"params"],[101,24,100,30],[102,14,101,20],[102,18,101,24,"action"],[102,24,101,30],[102,25,101,31,"type"],[102,29,101,35],[102,34,101,40],[102,44,101,50],[102,48,101,54,"action"],[102,54,101,60],[102,55,101,61,"payload"],[102,62,101,68],[102,63,101,69,"merge"],[102,68,101,74],[102,72,101,78,"route"],[102,77,101,83],[102,79,101,85],[103,16,102,24,"params"],[103,22,102,30],[103,25,103,28,"action"],[103,31,103,34],[103,32,103,35,"payload"],[103,39,103,42],[103,40,103,43,"params"],[103,46,103,49],[103,51,103,54,"undefined"],[103,60,103,63],[103,64,104,32,"routeParamList"],[103,78,104,46],[103,79,104,47,"action"],[103,85,104,53],[103,86,104,54,"payload"],[103,93,104,61],[103,94,104,62,"name"],[103,98,104,66],[103,99,104,67],[103,104,104,72,"undefined"],[103,113,104,81],[103,116,104,81,"Object"],[103,122,104,81],[103,123,104,81,"assign"],[103,129,104,81],[103,134,106,39,"routeParamList"],[103,148,106,53],[103,149,106,54,"action"],[103,155,106,60],[103,156,106,61,"payload"],[103,163,106,68],[103,164,106,69,"name"],[103,168,106,73],[103,169,106,74],[103,171,107,39,"route"],[103,176,107,44],[103,177,107,45,"params"],[103,183,107,51],[103,185,108,39,"action"],[103,191,108,45],[103,192,108,46,"payload"],[103,199,108,53],[103,200,108,54,"params"],[103,206,108,60],[103,210,110,34,"route"],[103,215,110,39],[103,216,110,40,"params"],[103,222,110,46],[104,14,111,20],[104,15,111,21],[104,21,112,25],[105,16,113,24,"params"],[105,22,113,30],[105,25,114,28,"routeParamList"],[105,39,114,42],[105,40,114,43,"action"],[105,46,114,49],[105,47,114,50,"payload"],[105,54,114,57],[105,55,114,58,"name"],[105,59,114,62],[105,60,114,63],[105,65,114,68,"undefined"],[105,74,114,77],[105,77,114,77,"Object"],[105,83,114,77],[105,84,114,77,"assign"],[105,90,114,77],[105,95,116,39,"routeParamList"],[105,109,116,53],[105,110,116,54,"action"],[105,116,116,60],[105,117,116,61,"payload"],[105,124,116,68],[105,125,116,69,"name"],[105,129,116,73],[105,130,116,74],[105,132,117,39,"action"],[105,138,117,45],[105,139,117,46,"payload"],[105,146,117,53],[105,147,117,54,"params"],[105,153,117,60],[105,157,119,34,"action"],[105,163,119,40],[105,164,119,41,"payload"],[105,171,119,48],[105,172,119,49,"params"],[105,178,119,55],[106,14,120,20],[107,14,121,20],[107,18,121,24,"routes"],[107,24,121,30],[108,14,122,20],[108,18,122,24,"route"],[108,23,122,29],[108,25,122,31],[109,16,123,24],[109,20,123,28,"action"],[109,26,123,34],[109,27,123,35,"type"],[109,31,123,39],[109,36,123,44],[109,46,123,54],[109,50,123,58,"action"],[109,56,123,64],[109,57,123,65,"payload"],[109,64,123,72],[109,65,123,73,"pop"],[109,68,123,76],[109,70,123,78],[110,18,124,28,"routes"],[110,24,124,34],[110,27,124,37],[110,29,124,39],[111,18,125,28],[112,18,126,28],[112,23,126,33],[112,29,126,39,"r"],[112,30,126,40],[112,34,126,44,"state"],[112,39,126,49],[112,40,126,50,"routes"],[112,46,126,56],[112,48,126,58],[113,20,127,32],[113,24,127,36,"r"],[113,25,127,37],[113,26,127,38,"key"],[113,29,127,41],[113,34,127,46,"route"],[113,39,127,51],[113,40,127,52,"key"],[113,43,127,55],[113,45,127,57],[114,22,128,36,"routes"],[114,28,128,42],[114,29,128,43,"push"],[114,33,128,47],[114,34,128,47,"Object"],[114,40,128,47],[114,41,128,47,"assign"],[114,47,128,47],[114,52,129,43,"route"],[114,57,129,48],[115,24,130,40,"path"],[115,28,130,44],[115,30,130,46,"action"],[115,36,130,52],[115,37,130,53,"payload"],[115,44,130,60],[115,45,130,61,"path"],[115,49,130,65],[115,54,130,70,"undefined"],[115,63,130,79],[115,66,130,82,"action"],[115,72,130,88],[115,73,130,89,"payload"],[115,80,130,96],[115,81,130,97,"path"],[115,85,130,101],[115,88,130,104,"route"],[115,93,130,109],[115,94,130,110,"path"],[115,98,130,114],[116,24,131,40,"params"],[117,22,131,46],[117,24,132,37],[117,25,132,38],[118,22,133,36],[119,20,134,32],[120,20,135,32,"routes"],[120,26,135,38],[120,27,135,39,"push"],[120,31,135,43],[120,32,135,44,"r"],[120,33,135,45],[120,34,135,46],[121,18,136,28],[122,16,137,24],[122,17,137,25],[122,23,138,29],[123,18,139,28],[124,18,140,28],[125,18,141,28],[126,18,142,28],[126,22,142,32,"id"],[126,24,142,34],[126,29,142,39,"undefined"],[126,38,142,48],[126,40,142,50],[127,20,143,32,"routes"],[127,26,143,38],[127,29,143,41,"state"],[127,34,143,46],[127,35,143,47,"routes"],[127,41,143,53],[127,42,143,54,"filter"],[127,48,143,60],[127,49,143,62,"r"],[127,50,143,63],[127,54,143,68,"r"],[127,55,143,69],[127,56,143,70,"key"],[127,59,143,73],[127,64,143,78,"route"],[127,69,143,83],[127,70,143,84,"key"],[127,73,143,87],[127,74,143,88],[128,18,144,28],[128,19,144,29],[128,25,145,33],[128,29,145,37,"action"],[128,35,145,43],[128,36,145,44,"type"],[128,40,145,48],[128,45,145,53],[128,55,145,63],[128,59,145,67,"state"],[128,64,145,72],[128,65,145,73,"routes"],[128,71,145,79],[128,72,145,80,"length"],[128,78,145,86],[128,81,145,89],[128,82,145,90],[128,84,145,92],[129,20,146,32],[130,20,147,32],[130,26,147,38,"lastRoute"],[130,35,147,47],[130,38,147,50,"state"],[130,43,147,55],[130,44,147,56,"routes"],[130,50,147,62],[130,51,147,63,"state"],[130,56,147,68],[130,57,147,69,"routes"],[130,63,147,75],[130,64,147,76,"length"],[130,70,147,82],[130,73,147,85],[130,74,147,86],[130,75,147,87],[131,20,148,32],[131,24,148,36],[131,25,148,37],[131,26,148,38],[131,28,148,40,"useScreens_1"],[131,40,148,52],[131,41,148,53,"getSingularId"],[131,54,148,66],[131,56,148,68,"lastRoute"],[131,65,148,77],[131,66,148,78,"name"],[131,70,148,82],[131,72,148,84],[132,22,148,86,"params"],[132,28,148,92],[132,30,148,94,"lastRoute"],[132,39,148,103],[132,40,148,104,"params"],[133,20,148,111],[133,21,148,112],[133,22,148,113],[133,27,149,36],[133,28,149,37],[133,29,149,38],[133,31,149,40,"useScreens_1"],[133,43,149,52],[133,44,149,53,"getSingularId"],[133,57,149,66],[133,59,149,68,"route"],[133,64,149,73],[133,65,149,74,"name"],[133,69,149,78],[133,71,149,80],[134,22,149,82,"params"],[135,20,149,89],[135,21,149,90],[135,22,149,91],[135,24,149,93],[136,22,150,36,"routes"],[136,28,150,42],[136,31,150,45,"state"],[136,36,150,50],[136,37,150,51,"routes"],[136,43,150,57],[136,44,150,58,"slice"],[136,49,150,63],[136,50,150,64],[136,51,150,65],[136,53,150,67],[136,54,150,68],[136,55,150,69],[136,56,150,70],[137,20,151,32],[137,21,151,33],[137,27,152,37],[138,22,153,36,"routes"],[138,28,153,42],[138,31,153,45],[138,32,153,46],[138,35,153,49,"state"],[138,40,153,54],[138,41,153,55,"routes"],[138,47,153,61],[138,48,153,62],[139,20,154,32],[140,18,155,28],[140,19,155,29],[140,25,156,33],[141,20,157,32,"routes"],[141,26,157,38],[141,29,157,41],[141,30,157,42],[141,33,157,45,"state"],[141,38,157,50],[141,39,157,51,"routes"],[141,45,157,57],[141,46,157,58],[142,18,158,28],[143,18,159,28],[144,18,160,28],[145,18,161,28],[145,24,161,34,"key"],[145,27,161,37],[145,30,161,40,"routes"],[145,36,161,46],[145,37,161,47,"length"],[145,43,161,53],[145,48,161,58,"state"],[145,53,161,63],[145,54,161,64,"routes"],[145,60,161,70],[145,61,161,71,"length"],[145,67,161,77],[145,71,161,81],[145,72,161,82,"isPreviewAction"],[145,87,161,97],[145,88,161,98,"action"],[145,94,161,104],[145,95,161,105],[145,98,162,34],[145,101,162,37,"action"],[145,107,162,43],[145,108,162,44,"payload"],[145,115,162,51],[145,116,162,52,"name"],[145,120,162,56],[145,124,162,60],[145,125,162,61],[145,126,162,62],[145,128,162,64,"non_secure_1"],[145,140,162,76],[145,141,162,77,"nanoid"],[145,147,162,83],[145,149,162,85],[145,150,162,86],[145,152,162,88],[145,155,163,34,"route"],[145,160,163,39],[145,161,163,40,"key"],[145,164,163,43],[146,18,164,28,"routes"],[146,24,164,34],[146,25,164,35,"push"],[146,29,164,39],[146,30,164,39,"Object"],[146,36,164,39],[146,37,164,39,"assign"],[146,43,164,39],[146,48,165,35,"route"],[146,53,165,40],[147,20,166,32,"key"],[147,23,166,35],[148,20,167,32,"path"],[148,24,167,36],[148,26,167,38,"action"],[148,32,167,44],[148,33,167,45,"type"],[148,37,167,49],[148,42,167,54],[148,52,167,64],[148,56,167,68,"action"],[148,62,167,74],[148,63,167,75,"payload"],[148,70,167,82],[148,71,167,83,"path"],[148,75,167,87],[148,80,167,92,"undefined"],[148,89,167,101],[148,92,168,38,"action"],[148,98,168,44],[148,99,168,45,"payload"],[148,106,168,52],[148,107,168,53,"path"],[148,111,168,57],[148,114,169,38,"route"],[148,119,169,43],[148,120,169,44,"path"],[148,124,169,48],[149,20,170,32,"params"],[150,18,170,38],[150,20,171,29],[150,21,171,30],[151,18,172,28],[152,18,173,28],[153,18,174,28],[154,18,175,28],[155,18,176,28],[156,18,177,28],[157,18,178,28],[158,18,179,28],[159,18,180,28],[160,18,181,28],[161,16,182,24],[162,14,183,20],[162,15,183,21],[162,21,184,25],[163,16,185,24,"routes"],[163,22,185,30],[163,25,185,33],[163,26,186,28],[163,29,186,31,"state"],[163,34,186,36],[163,35,186,37,"routes"],[163,41,186,43],[163,43,187,28],[164,18,188,32,"key"],[164,21,188,35],[164,23,188,37],[164,26,188,40,"action"],[164,32,188,46],[164,33,188,47,"payload"],[164,40,188,54],[164,41,188,55,"name"],[164,45,188,59],[164,49,188,63],[164,50,188,64],[164,51,188,65],[164,53,188,67,"non_secure_1"],[164,65,188,79],[164,66,188,80,"nanoid"],[164,72,188,86],[164,74,188,88],[164,75,188,89],[164,77,188,91],[165,18,189,32,"name"],[165,22,189,36],[165,24,189,38,"action"],[165,30,189,44],[165,31,189,45,"payload"],[165,38,189,52],[165,39,189,53,"name"],[165,43,189,57],[166,18,190,32,"path"],[166,22,190,36],[166,24,190,38,"action"],[166,30,190,44],[166,31,190,45,"type"],[166,35,190,49],[166,40,190,54],[166,50,190,64],[166,53,190,67,"action"],[166,59,190,73],[166,60,190,74,"payload"],[166,67,190,81],[166,68,190,82,"path"],[166,72,190,86],[166,75,190,89,"undefined"],[166,84,190,98],[167,18,191,32,"params"],[168,16,192,28],[168,17,192,29],[168,18,193,25],[169,14,194,20],[170,14,195,20],[171,14,196,20],[172,14,197,20],[172,20,197,26,"result"],[172,26,197,32],[172,29,197,32,"Object"],[172,35,197,32],[172,36,197,32,"assign"],[172,42,197,32],[172,47,198,27,"state"],[172,52,198,32],[173,16,199,24,"index"],[173,21,199,29],[173,23,199,31,"routes"],[173,29,199,37],[173,30,199,38,"length"],[173,36,199,44],[173,39,199,47],[173,40,199,48],[174,16,200,24,"preloadedRoutes"],[174,31,200,39],[174,33,200,41,"state"],[174,38,200,46],[174,39,200,47,"preloadedRoutes"],[174,54,200,62],[174,55,200,63,"filter"],[174,61,200,69],[174,62,200,71,"route"],[174,67,200,76],[174,71,200,81,"routes"],[174,77,200,87],[174,78,200,88,"routes"],[174,84,200,94],[174,85,200,95,"length"],[174,91,200,101],[174,94,200,104],[174,95,200,105],[174,96,200,106],[174,97,200,107,"key"],[174,100,200,110],[174,105,200,115,"route"],[174,110,200,120],[174,111,200,121,"key"],[174,114,200,124],[174,115,200,125],[175,16,201,24,"routes"],[176,14,201,30],[176,16,202,21],[177,14,203,20],[177,18,203,24,"actionSingularOptions"],[177,39,203,45],[177,41,203,47],[178,16,204,24],[178,23,204,31,"filterSingular"],[178,37,204,45],[178,38,204,46,"result"],[178,44,204,52],[178,46,204,54,"getId"],[178,51,204,59],[178,52,204,60],[179,14,205,20],[180,14,206,20],[180,21,206,27,"result"],[180,27,206,33],[181,14,207,20],[182,14,208,20],[183,14,209,20],[184,14,210,20],[185,14,211,20],[186,14,212,20],[187,14,213,20],[188,14,214,20],[189,14,215,20],[190,12,216,16],[191,10,217,16],[191,15,217,21],[191,24,217,30],[192,12,217,32],[193,14,218,20],[194,14,219,20],[195,14,220,20],[195,18,220,24],[195,19,220,25,"state"],[195,24,220,30],[195,25,220,31,"routeNames"],[195,35,220,41],[195,36,220,42,"includes"],[195,44,220,50],[195,45,220,51,"action"],[195,51,220,57],[195,52,220,58,"payload"],[195,59,220,65],[195,60,220,66,"name"],[195,64,220,70],[195,65,220,71],[195,67,220,73],[196,16,221,24],[196,23,221,31],[196,27,221,35],[197,14,222,20],[198,14,223,20],[199,14,224,20],[199,20,224,26,"getId"],[199,25,224,31],[199,28,224,34,"options"],[199,35,224,41],[199,36,224,42,"routeGetIdList"],[199,50,224,56],[199,51,224,57,"action"],[199,57,224,63],[199,58,224,64,"payload"],[199,65,224,71],[199,66,224,72,"name"],[199,70,224,76],[199,71,224,77],[200,14,225,20],[200,20,225,26,"id"],[200,22,225,28],[200,25,225,31,"getId"],[200,30,225,36],[200,33,225,39],[201,16,225,41,"params"],[201,22,225,47],[201,24,225,49,"action"],[201,30,225,55],[201,31,225,56,"payload"],[201,38,225,63],[201,39,225,64,"params"],[202,14,225,71],[202,15,225,72],[202,16,225,73],[203,14,226,20],[203,18,226,24,"route"],[203,23,226,29],[204,14,227,20],[204,18,227,24,"id"],[204,20,227,26],[204,25,227,31,"undefined"],[204,34,227,40],[204,36,227,42],[205,16,228,24,"route"],[205,21,228,29],[205,24,228,32,"state"],[205,29,228,37],[205,30,228,38,"routes"],[205,36,228,44],[205,37,228,45,"find"],[205,41,228,49],[205,42,228,51,"route"],[205,47,228,56],[205,51,228,61,"route"],[205,56,228,66],[205,57,228,67,"name"],[205,61,228,71],[205,66,228,76,"action"],[205,72,228,82],[205,73,228,83,"payload"],[205,80,228,90],[205,81,228,91,"name"],[205,85,228,95],[205,89,228,99,"id"],[205,91,228,101],[205,96,228,106,"getId"],[205,101,228,111],[205,104,228,114],[206,18,228,116,"params"],[206,24,228,122],[206,26,228,124,"route"],[206,31,228,129],[206,32,228,130,"params"],[207,16,228,137],[207,17,228,138],[207,18,228,139],[207,19,228,140],[208,14,229,20],[209,14,230,20],[209,18,230,24,"route"],[209,23,230,29],[209,25,230,31],[210,16,231,24],[210,23,231,24,"Object"],[210,29,231,24],[210,30,231,24,"assign"],[210,36,231,24],[210,41,232,31,"state"],[210,46,232,36],[211,18,233,28,"routes"],[211,24,233,34],[211,26,233,36,"state"],[211,31,233,41],[211,32,233,42,"routes"],[211,38,233,48],[211,39,233,49,"map"],[211,42,233,52],[211,43,233,54,"r"],[211,44,233,55],[211,48,233,60],[212,20,234,32],[212,24,234,36,"r"],[212,25,234,37],[212,26,234,38,"key"],[212,29,234,41],[212,34,234,46,"route"],[212,39,234,51],[212,41,234,53,"key"],[212,44,234,56],[212,46,234,58],[213,22,235,36],[213,29,235,43,"r"],[213,30,235,44],[214,20,236,32],[215,20,237,32],[215,27,237,32,"Object"],[215,33,237,32],[215,34,237,32,"assign"],[215,40,237,32],[215,45,238,39,"r"],[215,46,238,40],[216,22,239,36,"params"],[216,28,239,42],[216,30,239,44,"routeParamList"],[216,44,239,58],[216,45,239,59,"action"],[216,51,239,65],[216,52,239,66,"payload"],[216,59,239,73],[216,60,239,74,"name"],[216,64,239,78],[216,65,239,79],[216,70,239,84,"undefined"],[216,79,239,93],[216,82,239,93,"Object"],[216,88,239,93],[216,89,239,93,"assign"],[216,95,239,93],[216,100,241,47,"routeParamList"],[216,114,241,61],[216,115,241,62,"action"],[216,121,241,68],[216,122,241,69,"payload"],[216,129,241,76],[216,130,241,77,"name"],[216,134,241,81],[216,135,241,82],[216,137,242,47,"action"],[216,143,242,53],[216,144,242,54,"payload"],[216,151,242,61],[216,152,242,62,"params"],[216,158,242,68],[216,162,244,42,"action"],[216,168,244,48],[216,169,244,49,"payload"],[216,176,244,56],[216,177,244,57,"params"],[217,20,244,63],[218,18,246,28],[218,19,246,29],[219,16,246,30],[220,14,248,20],[220,15,248,21],[220,21,249,25],[221,16,250,24],[222,16,251,24],[222,22,251,30,"currentPreloadedRoute"],[222,43,251,51],[222,46,251,54],[223,18,252,28,"key"],[223,21,252,31],[223,23,252,33],[223,26,252,36,"action"],[223,32,252,42],[223,33,252,43,"payload"],[223,40,252,50],[223,41,252,51,"name"],[223,45,252,55],[223,49,252,59],[223,50,252,60],[223,51,252,61],[223,53,252,63,"non_secure_1"],[223,65,252,75],[223,66,252,76,"nanoid"],[223,72,252,82],[223,74,252,84],[223,75,252,85],[223,77,252,87],[224,18,253,28,"name"],[224,22,253,32],[224,24,253,34,"action"],[224,30,253,40],[224,31,253,41,"payload"],[224,38,253,48],[224,39,253,49,"name"],[224,43,253,53],[225,18,254,28,"params"],[225,24,254,34],[225,26,254,36,"routeParamList"],[225,40,254,50],[225,41,254,51,"action"],[225,47,254,57],[225,48,254,58,"payload"],[225,55,254,65],[225,56,254,66,"name"],[225,60,254,70],[225,61,254,71],[225,66,254,76,"undefined"],[225,75,254,85],[225,78,254,85,"Object"],[225,84,254,85],[225,85,254,85,"assign"],[225,91,254,85],[225,96,256,39,"routeParamList"],[225,110,256,53],[225,111,256,54,"action"],[225,117,256,60],[225,118,256,61,"payload"],[225,125,256,68],[225,126,256,69,"name"],[225,130,256,73],[225,131,256,74],[225,133,257,39,"action"],[225,139,257,45],[225,140,257,46,"payload"],[225,147,257,53],[225,148,257,54,"params"],[225,154,257,60],[225,158,259,34,"action"],[225,164,259,40],[225,165,259,41,"payload"],[225,172,259,48],[225,173,259,49,"params"],[226,16,260,24],[226,17,260,25],[227,16,261,24],[228,16,262,24],[228,23,262,24,"Object"],[228,29,262,24],[228,30,262,24,"assign"],[228,36,262,24],[228,41,263,31,"state"],[228,46,263,36],[229,18,264,28],[230,18,265,28],[231,18,266,28],[232,18,267,28],[233,18,268,28],[234,18,269,28],[235,18,270,28,"preloadedRoutes"],[235,33,270,43],[235,35,270,45],[235,36,270,46,"currentPreloadedRoute"],[235,57,270,67],[235,58,270,68],[235,59,270,69,"concat"],[235,65,270,75],[235,66,270,76,"state"],[235,71,270,81],[235,72,270,82,"preloadedRoutes"],[235,87,270,97],[235,88,270,98,"filter"],[235,94,270,104],[235,95,270,106,"r"],[235,96,270,107],[235,100,270,112,"r"],[235,101,270,113],[235,102,270,114,"name"],[235,106,270,118],[235,111,270,123,"action"],[235,117,270,129],[235,118,270,130,"payload"],[235,125,270,137],[235,126,270,138,"name"],[235,130,270,142],[235,134,270,146,"id"],[235,136,270,148],[235,141,270,153,"getId"],[235,146,270,158],[235,149,270,161],[236,20,270,163,"params"],[236,26,270,169],[236,28,270,171,"r"],[236,29,270,172],[236,30,270,173,"params"],[237,18,270,180],[237,19,270,181],[237,20,270,182],[237,21,270,183],[238,18,271,28],[239,18,272,28],[240,18,273,28],[241,18,274,28],[242,18,275,28],[243,18,276,28],[244,18,277,28],[245,18,278,28],[246,18,279,28],[247,18,280,28],[248,18,281,28],[249,18,282,28],[250,18,283,28],[251,18,284,28],[252,18,285,28],[253,18,286,28],[254,18,287,28],[255,18,288,28],[256,16,288,28],[257,14,290,20],[258,12,291,16],[259,10,292,16],[260,12,292,25],[261,14,293,20],[261,21,293,27,"original"],[261,29,293,35],[261,30,293,36,"getStateForAction"],[261,47,293,53],[261,48,293,54,"state"],[261,53,293,59],[261,55,293,61,"action"],[261,61,293,67],[261,63,293,69,"options"],[261,70,293,76],[261,71,293,77],[262,12,294,16],[263,8,295,12],[264,6,296,8],[265,4,297,4],[265,5,297,5],[266,2,298,0],[266,3,298,1],[267,2,299,0,"exports"],[267,9,299,7],[267,10,299,8,"stackRouterOverride"],[267,29,299,27],[267,32,299,30,"stackRouterOverride"],[267,51,299,49],[268,2,300,0],[268,11,300,9,"getActionSingularIdFn"],[268,32,300,30,"getActionSingularIdFn"],[268,33,300,31,"actionGetId"],[268,44,300,42],[268,46,300,44,"name"],[268,50,300,48],[268,52,300,50],[269,4,301,4],[269,8,301,8],[269,15,301,15,"actionGetId"],[269,26,301,26],[269,31,301,31],[269,41,301,41],[269,43,301,43],[270,6,302,8],[270,13,302,16,"options"],[270,20,302,23],[270,24,302,28,"actionGetId"],[270,35,302,39],[270,36,302,40,"name"],[270,40,302,44],[270,42,302,46,"options"],[270,49,302,53],[270,50,302,54,"params"],[270,56,302,60],[270,60,302,64],[270,61,302,65],[270,62,302,66],[270,63,302,67],[271,4,303,4],[271,5,303,5],[271,11,304,9],[271,15,304,13,"actionGetId"],[271,26,304,24],[271,31,304,29],[271,35,304,33],[271,37,304,35],[272,6,305,8],[272,13,305,16,"options"],[272,20,305,23],[272,24,305,28],[272,25,305,29],[272,26,305,30],[272,28,305,32,"useScreens_1"],[272,40,305,44],[272,41,305,45,"getSingularId"],[272,54,305,58],[272,56,305,60,"name"],[272,60,305,64],[272,62,305,66,"options"],[272,69,305,73],[272,70,305,74],[273,4,306,4],[274,4,307,4],[274,11,307,11,"undefined"],[274,20,307,20],[275,2,308,0],[276,2,309,0],[277,0,310,0],[278,0,311,0],[279,0,312,0],[280,2,313,0],[280,11,313,9,"filterSingular"],[280,25,313,23,"filterSingular"],[280,26,313,24,"state"],[280,31,313,29],[280,33,313,31,"getId"],[280,38,313,36],[280,40,313,38],[281,4,314,4],[281,8,314,8],[281,9,314,9,"state"],[281,14,314,14],[281,16,314,16],[282,6,315,8],[282,13,315,15,"state"],[282,18,315,20],[283,4,316,4],[284,4,317,4],[284,8,317,8],[284,9,317,9,"state"],[284,14,317,14],[284,15,317,15,"routes"],[284,21,317,21],[284,23,317,23],[285,6,318,8],[285,13,318,15,"state"],[285,18,318,20],[286,4,319,4],[287,4,320,4],[287,10,320,10,"currentIndex"],[287,22,320,22],[287,25,320,25,"state"],[287,30,320,30],[287,31,320,31,"index"],[287,36,320,36],[287,40,320,40,"state"],[287,45,320,45],[287,46,320,46,"routes"],[287,52,320,52],[287,53,320,53,"length"],[287,59,320,59],[287,62,320,62],[287,63,320,63],[288,4,321,4],[288,10,321,10,"current"],[288,17,321,17],[288,20,321,20,"state"],[288,25,321,25],[288,26,321,26,"routes"],[288,32,321,32],[288,33,321,33,"currentIndex"],[288,45,321,45],[288,46,321,46],[289,4,322,4],[289,10,322,10,"name"],[289,14,322,14],[289,17,322,17,"current"],[289,24,322,24],[289,25,322,25,"name"],[289,29,322,29],[290,4,323,4],[290,10,323,10,"id"],[290,12,323,12],[290,15,323,15,"getId"],[290,20,323,20],[290,23,323,23],[291,6,323,25,"params"],[291,12,323,31],[291,14,323,33,"current"],[291,21,323,40],[291,22,323,41,"params"],[292,4,323,48],[292,5,323,49],[292,6,323,50],[293,4,324,4],[293,8,324,8],[293,9,324,9,"id"],[293,11,324,11],[293,13,324,13],[294,6,325,8],[294,13,325,15,"state"],[294,18,325,20],[295,4,326,4],[296,4,327,4],[297,4,328,4],[297,8,328,8,"routes"],[297,14,328,14],[297,17,328,17,"state"],[297,22,328,22],[297,23,328,23,"routes"],[297,29,328,29],[298,4,329,4,"routes"],[298,10,329,10],[298,13,329,13,"routes"],[298,19,329,19],[298,20,329,20,"filter"],[298,26,329,26],[298,27,329,27],[298,28,329,28,"route"],[298,33,329,33],[298,35,329,35,"index"],[298,40,329,40],[298,45,329,45],[299,6,330,8],[300,6,331,8],[300,10,331,12,"index"],[300,15,331,17],[300,20,331,22,"currentIndex"],[300,32,331,34],[300,34,331,36],[301,8,332,12],[301,15,332,19],[301,19,332,23],[302,6,333,8],[303,6,334,8],[304,6,335,8],[304,13,335,15,"name"],[304,17,335,19],[304,22,335,24,"route"],[304,27,335,29],[304,28,335,30,"name"],[304,32,335,34],[304,36,335,38,"id"],[304,38,335,40],[304,43,335,45,"getId"],[304,48,335,50],[304,51,335,53],[305,8,335,55,"params"],[305,14,335,61],[305,16,335,63,"route"],[305,21,335,68],[305,22,335,69,"params"],[306,6,335,76],[306,7,335,77],[306,8,335,78],[307,4,336,4],[307,5,336,5],[307,6,336,6],[308,4,337,4],[308,11,337,4,"Object"],[308,17,337,4],[308,18,337,4,"assign"],[308,24,337,4],[308,29,338,11,"state"],[308,34,338,16],[309,6,339,8,"index"],[309,11,339,13],[309,13,339,15,"routes"],[309,19,339,21],[309,20,339,22,"length"],[309,26,339,28],[309,29,339,31],[309,30,339,32],[310,6,340,8,"routes"],[311,4,340,14],[312,2,342,0],[313,2,343,0],[313,8,343,6,"Stack"],[313,13,343,11],[313,16,343,14,"Object"],[313,22,343,20],[313,23,343,21,"assign"],[313,29,343,27],[313,30,343,29,"props"],[313,35,343,34],[313,39,343,39],[314,4,344,4],[314,10,344,10],[315,6,344,12,"isStackAnimationDisabled"],[316,4,344,37],[316,5,344,38],[316,8,344,41],[316,9,344,42],[316,10,344,43],[316,12,344,45,"LinkPreviewContext_1"],[316,32,344,65],[316,33,344,66,"useLinkPreviewContext"],[316,54,344,87],[316,56,344,89],[316,57,344,90],[317,4,345,4],[317,10,345,10,"screenOptions"],[317,23,345,23],[317,26,345,26],[317,27,345,27],[317,28,345,28],[317,30,345,30,"react_1"],[317,37,345,37],[317,38,345,38,"useMemo"],[317,45,345,45],[317,47,345,47],[317,53,345,53],[318,6,346,8],[318,12,346,14,"condition"],[318,21,346,23],[318,24,346,26,"isStackAnimationDisabled"],[318,48,346,50],[318,51,346,53],[318,57,346,59],[318,61,346,63],[318,64,346,66,"shouldDisableAnimationBasedOnParams"],[318,99,346,101],[319,6,347,8],[319,13,347,15,"disableAnimationInScreenOptions"],[319,44,347,46],[319,45,347,47,"props"],[319,50,347,52],[319,51,347,53,"screenOptions"],[319,64,347,66],[319,66,347,68,"condition"],[319,75,347,77],[319,76,347,78],[320,4,348,4],[320,5,348,5],[320,7,348,7],[320,8,348,8,"props"],[320,13,348,13],[320,14,348,14,"screenOptions"],[320,27,348,27],[320,29,348,29,"isStackAnimationDisabled"],[320,53,348,53],[320,54,348,54],[320,55,348,55],[321,4,349,4],[321,24,349,12,"_reactJsxDevRuntime"],[321,43,349,12],[321,44,349,12,"jsxDEV"],[321,50,349,12],[321,51,349,13,"RNStack"],[321,58,349,20],[321,60,349,20,"Object"],[321,66,349,20],[321,67,349,20,"assign"],[321,73,349,20],[321,78,349,25,"props"],[321,83,349,30],[322,6,349,32,"screenOptions"],[322,19,349,45],[322,21,349,47,"screenOptions"],[322,34,349,61],[323,6,349,62,"UNSTABLE_router"],[323,21,349,77],[323,23,349,79,"exports"],[323,30,349,86],[323,31,349,87,"stackRouterOverride"],[324,4,349,107],[325,6,349,107,"fileName"],[325,14,349,107],[325,16,349,107,"_jsxFileName"],[325,28,349,107],[326,6,349,107,"lineNumber"],[326,16,349,107],[327,6,349,107,"columnNumber"],[327,18,349,107],[328,4,349,107],[328,11,349,108],[328,12,349,109],[329,2,350,0],[329,3,350,1],[329,5,350,3],[330,4,351,4,"Screen"],[330,10,351,10],[330,12,351,12,"RNStack"],[330,19,351,19],[330,20,351,20,"Screen"],[330,26,351,26],[331,4,352,4,"Protected"],[331,13,352,13],[331,15,352,15,"Protected_1"],[331,26,352,26],[331,27,352,27,"Protected"],[332,2,353,0],[332,3,353,1],[332,4,353,2],[333,2,354,0],[333,11,354,9,"disableAnimationInScreenOptions"],[333,42,354,40,"disableAnimationInScreenOptions"],[333,43,354,41,"options"],[333,50,354,48],[333,52,354,50,"condition"],[333,61,354,59],[333,63,354,61],[334,4,355,4],[334,8,355,8,"options"],[334,15,355,15],[334,19,355,19],[334,26,355,26,"options"],[334,33,355,33],[334,38,355,38],[334,48,355,48],[334,50,355,50],[335,6,356,8],[335,13,356,16,"props"],[335,18,356,21],[335,22,356,26],[336,8,357,12],[336,14,357,18,"oldOptions"],[336,24,357,28],[336,27,357,31,"options"],[336,34,357,38],[336,35,357,39,"props"],[336,40,357,44],[336,41,357,45],[337,8,358,12],[337,12,358,16,"condition"],[337,21,358,25],[337,22,358,26,"props"],[337,27,358,31],[337,28,358,32,"route"],[337,33,358,37],[337,34,358,38],[337,36,358,40],[338,10,359,16],[338,17,359,16,"Object"],[338,23,359,16],[338,24,359,16,"assign"],[338,30,359,16],[338,35,360,23,"oldOptions"],[338,45,360,33],[339,12,361,20,"animation"],[339,21,361,29],[339,23,361,31],[340,10,361,37],[341,8,363,12],[342,8,364,12],[342,15,364,19,"oldOptions"],[342,25,364,29],[342,29,364,33],[342,30,364,34],[342,31,364,35],[343,6,365,8],[343,7,365,9],[344,4,366,4],[345,4,367,4],[345,11,367,12,"props"],[345,16,367,17],[345,20,367,22],[346,6,368,8],[346,10,368,12,"condition"],[346,19,368,21],[346,20,368,22,"props"],[346,25,368,27],[346,26,368,28,"route"],[346,31,368,33],[346,32,368,34],[346,34,368,36],[347,8,369,12],[347,15,369,12,"Object"],[347,21,369,12],[347,22,369,12,"assign"],[347,28,369,12],[347,33,370,20,"options"],[347,40,370,27],[347,44,370,31],[347,45,370,32],[347,46,370,33],[348,10,371,16,"animation"],[348,19,371,25],[348,21,371,27],[349,8,371,33],[350,6,373,8],[351,6,374,8],[351,13,374,15,"options"],[351,20,374,22],[351,24,374,26],[351,25,374,27],[351,26,374,28],[352,4,375,4],[352,5,375,5],[353,2,376,0],[354,2,377,0],[354,11,377,9,"shouldDisableAnimationBasedOnParams"],[354,46,377,44,"shouldDisableAnimationBasedOnParams"],[354,47,377,45,"route"],[354,52,377,50],[354,54,377,52],[355,4,378,4],[355,10,378,10,"expoParams"],[355,20,378,20],[355,23,378,23],[355,24,378,24],[355,25,378,25],[355,27,378,27,"navigationParams_1"],[355,45,378,45],[355,46,378,46,"getInternalExpoRouterParams"],[355,73,378,73],[355,75,378,75,"route"],[355,80,378,80],[355,81,378,81,"params"],[355,87,378,87],[355,88,378,88],[356,4,379,4],[356,11,379,11],[356,12,379,12],[356,13,379,13,"expoParams"],[356,23,379,23],[356,24,379,24,"__internal_expo_router_no_animation"],[356,59,379,59],[357,2,380,0],[358,2,381,0,"exports"],[358,9,381,7],[358,10,381,8,"default"],[358,17,381,15],[358,20,381,18,"Stack"],[358,25,381,23],[359,2,382,0],[359,8,382,6,"StackRouter"],[359,19,382,17],[359,22,382,21,"options"],[359,29,382,28],[359,33,382,33],[360,4,383,4],[360,10,383,10,"router"],[360,16,383,16],[360,19,383,19],[360,20,383,20],[360,21,383,21],[360,23,383,23,"native_1"],[360,31,383,31],[360,32,383,32,"StackRouter"],[360,43,383,43],[360,45,383,45,"options"],[360,52,383,52],[360,53,383,53],[361,4,384,4],[361,11,384,4,"Object"],[361,17,384,4],[361,18,384,4,"assign"],[361,24,384,4],[361,29,385,11,"router"],[361,35,385,17],[361,37,386,11],[361,38,386,12],[361,39,386,13],[361,41,386,15,"exports"],[361,48,386,22],[361,49,386,23,"stackRouterOverride"],[361,68,386,42],[361,70,386,44,"router"],[361,76,386,50],[361,77,386,51],[362,2,388,0],[362,3,388,1],[363,2,389,0,"exports"],[363,9,389,7],[363,10,389,8,"StackRouter"],[363,21,389,19],[363,24,389,22,"StackRouter"],[363,35,389,33],[364,0,389,34],[364,3]],"functionMap":{"names":["<global>","isStackAction","isPreviewAction","stackRouterOverride","getStateForAction","getIdFunction","state.routes.findLast$argument_0","state.preloadedRoutes.find$argument_0","state.routes.filter$argument_0","state.preloadedRoutes.filter$argument_0","state.routes.find$argument_0","state.routes.map$argument_0","getActionSingularIdFn","<anonymous>","filterSingular","routes.filter$argument_0","Object.assign$argument_0","disableAnimationInScreenOptions","shouldDisableAnimationBasedOnParams","StackRouter"],"mappings":"AAA;ACe;CDO;wBEC;+IFG;4BGU;2BCE;YCY;aDc;sDEe,yFF;0DES,6CF;2DGK,iEH;2DGI,yFH;6DI6C,0BJ;sEKyD,sDL;kDM4B,yFN;qDOK;6BPa;yGKwB,6EL;SD0B;CHE;AYE;eCE,oDD;eCG,2DD;CZG;AcK;2BCgB;KDO;CdM;4BgBC;+CHE;KGG;ChBE;AiBI;eJE;SIS;WJE;KIQ;CjBC;AkBC;ClBG;oBmBE;CnBM"},"hasCjsExports":true},"type":"js/module"}]}